"use strict";
(() => {
var exports = {};
exports.id = 5405;
exports.ids = [5405,2888,7842];
exports.modules = {

/***/ 69222:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);
function cov_434f5wg60() {
  var path = "/workspace/meshplay/ui/assets/icons/technology/kubernetes.js";
  var hash = "c48092c0cff993efa202fa0b673e840683e21fba";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/assets/icons/technology/kubernetes.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 23
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "1": {
        start: {
          line: 4,
          column: 2
        },
        end: {
          line: 22,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 23
          },
          end: {
            line: 3,
            column: 24
          }
        },
        loc: {
          start: {
            line: 4,
            column: 2
          },
          end: {
            line: 22,
            column: 8
          }
        },
        line: 4
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 3,
            column: 32
          },
          end: {
            line: 3,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 3,
            column: 40
          },
          end: {
            line: 3,
            column: 46
          }
        }],
        line: 3
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 48
          },
          end: {
            line: 3,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 3,
            column: 57
          },
          end: {
            line: 3,
            column: 63
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c48092c0cff993efa202fa0b673e840683e21fba"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_434f5wg60 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_434f5wg60();



cov_434f5wg60().s[0]++;

const KubernetesIcon = ({
  fill,
  width = (cov_434f5wg60().b[0][0]++, '28px'),
  height = (cov_434f5wg60().b[1][0]++, '28px'),
  style
}) => {
  cov_434f5wg60().f[0]++;
  cov_434f5wg60().s[1]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: height,
    width: width,
    fill: fill,
    style: style,
    viewBox: "0 0 256 249",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      d: "m82.0851613 244.934194c-5.9458065 0-11.5612903-2.642581-15.36-7.432259l-57.80645162-71.845161c-3.79870968-4.789677-5.28516129-10.900645-3.79870968-16.846451l20.6451613-89.6825811c1.3212903-5.9458064 5.2851613-10.7354838 10.7354839-13.3780645l83.5716128-39.96903224c2.642581-1.32129032 5.615484-1.98193548 8.588387-1.98193548s5.945807.66064516 8.588387 1.98193548l83.571613 39.80387094c5.450323 2.6425807 9.414194 7.4322581 10.735484 13.3780645l20.645161 89.6825804c1.321291 5.945807 0 12.056774-3.798709 16.846452l-57.806452 71.845161c-3.79871 4.624516-9.414194 7.432258-15.36 7.432258z",
      fill: "#326de6"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      fill: "#326de6",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
        d: "m128.495484 7.92774194c2.312258 0 4.624516.49548387 6.771613 1.48645161l83.571613 39.80387095c4.294193 2.1470968 7.597419 6.1109678 8.588387 10.7354839l20.645161 89.6825806c1.156129 4.789677 0 9.744516-3.138064 13.543226l-57.806452 71.845161c-2.972903 3.79871-7.597419 5.945807-12.387097 5.945807h-92.6554837c-4.7896774 0-9.4141936-2.147097-12.3870968-5.945807l-57.8064516-71.845161c-2.97290322-3.79871-4.12903225-8.753549-3.13806451-13.543226l20.64516131-89.6825806c1.156129-4.7896774 4.2941935-8.7535484 8.5883871-10.7354839l83.5716132-39.96903224c2.147096-.82580645 4.624516-1.32129032 6.936774-1.32129032zm0-7.76258065c-3.468387 0-6.936774.82580645-10.24 2.31225806l-83.571613 39.96903225c-6.6064516 3.1380645-11.2309678 8.9187097-12.8825807 16.0206452l-20.64516127 89.6825802c-1.6516129 7.101936 0 14.369033 4.62451613 20.149678l57.80645164 71.845161c4.4593548 5.615484 11.2309677 8.753549 18.3329032 8.753549h92.655484c7.101935 0 13.873548-3.138065 18.332903-8.753549l57.806452-71.845161c4.624516-5.615484 6.276129-13.047742 4.624516-20.149678l-20.645161-89.6825802c-1.651613-7.1019355-6.276129-12.8825807-12.882581-16.0206452l-83.24129-39.96903225c-3.138065-1.48645161-6.606452-2.31225806-10.074839-2.31225806z"
      })
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      fill: "#fff",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
        d: "m212.232258 142.534194c-.165161 0-.165161 0 0 0h-.165161c-.165162 0-.330323 0-.330323-.165162-.330322 0-.660645-.165161-.990968-.165161-1.156129-.165161-2.147096-.330323-3.138064-.330323-.495484 0-.990968 0-1.651613-.165161h-.165161c-3.468387-.330322-6.276129-.660645-8.91871-1.486452-1.156129-.495483-1.486452-1.156129-1.816774-1.816774 0-.165161-.165161-.165161-.165161-.330322l-2.147097-.660645c.990968-7.59742.660645-15.525162-1.156129-23.287742-1.816774-7.762581-4.954839-15.0296778-9.249032-21.6361294l1.651612-1.4864516v-.3303226c0-.8258065.165162-1.6516129.825807-2.4774194 1.981935-1.8167742 4.459355-3.3032258 7.432258-5.12.495484-.3303225.990968-.4954838 1.486452-.8258064.990967-.4954839 1.816774-.9909678 2.807741-1.6516129.165162-.1651613.495484-.3303226.825807-.6606452.165161-.1651613.330323-.1651613.330323-.3303226 2.312258-1.9819354 2.807741-5.2851613 1.156129-7.432258-.825807-1.1561291-2.312259-1.8167742-3.79871-1.8167742-1.32129 0-2.477419.4954838-3.633549 1.3212903-.165161.1651613-.165161.1651613-.330322.3303226-.330323.1651613-.495484.4954839-.825807.6606451-.825806.8258065-1.486451 1.4864517-2.147096 2.3122581-.330323.3303226-.660645.8258065-1.156129 1.156129-2.312258 2.4774194-4.459355 4.4593549-6.606452 5.9458065-.495484.3303226-.990968.4954839-1.486452.4954839-.330322 0-.660645 0-.990967-.1651613h-.330323l-1.981935 1.3212903c-2.147097-2.3122581-4.459355-4.2941936-6.771613-6.276129-9.909678-7.7625807-21.966452-12.5522581-34.51871-13.7083871l-.165161-2.1470968c-.165162-.1651613-.165162-.1651613-.330323-.3303226-.495484-.4954839-1.156129-.9909677-1.32129-2.1470968-.165161-2.6425806.165161-5.6154838.495484-8.9187096v-.1651613c0-.4954839.165161-1.1561291.330322-1.6516129.165162-.9909678.330323-1.9819355.495484-3.1380646v-.9909677-.4954839c0-2.9729032-2.312258-5.4503225-5.12-5.4503225-1.32129 0-2.64258.6606451-3.633548 1.6516129-.990968.9909677-1.486452 2.312258-1.486452 3.7987096v.3303226.9909678c0 1.156129.165161 2.1470967.495484 3.1380645.165161.4954838.165161.9909677.330323 1.6516129v.1651613c.330322 3.3032258.825806 6.276129.495483 8.9187096-.165161 1.1561291-.825806 1.6516129-1.32129 2.1470968-.165161.1651613-.165161.1651613-.330322.3303226l-.165162 2.1470968c-2.972903.3303226-5.945806.6606451-8.918709 1.3212903-12.71742 2.8077419-23.9483875 9.2490323-32.7019359 18.4980645l-1.6516129-1.156129h-.3303226c-.3303225 0-.6606451.1651613-.9909677.1651613-.4954839 0-.9909677-.1651613-1.4864516-.4954839-2.1470968-1.4864516-4.2941936-3.6335484-6.6064516-6.1109677-.3303226-.3303226-.6606452-.8258065-1.1561291-1.1561291-.6606451-.8258064-1.3212903-1.4864516-2.1470967-2.312258-.1651613-.1651613-.4954839-.3303226-.8258065-.6606452-.1651613-.1651613-.3303226-.1651613-.3303226-.3303226-.9909677-.8258064-2.312258-1.3212903-3.6335483-1.3212903-1.4864517 0-2.9729033.6606452-3.7987097 1.8167742-1.6516129 2.1470968-1.1561291 5.4503226 1.156129 7.4322581.1651613 0 .1651613.1651612.3303226.1651612.3303226.1651613.4954839.4954839.8258064.6606452.9909678.6606452 1.8167742 1.156129 2.807742 1.6516129.4954838.1651613.9909677.4954839 1.4864516.8258065 2.9729032 1.8167742 5.4503226 3.3032258 7.4322581 5.12.8258064.8258064.8258064 1.6516129.8258064 2.4774193v.3303226l1.6516129 1.4864516c-.3303226.4954839-.6606452.8258065-.8258064 1.3212903-8.2580646 13.047742-11.3961291 28.407742-9.2490323 43.602581l-2.1470968.660645c0 .165161-.1651613.165161-.1651613.330322-.3303225.660646-.8258064 1.321291-1.8167742 1.816775-2.4774193.825806-5.4503225 1.156129-8.9187096 1.486451h-.1651613c-.4954839 0-1.1561291 0-1.6516129.165162-.9909678 0-1.9819355.165161-3.1380645.330322-.3303226 0-.6606452.165161-.9909678.165161-.1651613 0-.3303226 0-.4954839.165162-2.9729032.660645-4.7896774 3.468387-4.2941935 6.110967.4954839 2.312258 2.6425806 3.79871 5.2851613 3.79871.4954839 0 .8258064 0 1.3212903-.165161.1651613 0 .3303226 0 .3303226-.165161.3303226 0 .6606451-.165162.9909677-.165162 1.1561291-.330322 1.9819355-.660645 2.9729033-1.156129.4954838-.165161.9909677-.495484 1.4864516-.660645h.1651613c3.1380645-1.156129 5.9458064-2.147097 8.5883871-2.477419h.3303225c.9909678 0 1.6516129.495484 2.1470968.825806.1651613 0 .1651613.165161.3303226.165161l2.3122581-.330322c3.9638709 12.221935 11.5612903 23.12258 21.636129 31.050322 2.312258 1.816775 4.6245161 3.303226 7.1019355 4.789678l-.9909678 2.147097c0 .165161.1651613.165161.1651613.330322.3303226.660645.6606452 1.486452.3303226 2.642581-.9909677 2.477419-2.4774194 4.954839-4.2941936 7.76258v.165162c-.3303225.495484-.6606451.825806-.9909677 1.32129-.6606452.825807-1.156129 1.651613-1.8167742 2.642581-.1651613.165161-.3303226.495484-.4954839.825806 0 .165161-.1651612.330323-.1651612.330323-1.3212904 2.807742-.3303226 5.945806 2.1470967 7.101935.6606452.330323 1.3212903.495484 1.9819355.495484 1.9819355 0 3.963871-1.32129 4.9548387-3.138064 0-.165162.1651613-.330323.1651613-.330323.1651613-.330323.3303226-.660645.4954839-.825806.4954839-1.156129.6606451-1.981936.9909677-2.972904.1651613-.495484.3303226-.990967.4954839-1.486451 1.1561288-3.303226 1.9819358-5.945807 3.4683868-8.258065.660645-.990968 1.486452-1.156129 2.147097-1.486451.165161 0 .165161 0 .330323-.165162l1.156129-2.147096c7.267096 2.807741 15.194838 4.294193 23.12258 4.294193 4.789678 0 9.744516-.495484 14.369033-1.651613 2.972903-.660645 5.780645-1.486451 8.588387-2.477419l.990967 1.816774c.165162 0 .165162 0 .330323.165161.825806.165162 1.486452.495484 2.147097 1.486452 1.32129 2.312258 2.312258 5.12 3.468387 8.258064v.165162c.165161.495484.330322.990967.495484 1.486451.330322.990968.495484 1.981936.990967 2.972904.165162.330322.330323.495483.495484.825806 0 .165161.165162.330323.165162.330323.990967 1.981935 2.972903 3.138064 4.954838 3.138064.660646 0 1.321291-.165161 1.981936-.495484 1.156129-.660645 2.147097-1.651613 2.477419-2.972903.330323-1.32129.330323-2.807742-.330322-4.129032 0-.165162-.165162-.165162-.165162-.330323-.165161-.330322-.330322-.660645-.495484-.825806-.495483-.990968-1.156129-1.816774-1.816774-2.642581-.330322-.495484-.660645-.825806-.990967-1.32129v-.165162c-1.816775-2.807741-3.468388-5.285161-4.294194-7.76258-.330323-1.156129 0-1.816774.165161-2.642581 0-.165161.165162-.165161.165162-.330322l-.825807-1.981936c8.753548-5.12 16.185807-12.387097 21.80129-21.305806 2.972904-4.624516 5.285162-9.744516 6.936775-14.864516l1.981935.330322c.165161 0 .165161-.165161.330323-.165161.660645-.330323 1.156129-.825807 2.147096-.825807h.330323c2.642581.330323 5.450323 1.321291 8.588387 2.47742h.165161c.495484.165161.990968.495484 1.486452.660645.990968.495484 1.816774.825806 2.972903 1.156129.330323 0 .660645.165161.990968.165161.165161 0 .330323 0 .495484.165162.495484.165161.825806.165161 1.32129.165161 2.47742 0 4.624516-1.651613 5.285161-3.79871 0-1.981935-1.816774-4.624516-4.789677-5.450322zm-76.469677-8.092904-7.267097 3.468387-7.267097-3.468387-1.816774-7.76258 4.954839-6.276129h8.092903l4.954839 6.276129zm43.107096-17.176774c1.321291 5.615484 1.651613 11.230968 1.156129 16.68129l-25.269677-7.267096c-2.312258-.660645-3.633548-2.972904-3.138064-5.285162.165161-.660645.495483-1.32129.990967-1.816774l19.984516-18.00258c2.807742 4.624516 4.954839 9.909677 6.276129 15.690322zm-14.203871-25.5999999-21.636129 15.3599999c-1.816774 1.156129-4.294193.825807-5.780645-.990968-.495484-.495483-.660645-1.156129-.825806-1.816774l-1.486452-26.9212901c11.396129 1.3212903 21.801291 6.4412903 29.729032 14.3690322zm-47.896774-13.5432258c1.816774-.3303226 3.468387-.6606451 5.285162-.9909677l-1.486452 26.4258064c-.165161 2.312258-1.981936 4.294194-4.459355 4.294194-.660645 0-1.486452-.165162-1.981935-.495484l-21.966452-15.6903229c6.7716129-6.7716129 15.194839-11.396129 24.609032-13.5432258zm-32.5367739 23.4529037 19.6541939 17.507096c1.816774 1.486452 1.981935 4.294194.495483 6.110968-.495483.660645-1.156129 1.156129-1.981935 1.32129l-25.6 7.432258c-.9909677-11.230967 1.4864516-22.627096 7.4322581-32.371612zm-4.4593549 44.758709 26.2606448-4.459355c2.147097-.165161 4.129033 1.321291 4.624517 3.468387.165161.990968.165161 1.816775-.165162 2.642581l-10.074838 24.27871c-9.2490327-5.945807-16.6812908-15.029678-20.6451618-25.930323zm60.2838708 32.867097c-3.798709.825806-7.597419 1.32129-11.56129 1.32129-5.780645 0-11.396129-.990967-16.68129-2.64258l13.047741-23.618065c1.321291-1.486451 3.468388-2.147097 5.285162-1.156129.825806.495484 1.486451 1.156129 1.981935 1.816774l12.71742 22.95742c-1.486452.495484-3.138065.825806-4.789678 1.32129zm32.206452-22.957419c-4.129032 6.606451-9.579355 11.891613-15.855484 16.020645l-10.405161-24.939355c-.495484-1.981936.330322-4.129032 2.312258-5.12.660645-.330323 1.486451-.495484 2.312258-.495484l26.425806 4.459355c-.990968 3.633548-2.64258 6.936774-4.789677 10.074839z"
      })
    })]
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (KubernetesIcon);

/***/ }),

/***/ 26839:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var billboard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20722);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([billboard_js__WEBPACK_IMPORTED_MODULE_1__]);
billboard_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
function cov_1sacdso37d() {
  var path = "/workspace/meshplay/ui/components/BBChart.js";
  var hash = "2fa6dd8eb588911376c388d9d8775d49b1b9189d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/BBChart.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 31
        }
      },
      "2": {
        start: {
          line: 7,
          column: 2
        },
        end: {
          line: 13,
          column: 16
        }
      },
      "3": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 71
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 6
        }
      },
      "5": {
        start: {
          line: 11,
          column: 6
        },
        end: {
          line: 11,
          column: 22
        }
      },
      "6": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 15,
          column: 73
        }
      },
      "7": {
        start: {
          line: 15,
          column: 45
        },
        end: {
          line: 15,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        },
        loc: {
          start: {
            line: 4,
            column: 33
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 13
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 11
          },
          end: {
            line: 10,
            column: 12
          }
        },
        loc: {
          start: {
            line: 10,
            column: 17
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 15,
            column: 38
          },
          end: {
            line: 15,
            column: 39
          }
        },
        loc: {
          start: {
            line: 15,
            column: 45
          },
          end: {
            line: 15,
            column: 64
          }
        },
        line: 15
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2fa6dd8eb588911376c388d9d8775d49b1b9189d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sacdso37d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1sacdso37d();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




cov_1sacdso37d().s[0]++;

const BBChart = ({
  options
}) => {
  cov_1sacdso37d().f[0]++;
  const chartRef = (cov_1sacdso37d().s[1]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null));
  cov_1sacdso37d().s[2]++;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    cov_1sacdso37d().f[1]++;
    const chart = (cov_1sacdso37d().s[3]++, billboard_js__WEBPACK_IMPORTED_MODULE_1__.bb.generate(_objectSpread(_objectSpread({}, options), {}, {
      bindto: chartRef.current
    })));
    cov_1sacdso37d().s[4]++;
    return () => {
      cov_1sacdso37d().f[2]++;
      cov_1sacdso37d().s[5]++;
      chart.destroy();
    };
  }, [options]);
  cov_1sacdso37d().s[6]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx("div", {
    ref: chartRef,
    onClick: e => {
      cov_1sacdso37d().f[3]++;
      cov_1sacdso37d().s[7]++;
      return e.stopPropagation();
    }
  });
}; // Memoize the component to prevent unnecessary re-renders


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(BBChart));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 14305:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ ConnectionStatsChart)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var billboard_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20722);
/* harmony import */ var _BBChart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(26839);
/* harmony import */ var _utils_charts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81119);
/* harmony import */ var _General_ConnectClustersBtn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13522);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(41664);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _themes_app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(25879);
/* harmony import */ var _css_icons_styles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(52518);
/* harmony import */ var _components_MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(95484);
/* harmony import */ var _rtk_query_connection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(91187);
/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(72105);
/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _utils_can__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(54872);
/* harmony import */ var _utils_permission_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(24018);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([billboard_js__WEBPACK_IMPORTED_MODULE_2__, _BBChart__WEBPACK_IMPORTED_MODULE_3__, _utils_can__WEBPACK_IMPORTED_MODULE_12__]);
([billboard_js__WEBPACK_IMPORTED_MODULE_2__, _BBChart__WEBPACK_IMPORTED_MODULE_3__, _utils_can__WEBPACK_IMPORTED_MODULE_12__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_2ah4j9q5wt() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/charts/ConnectionCharts.js";
  var hash = "117f5fe8c78503c28b280a956be7dd77afeab554";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/charts/ConnectionCharts.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 31
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "1": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "2": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "3": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 23,
          column: 55
        }
      },
      "4": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "5": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "6": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 47
        }
      },
      "7": {
        start: {
          line: 45,
          column: 10
        },
        end: {
          line: 45,
          column: 23
        }
      },
      "8": {
        start: {
          line: 52,
          column: 10
        },
        end: {
          line: 52,
          column: 19
        }
      },
      "9": {
        start: {
          line: 58,
          column: 2
        },
        end: {
          line: 124,
          column: 4
        }
      },
      "10": {
        start: {
          line: 72,
          column: 31
        },
        end: {
          line: 72,
          column: 50
        }
      },
      "11": {
        start: {
          line: 88,
          column: 34
        },
        end: {
          line: 88,
          column: 53
        }
      }
    },
    fnMap: {
      "0": {
        name: "ConnectionStatsChart",
        decl: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 44
          }
        },
        loc: {
          start: {
            line: 17,
            column: 58
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 16
          }
        },
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 55
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 12
          }
        },
        loc: {
          start: {
            line: 24,
            column: 21
          },
          end: {
            line: 24,
            column: 46
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 16
          }
        },
        loc: {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 33,
            column: 7
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 15
          },
          end: {
            line: 51,
            column: 16
          }
        },
        loc: {
          start: {
            line: 51,
            column: 28
          },
          end: {
            line: 53,
            column: 9
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 72,
            column: 25
          }
        },
        loc: {
          start: {
            line: 72,
            column: 31
          },
          end: {
            line: 72,
            column: 50
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 27
          },
          end: {
            line: 88,
            column: 28
          }
        },
        loc: {
          start: {
            line: 88,
            column: 34
          },
          end: {
            line: 88,
            column: 53
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 47
          }
        }, {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 24,
            column: 53
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 64,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 18
          }
        }, {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 18
          }
        }],
        line: 62
      },
      "2": {
        loc: {
          start: {
            line: 103,
            column: 11
          },
          end: {
            line: 120,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 46
          }
        }, {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 119,
            column: 18
          }
        }],
        line: 103
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "117f5fe8c78503c28b280a956be7dd77afeab554"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ah4j9q5wt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2ah4j9q5wt();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


















function ConnectionStatsChart({
  classes
}) {
  cov_2ah4j9q5wt().f[0]++;
  const {
    data: statusData
  } = (cov_2ah4j9q5wt().s[0]++, (0,_rtk_query_connection__WEBPACK_IMPORTED_MODULE_10__/* .useGetAllConnectionStatusQuery */ .u$)());
  const router = (cov_2ah4j9q5wt().s[1]++, (0,next_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)());
  const chartData = (cov_2ah4j9q5wt().s[2]++, (cov_2ah4j9q5wt().b[0][0]++, statusData?.connections_status?.filter(data => {
    cov_2ah4j9q5wt().f[1]++;
    cov_2ah4j9q5wt().s[3]++;
    return (0,_utils_charts__WEBPACK_IMPORTED_MODULE_4__/* .isValidColumnName */ .iQ)(data.status);
  }).map(data => {
    cov_2ah4j9q5wt().f[2]++;
    cov_2ah4j9q5wt().s[4]++;
    return [data.status, data.count];
  })) || (cov_2ah4j9q5wt().b[0][1]++, []));
  const chartOptions = (cov_2ah4j9q5wt().s[5]++, {
    data: {
      columns: chartData,
      type: (0,billboard_js__WEBPACK_IMPORTED_MODULE_2__.donut)(),
      colors: (0,_utils_charts__WEBPACK_IMPORTED_MODULE_4__/* .dataToColors */ .eH)(chartData),
      onclick: function () {
        cov_2ah4j9q5wt().f[3]++;
        cov_2ah4j9q5wt().s[6]++;
        router.push('/management/connections');
      }
    },
    arc: {
      cornerRadius: {
        ratio: 0.05
      }
    },
    donut: {
      title: 'Connections\n by Status',
      padAngle: 0.03,
      label: {
        format: function (value) {
          cov_2ah4j9q5wt().f[4]++;
          cov_2ah4j9q5wt().s[7]++;
          return value;
        }
      }
    },
    tooltip: {
      format: {
        value: function (v) {
          cov_2ah4j9q5wt().f[5]++;
          cov_2ah4j9q5wt().s[8]++;
          return v;
        }
      }
    }
  });
  cov_2ah4j9q5wt().s[9]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx((next_link__WEBPACK_IMPORTED_MODULE_6___default()), {
    href: "/management/connections",
    style: {
      pointerEvents: !(0,_utils_can__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(_utils_permission_constants__WEBPACK_IMPORTED_MODULE_13__/* .keys.VIEW_CONNECTIONS.action */ .X.VIEW_CONNECTIONS.action, _utils_permission_constants__WEBPACK_IMPORTED_MODULE_13__/* .keys.VIEW_CONNECTIONS.subject */ .X.VIEW_CONNECTIONS.subject) ? (cov_2ah4j9q5wt().b[1][0]++, 'none') : (cov_2ah4j9q5wt().b[1][1]++, 'auto')
    },
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
      className: classes.dashboardSection,
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
        style: {
          display: 'flex',
          justifyContent: 'space-between'
        },
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Typography, {
          variant: "h6",
          gutterBottom: true,
          className: classes.link,
          children: "Connections"
        }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx("div", {
          onClick: e => {
            cov_2ah4j9q5wt().f[6]++;
            cov_2ah4j9q5wt().s[10]++;
            return e.stopPropagation();
          },
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_components_MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_9__/* .CustomTextTooltip */ .y, {
            interactive: true,
            variant: "standard",
            title: `Meshplay Connections are managed and unmanaged resources that either through discovery or manual entry can be assigned to one or more Environments. [Learn More](https://docs.meshplay.khulnasoft.com/concepts/logical/connections)`,
            placement: "left",
            children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.IconButton, {
              disableRipple: true,
              disableFocusRipple: true,
              disableTouchRipple: true,
              sx: {
                padding: '0px'
              },
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_icons__WEBPACK_IMPORTED_MODULE_11__.InfoOutlined, {
                color: _themes_app__WEBPACK_IMPORTED_MODULE_7__/* ["default"].palette.secondary.iconMain */ .ZP.palette.secondary.iconMain,
                style: _objectSpread(_objectSpread({}, _css_icons_styles__WEBPACK_IMPORTED_MODULE_8__/* .iconSmall */ .uE), {}, {
                  marginLeft: '0.5rem',
                  cursor: 'pointer'
                }),
                onClick: e => {
                  cov_2ah4j9q5wt().f[7]++;
                  cov_2ah4j9q5wt().s[11]++;
                  return e.stopPropagation();
                }
              })
            })
          })
        })]
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Box, {
        sx: {
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          alignContent: 'center',
          height: '100%'
        },
        children: chartData.length > 0 ? (cov_2ah4j9q5wt().b[2][0]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_BBChart__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
          options: chartOptions
        })) : (cov_2ah4j9q5wt().b[2][1]++, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
          style: {
            padding: '2rem',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            flexDirection: 'column'
          },
          children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Typography, {
            style: {
              fontSize: '1.5rem',
              marginBottom: '1rem'
            },
            align: "center",
            children: "No connections found in your clusters"
          }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_General_ConnectClustersBtn__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {})]
        }))
      })]
    })
  });
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 85004:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13266);
/* harmony import */ var _material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _BBChart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(26839);
/* harmony import */ var billboard_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20722);
/* harmony import */ var _utils_charts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(81119);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(41664);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _themes_app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(25879);
/* harmony import */ var _css_icons_styles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(52518);
/* harmony import */ var _components_MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(95484);
/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(72105);
/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _rtk_query_meshModel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(43102);
/* harmony import */ var _utils_can__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(54872);
/* harmony import */ var _utils_permission_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(24018);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_BBChart__WEBPACK_IMPORTED_MODULE_3__, billboard_js__WEBPACK_IMPORTED_MODULE_4__, _utils_can__WEBPACK_IMPORTED_MODULE_12__]);
([_BBChart__WEBPACK_IMPORTED_MODULE_3__, billboard_js__WEBPACK_IMPORTED_MODULE_4__, _utils_can__WEBPACK_IMPORTED_MODULE_12__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_bggtt6p4c() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/charts/DashboardMeshModelGraph.js";
  var hash = "61c07b052ebdeb7e45db291db786408516d4cca6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/charts/DashboardMeshModelGraph.js",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "1": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 77
        }
      },
      "2": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 29,
          column: 81
        }
      },
      "3": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 87
        }
      },
      "4": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 84
        }
      },
      "5": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "6": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "7": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 69,
          column: 3
        }
      },
      "8": {
        start: {
          line: 42,
          column: 11
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "9": {
        start: {
          line: 48,
          column: 10
        },
        end: {
          line: 48,
          column: 75
        }
      },
      "10": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 21
        }
      },
      "11": {
        start: {
          line: 71,
          column: 2
        },
        end: {
          line: 110,
          column: 4
        }
      },
      "12": {
        start: {
          line: 86,
          column: 31
        },
        end: {
          line: 86,
          column: 50
        }
      },
      "13": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 40
        }
      },
      "14": {
        start: {
          line: 114,
          column: 17
        },
        end: {
          line: 114,
          column: 28
        }
      },
      "15": {
        start: {
          line: 115,
          column: 22
        },
        end: {
          line: 115,
          column: 47
        }
      },
      "16": {
        start: {
          line: 117,
          column: 22
        },
        end: {
          line: 120,
          column: 3
        }
      },
      "17": {
        start: {
          line: 118,
          column: 10
        },
        end: {
          line: 118,
          column: 72
        }
      },
      "18": {
        start: {
          line: 118,
          column: 48
        },
        end: {
          line: 118,
          column: 71
        }
      },
      "19": {
        start: {
          line: 122,
          column: 23
        },
        end: {
          line: 158,
          column: 3
        }
      },
      "20": {
        start: {
          line: 123,
          column: 11
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "21": {
        start: {
          line: 129,
          column: 10
        },
        end: {
          line: 129,
          column: 72
        }
      },
      "22": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 25
        }
      },
      "23": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 33
        }
      },
      "24": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 192,
          column: 4
        }
      },
      "25": {
        start: {
          line: 168,
          column: 31
        },
        end: {
          line: 168,
          column: 50
        }
      },
      "26": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 40
        }
      },
      "27": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 207,
          column: 1
        }
      },
      "28": {
        start: {
          line: 196,
          column: 2
        },
        end: {
          line: 206,
          column: 4
        }
      },
      "29": {
        start: {
          line: 209,
          column: 0
        },
        end: {
          line: 209,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "MeshModelContructs",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 27
          }
        },
        loc: {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 11
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 62,
            column: 18
          }
        },
        loc: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 64,
            column: 11
          }
        },
        line: 62
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 86,
            column: 24
          },
          end: {
            line: 86,
            column: 25
          }
        },
        loc: {
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 86,
            column: 50
          }
        },
        line: 86
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 97,
            column: 27
          },
          end: {
            line: 97,
            column: 28
          }
        },
        loc: {
          start: {
            line: 97,
            column: 34
          },
          end: {
            line: 99,
            column: 19
          }
        },
        line: 97
      },
      "6": {
        name: "MeshModelCategories",
        decl: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 113,
            column: 28
          }
        },
        loc: {
          start: {
            line: 113,
            column: 42
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 113
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        loc: {
          start: {
            line: 118,
            column: 10
          },
          end: {
            line: 118,
            column: 72
          }
        },
        line: 118
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 118,
            column: 39
          },
          end: {
            line: 118,
            column: 40
          }
        },
        loc: {
          start: {
            line: 118,
            column: 48
          },
          end: {
            line: 118,
            column: 71
          }
        },
        line: 118
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 11
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 123
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 128,
            column: 17
          },
          end: {
            line: 128,
            column: 18
          }
        },
        loc: {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 130,
            column: 9
          }
        },
        line: 128
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 141,
            column: 18
          },
          end: {
            line: 141,
            column: 19
          }
        },
        loc: {
          start: {
            line: 141,
            column: 35
          },
          end: {
            line: 143,
            column: 11
          }
        },
        line: 141
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 148,
            column: 17
          },
          end: {
            line: 148,
            column: 18
          }
        },
        loc: {
          start: {
            line: 148,
            column: 30
          },
          end: {
            line: 150,
            column: 11
          }
        },
        line: 148
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 168,
            column: 24
          },
          end: {
            line: 168,
            column: 25
          }
        },
        loc: {
          start: {
            line: 168,
            column: 31
          },
          end: {
            line: 168,
            column: 50
          }
        },
        line: 168
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 179,
            column: 27
          },
          end: {
            line: 179,
            column: 28
          }
        },
        loc: {
          start: {
            line: 179,
            column: 34
          },
          end: {
            line: 181,
            column: 19
          }
        },
        line: 179
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 24
          }
        },
        loc: {
          start: {
            line: 195,
            column: 40
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 195
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 72
          }
        }, {
          start: {
            line: 28,
            column: 76
          },
          end: {
            line: 28,
            column: 77
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 76
          }
        }, {
          start: {
            line: 29,
            column: 80
          },
          end: {
            line: 29,
            column: 81
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 30,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 30,
            column: 82
          }
        }, {
          start: {
            line: 30,
            column: 86
          },
          end: {
            line: 30,
            column: 87
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 79
          }
        }, {
          start: {
            line: 31,
            column: 83
          },
          end: {
            line: 31,
            column: 84
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 75,
            column: 23
          },
          end: {
            line: 77,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 18
          }
        }, {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 18
          }
        }],
        line: 75
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "61c07b052ebdeb7e45db291db786408516d4cca6"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bggtt6p4c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_bggtt6p4c();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



















function MeshModelContructs({
  classes
}) {
  cov_bggtt6p4c().f[0]++;
  const params = (cov_bggtt6p4c().s[0]++, {
    page: 0,
    pagesize: '1'
  });
  const modelCount = (cov_bggtt6p4c().s[1]++, (cov_bggtt6p4c().b[0][0]++, (0,_rtk_query_meshModel__WEBPACK_IMPORTED_MODULE_11__/* .useGetMeshModelsQuery */ .zz)({
    params
  }).data?.total_count) || (cov_bggtt6p4c().b[0][1]++, 0));
  const componentCount = (cov_bggtt6p4c().s[2]++, (cov_bggtt6p4c().b[1][0]++, (0,_rtk_query_meshModel__WEBPACK_IMPORTED_MODULE_11__/* .useGetComponentsQuery */ .II)({
    params
  }).data?.total_count) || (cov_bggtt6p4c().b[1][1]++, 0));
  const relationshipCount = (cov_bggtt6p4c().s[3]++, (cov_bggtt6p4c().b[2][0]++, (0,_rtk_query_meshModel__WEBPACK_IMPORTED_MODULE_11__/* .useGetRelationshipsQuery */ .r$)({
    params
  }).data?.total_count) || (cov_bggtt6p4c().b[2][1]++, 0));
  const registrantsConut = (cov_bggtt6p4c().s[4]++, (cov_bggtt6p4c().b[3][0]++, (0,_rtk_query_meshModel__WEBPACK_IMPORTED_MODULE_11__/* .useGetRegistrantsQuery */ .ko)({
    params
  }).data?.total_count) || (cov_bggtt6p4c().b[3][1]++, 0)); // Data Cleanup

  const data = (cov_bggtt6p4c().s[5]++, [['Models', modelCount], ['Components', componentCount], ['Relationships', relationshipCount], ['Registrants', registrantsConut]]);
  const router = (cov_bggtt6p4c().s[6]++, (0,next_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)());
  const chartOptions = (cov_bggtt6p4c().s[7]++, (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    cov_bggtt6p4c().f[1]++;
    cov_bggtt6p4c().s[8]++;
    return {
      data: {
        columns: data,
        type: (0,billboard_js__WEBPACK_IMPORTED_MODULE_4__.donut)(),
        colors: (0,_utils_charts__WEBPACK_IMPORTED_MODULE_5__/* .dataToColors */ .eH)(data),
        onclick: function (d) {
          cov_bggtt6p4c().f[2]++;
          cov_bggtt6p4c().s[9]++;
          router.push(`/settings?settingsCategory=Registry&tab=${d.name}`);
        }
      },
      arc: {
        cornerRadius: {
          ratio: 0.05
        }
      },
      donut: {
        title: 'Registered\nCapabilities\nby Type',
        padAngle: 0.03
      },
      tooltip: {
        format: {
          value: function (v) {
            cov_bggtt6p4c().f[3]++;
            cov_bggtt6p4c().s[10]++;
            return v;
          }
        }
      }
    };
  }, [data]));
  cov_bggtt6p4c().s[11]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx((next_link__WEBPACK_IMPORTED_MODULE_6___default()), {
    href: "/settings?settingsCategory=Registry",
    style: {
      pointerEvents: !(0,_utils_can__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)(_utils_permission_constants__WEBPACK_IMPORTED_MODULE_13__/* .keys.VIEW_REGISTRY.action */ .X.VIEW_REGISTRY.action, _utils_permission_constants__WEBPACK_IMPORTED_MODULE_13__/* .keys.VIEW_REGISTRY.subject */ .X.VIEW_REGISTRY.subject) ? (cov_bggtt6p4c().b[4][0]++, 'none') : (cov_bggtt6p4c().b[4][1]++, 'auto')
    },
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
      className: classes.dashboardSection,
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
        style: {
          display: 'flex',
          justifyContent: 'space-between'
        },
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.Typography, {
          variant: "h6",
          gutterBottom: true,
          className: classes.link,
          children: "Registry"
        }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx("div", {
          onClick: e => {
            cov_bggtt6p4c().f[4]++;
            cov_bggtt6p4c().s[12]++;
            return e.stopPropagation();
          },
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_components_MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_9__/* .CustomTextTooltip */ .y, {
            placement: "left",
            interactive: true,
            variant: "standard",
            title: `The Meshplay Registry is a critical component acting as the central repository for all capabilities known to Meshplay. [Learn More](https://docs.meshplay.khulnasoft.com/concepts/logical/registry)`,
            children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.IconButton, {
              disableRipple: true,
              disableFocusRipple: true,
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__.InfoOutlined, {
                color: _themes_app__WEBPACK_IMPORTED_MODULE_7__/* ["default"].palette.secondary.iconMain */ .ZP.palette.secondary.iconMain,
                style: _objectSpread(_objectSpread({}, _css_icons_styles__WEBPACK_IMPORTED_MODULE_8__/* .iconSmall */ .uE), {}, {
                  marginLeft: '0.5rem',
                  cursor: 'pointer'
                }),
                onClick: e => {
                  cov_bggtt6p4c().f[5]++;
                  cov_bggtt6p4c().s[13]++;
                  e.stopPropagation();
                }
              })
            })
          })
        })]
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx("div", {
        style: {
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center'
        },
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_BBChart__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
          options: chartOptions
        })
      })]
    })
  });
}

function MeshModelCategories({
  classes
}) {
  cov_bggtt6p4c().f[6]++;
  const router = (cov_bggtt6p4c().s[14]++, (0,next_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)());
  const categoryMap = (cov_bggtt6p4c().s[15]++, (0,_rtk_query_meshModel__WEBPACK_IMPORTED_MODULE_11__/* .useGetCategoriesSummary */ .Eq)());
  const cleanedData = (cov_bggtt6p4c().s[16]++, (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    cov_bggtt6p4c().f[7]++;
    cov_bggtt6p4c().s[17]++;
    return Object.keys(categoryMap).map(key => {
      cov_bggtt6p4c().f[8]++;
      cov_bggtt6p4c().s[18]++;
      return [key, categoryMap[key]];
    });
  }, [categoryMap]));
  const chartOptions = (cov_bggtt6p4c().s[19]++, (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    cov_bggtt6p4c().f[9]++;
    cov_bggtt6p4c().s[20]++;
    return {
      data: {
        columns: cleanedData,
        colors: (0,_utils_charts__WEBPACK_IMPORTED_MODULE_5__/* .dataToColors */ .eH)(cleanedData),
        type: (0,billboard_js__WEBPACK_IMPORTED_MODULE_4__.donut)(),
        onclick: function () {
          cov_bggtt6p4c().f[10]++;
          cov_bggtt6p4c().s[21]++;
          router.push('/settings?settingsCategory=Registry&tab=Models');
        }
      },
      arc: {
        cornerRadius: {
          ratio: 0.05
        }
      },
      donut: {
        title: 'Models\nby Category',
        padAngle: 0.03,
        label: {
          format: function (value) {
            cov_bggtt6p4c().f[11]++;
            cov_bggtt6p4c().s[22]++;
            return value;
          }
        }
      },
      tooltip: {
        format: {
          value: function (v) {
            cov_bggtt6p4c().f[12]++;
            cov_bggtt6p4c().s[23]++;
            return `${v} Models`;
          }
        }
      },
      legend: {
        show: false
      }
    };
  }, [cleanedData]));
  cov_bggtt6p4c().s[24]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx((next_link__WEBPACK_IMPORTED_MODULE_6___default()), {
    href: "/settings?settingsCategory=Registry&tab=Models",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
      className: classes.dashboardSection,
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
        style: {
          display: 'flex',
          justifyContent: 'space-between'
        },
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.Typography, {
          variant: "h6",
          gutterBottom: true,
          className: classes.link,
          children: "Models by Category"
        }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx("div", {
          onClick: e => {
            cov_bggtt6p4c().f[13]++;
            cov_bggtt6p4c().s[25]++;
            return e.stopPropagation();
          },
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_components_MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_9__/* .CustomTextTooltip */ .y, {
            title: `Meshplay Models represent the fundamental building blocks of your infrastructure. Models are categorized by their function. For example, a model for Prometheus belongs in the "Observability and Analysis" category. [Learn More](https://docs.meshplay.khulnasoft.com/concepts/logical/models)`,
            placement: "left",
            variant: "standard",
            interactive: true,
            children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.IconButton, {
              disableRipple: true,
              disableFocusRipple: true,
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__.InfoOutlined, {
                color: _themes_app__WEBPACK_IMPORTED_MODULE_7__/* ["default"].palette.secondary.iconMain */ .ZP.palette.secondary.iconMain,
                style: _objectSpread(_objectSpread({}, _css_icons_styles__WEBPACK_IMPORTED_MODULE_8__/* .iconSmall */ .uE), {}, {
                  marginLeft: '0.5rem',
                  cursor: 'pointer'
                }),
                onClick: e => {
                  cov_bggtt6p4c().f[14]++;
                  cov_bggtt6p4c().s[26]++;
                  e.stopPropagation();
                }
              })
            })
          })
        })]
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx("div", {
        style: {
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center'
        },
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_BBChart__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
          options: chartOptions
        })
      })]
    })
  });
}

cov_bggtt6p4c().s[27]++;

const MeshModelGraph = ({
  classes
}) => {
  cov_bggtt6p4c().f[15]++;
  cov_bggtt6p4c().s[28]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)((_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_0___default()), {
    container: true,
    spacing: 2,
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx((_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_0___default()), {
      item: true,
      xs: 12,
      md: 6,
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(MeshModelCategories, {
        classes: classes
      })
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx((_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_0___default()), {
      item: true,
      xs: 12,
      md: 6,
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(MeshModelContructs, {
        classes: classes
      })
    })]
  });
};

cov_bggtt6p4c().s[29]++;
MeshModelGraph.displayName = 'MeshModalGraph';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MeshModelGraph);
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 71900:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ MeshplayConfigurationChart)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var billboard_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20722);
/* harmony import */ var _BBChart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(26839);
/* harmony import */ var _utils_charts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81119);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(41664);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _General_CreateDesignBtn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23756);
/* harmony import */ var _themes_app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(25879);
/* harmony import */ var _css_icons_styles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(52518);
/* harmony import */ var _components_MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(95484);
/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(72105);
/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _rtk_query_design__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(62);
/* harmony import */ var _rtk_query_filter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(23054);
/* harmony import */ var _utils_can__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(54872);
/* harmony import */ var _utils_permission_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(24018);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([billboard_js__WEBPACK_IMPORTED_MODULE_2__, _BBChart__WEBPACK_IMPORTED_MODULE_3__, _utils_can__WEBPACK_IMPORTED_MODULE_13__]);
([billboard_js__WEBPACK_IMPORTED_MODULE_2__, _BBChart__WEBPACK_IMPORTED_MODULE_3__, _utils_can__WEBPACK_IMPORTED_MODULE_13__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_1z0r0zmdcn() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/charts/MeshplayConfigurationCharts.js";
  var hash = "253a114a898273b3fbe016fca033172a419ea742";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/charts/MeshplayConfigurationCharts.js",
    statementMap: {
      "0": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 28
        }
      },
      "1": {
        start: {
          line: 21,
          column: 36
        },
        end: {
          line: 21,
          column: 48
        }
      },
      "2": {
        start: {
          line: 23,
          column: 55
        },
        end: {
          line: 26,
          column: 4
        }
      },
      "3": {
        start: {
          line: 28,
          column: 53
        },
        end: {
          line: 31,
          column: 4
        }
      },
      "4": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "5": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "6": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 87
        }
      },
      "7": {
        start: {
          line: 35,
          column: 33
        },
        end: {
          line: 35,
          column: 85
        }
      },
      "8": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 43,
          column: 34
        }
      },
      "9": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "10": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 86
        }
      },
      "11": {
        start: {
          line: 41,
          column: 33
        },
        end: {
          line: 41,
          column: 84
        }
      },
      "12": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 76,
          column: 3
        }
      },
      "13": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 74
        }
      },
      "14": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 51
        }
      },
      "15": {
        start: {
          line: 65,
          column: 10
        },
        end: {
          line: 65,
          column: 23
        }
      },
      "16": {
        start: {
          line: 72,
          column: 10
        },
        end: {
          line: 72,
          column: 19
        }
      },
      "17": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 139,
          column: 4
        }
      },
      "18": {
        start: {
          line: 90,
          column: 31
        },
        end: {
          line: 90,
          column: 50
        }
      },
      "19": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 102,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "MeshplayConfigurationChart",
        decl: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 50
          }
        },
        loc: {
          start: {
            line: 19,
            column: 64
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        loc: {
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 20
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 35,
            column: 85
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        loc: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 43,
            column: 3
          }
        },
        line: 39
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 20
          }
        },
        loc: {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 84
          }
        },
        line: 41
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 16
          }
        },
        loc: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 53,
            column: 7
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        loc: {
          start: {
            line: 64,
            column: 33
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 16
          }
        },
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 73,
            column: 9
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 90,
            column: 25
          }
        },
        loc: {
          start: {
            line: 90,
            column: 31
          },
          end: {
            line: 90,
            column: 50
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 101,
            column: 27
          },
          end: {
            line: 101,
            column: 28
          }
        },
        loc: {
          start: {
            line: 101,
            column: 34
          },
          end: {
            line: 103,
            column: 19
          }
        },
        line: 101
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 22
          }
        }, {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 48
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 21
          }
        }, {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 82,
            column: 23
          },
          end: {
            line: 82,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 83
          },
          end: {
            line: 82,
            column: 89
          }
        }, {
          start: {
            line: 82,
            column: 92
          },
          end: {
            line: 82,
            column: 98
          }
        }],
        line: 82
      },
      "5": {
        loc: {
          start: {
            line: 118,
            column: 11
          },
          end: {
            line: 135,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 46
          }
        }, {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 134,
            column: 18
          }
        }],
        line: 118
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "253a114a898273b3fbe016fca033172a419ea742"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1z0r0zmdcn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1z0r0zmdcn();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






 // import { useNotification } from '../../../utils/hooks/useNotification';













function MeshplayConfigurationChart({
  classes
}) {
  cov_1z0r0zmdcn().f[0]++;
  const router = (cov_1z0r0zmdcn().s[0]++, (0,next_router__WEBPACK_IMPORTED_MODULE_15__.useRouter)());
  const [chartData, setChartData] = (cov_1z0r0zmdcn().s[1]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]));
  const {
    data: patternsData,
    error: patternsError
  } = (cov_1z0r0zmdcn().s[2]++, (0,_rtk_query_design__WEBPACK_IMPORTED_MODULE_11__/* .useGetPatternsQuery */ .np)({
    page: 0,
    pagesize: 1
  }));
  const {
    data: filtersData,
    error: filtersError
  } = (cov_1z0r0zmdcn().s[3]++, (0,_rtk_query_filter__WEBPACK_IMPORTED_MODULE_12__/* .useGetFiltersQuery */ .Lf)({
    page: 0,
    pagesize: 1
  }));
  cov_1z0r0zmdcn().s[4]++;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    cov_1z0r0zmdcn().f[1]++;
    cov_1z0r0zmdcn().s[5]++;

    if ((cov_1z0r0zmdcn().b[1][0]++, !patternsError) && (cov_1z0r0zmdcn().b[1][1]++, patternsData?.patterns)) {
      cov_1z0r0zmdcn().b[0][0]++;
      cov_1z0r0zmdcn().s[6]++;
      setChartData(prevData => {
        cov_1z0r0zmdcn().f[2]++;
        cov_1z0r0zmdcn().s[7]++;
        return [...prevData, ['Designs', patternsData.total_count]];
      });
    } else {
      cov_1z0r0zmdcn().b[0][1]++;
    }
  }, [patternsData, patternsError]);
  cov_1z0r0zmdcn().s[8]++;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    cov_1z0r0zmdcn().f[3]++;
    cov_1z0r0zmdcn().s[9]++;

    if ((cov_1z0r0zmdcn().b[3][0]++, !filtersError) && (cov_1z0r0zmdcn().b[3][1]++, filtersData?.filters)) {
      cov_1z0r0zmdcn().b[2][0]++;
      cov_1z0r0zmdcn().s[10]++;
      setChartData(prevData => {
        cov_1z0r0zmdcn().f[4]++;
        cov_1z0r0zmdcn().s[11]++;
        return [...prevData, ['Filters', filtersData.total_count]];
      });
    } else {
      cov_1z0r0zmdcn().b[2][1]++;
    }
  }, [filtersData, filtersError]);
  const chartOptions = (cov_1z0r0zmdcn().s[12]++, {
    data: {
      columns: chartData,
      type: (0,billboard_js__WEBPACK_IMPORTED_MODULE_2__.donut)(),
      colors: (0,_utils_charts__WEBPACK_IMPORTED_MODULE_4__/* .dataToColors */ .eH)(chartData),
      onclick: function (d) {
        cov_1z0r0zmdcn().f[5]++;
        const routeName = (cov_1z0r0zmdcn().s[13]++, d.name.charAt(0).toLowerCase() + d.name.slice(1));
        cov_1z0r0zmdcn().s[14]++;
        router.push(`/configuration/${routeName}`);
      }
    },
    arc: {
      cornerRadius: {
        ratio: 0.05
      }
    },
    donut: {
      title: 'Content\nby Type',
      padAngle: 0.03,
      label: {
        format: function (value) {
          cov_1z0r0zmdcn().f[6]++;
          cov_1z0r0zmdcn().s[15]++;
          return value;
        }
      }
    },
    tooltip: {
      format: {
        value: function (v) {
          cov_1z0r0zmdcn().f[7]++;
          cov_1z0r0zmdcn().s[16]++;
          return v;
        }
      }
    }
  });
  cov_1z0r0zmdcn().s[17]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx((next_link__WEBPACK_IMPORTED_MODULE_5___default()), {
    href: "/configuration/designs",
    style: {
      pointerEvents: !(0,_utils_can__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(_utils_permission_constants__WEBPACK_IMPORTED_MODULE_14__/* .keys.VIEW_DESIGNS.action */ .X.VIEW_DESIGNS.action, _utils_permission_constants__WEBPACK_IMPORTED_MODULE_14__/* .keys.VIEW_DESIGNS.subject */ .X.VIEW_DESIGNS.subject) ? (cov_1z0r0zmdcn().b[4][0]++, 'none') : (cov_1z0r0zmdcn().b[4][1]++, 'auto')
    },
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxs)("div", {
      className: classes.dashboardSection,
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxs)("div", {
        style: {
          display: 'flex',
          justifyContent: 'space-between'
        },
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Typography, {
          variant: "h6",
          gutterBottom: true,
          className: classes.link,
          children: "Configuration"
        }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx("div", {
          onClick: e => {
            cov_1z0r0zmdcn().f[8]++;
            cov_1z0r0zmdcn().s[18]++;
            return e.stopPropagation();
          },
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx(_components_MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_9__/* .CustomTextTooltip */ .y, {
            placement: "left",
            interactive: true,
            variant: "standard",
            title: `Meshplay Designs are descriptive, declarative characterizations of how your Kubernetes infrastructure should be configured. [Learn more](https://docs.meshplay.khulnasoft.com/concepts/logical/designs)`,
            children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.IconButton, {
              disableRipple: true,
              disableFocusRipple: true,
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx(_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__.InfoOutlined, {
                color: _themes_app__WEBPACK_IMPORTED_MODULE_7__/* ["default"].palette.secondary.iconMain */ .ZP.palette.secondary.iconMain,
                style: _objectSpread(_objectSpread({}, _css_icons_styles__WEBPACK_IMPORTED_MODULE_8__/* .iconSmall */ .uE), {}, {
                  marginLeft: '0.5rem',
                  cursor: 'pointer'
                }),
                onClick: e => {
                  cov_1z0r0zmdcn().f[9]++;
                  cov_1z0r0zmdcn().s[19]++;
                  e.stopPropagation();
                }
              })
            })
          })
        })]
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Box, {
        sx: {
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          alignContent: 'center',
          height: '100%'
        },
        children: chartData.length > 0 ? (cov_1z0r0zmdcn().b[5][0]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx(_BBChart__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
          options: chartOptions
        })) : (cov_1z0r0zmdcn().b[5][1]++, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsxs)("div", {
          style: {
            padding: '2rem',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            flexDirection: 'column'
          },
          children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Typography, {
            style: {
              fontSize: '1.5rem',
              marginBottom: '1rem'
            },
            align: "center",
            children: "No Meshplay configuration found"
          }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_16__.jsx(_General_CreateDesignBtn__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {})]
        }))
      })]
    })
  });
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 39328:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);
function cov_bqd36479e() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/images/meshplay-icon.js";
  var hash = "0d8f6bbb6702bb6292dac05981a741d458e550fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/images/meshplay-icon.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 21
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "1": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 48,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 21
          },
          end: {
            line: 3,
            column: 22
          }
        },
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 48,
            column: 8
          }
        },
        line: 11
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 25
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 9,
            column: 27
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0d8f6bbb6702bb6292dac05981a741d458e550fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bqd36479e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_bqd36479e();



cov_bqd36479e().s[0]++;

const MeshplayIcon = ({
  width,
  height,
  fill,
  style,
  primaryFill = (cov_bqd36479e().b[0][0]++, '#00b39f'),
  secondaryFill = (cov_bqd36479e().b[1][0]++, '#00d3a9')
}) => {
  cov_bqd36479e().f[0]++;
  cov_bqd36479e().s[1]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    height: height,
    viewBox: "0 0 134.95 135.02",
    width: width,
    fill: fill,
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("defs", {
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("style", {
        children: '.cls-1 {fill: #00d3a9;} .cls-2 {fill: #00b39f;}'
      })
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: primaryFill,
      points: "69.49 31.82 69.49 64.07 97.44 47.89 69.49 31.82"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: primaryFill,
      points: "69.49 70.81 69.49 103.22 97.7 87.09 69.49 70.81"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: secondaryFill,
      points: "65.47 63.85 65.47 32.09 37.87 47.92 65.47 63.85"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: secondaryFill,
      d: "M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: secondaryFill,
      points: "65.47 103.06 65.47 71.05 37.8 87.07 65.47 103.06"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: primaryFill,
      points: "35.54 122.63 63.56 106.61 35.54 90.41 35.54 122.63"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: secondaryFill,
      points: "99.61 122.8 99.61 90.63 71.63 106.63 99.61 122.8"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: secondaryFill,
      d: "M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: primaryFill,
      points: "103.64 83.69 131.76 67.61 103.64 51.45 103.64 83.69"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: secondaryFill,
      points: "99.61 44.5 99.61 12.52 71.76 28.49 99.61 44.5"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: secondaryFill,
      points: "99.61 83.55 99.61 51.28 71.7 67.44 99.61 83.55"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: secondaryFill,
      points: "67.48 135.02 67.49 135.02 67.48 135.02 67.48 135.02"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: primaryFill,
      points: "35.54 51.22 35.54 83.73 63.66 67.45 35.54 51.22"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: secondaryFill,
      d: "M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: primaryFill,
      points: "35.54 12.3 35.54 44.62 63.68 28.48 35.54 12.3"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: secondaryFill,
      d: "M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: primaryFill,
      d: "M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: primaryFill,
      d: "M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: primaryFill,
      d: "M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: secondaryFill,
      d: "M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: primaryFill,
      d: "M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: primaryFill,
      d: "M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: secondaryFill,
      d: "M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", {
      fill: primaryFill,
      d: "M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", {
      fill: secondaryFill,
      points: "31.51 83.44 31.51 51.56 3.83 67.43 31.51 83.44"
    })]
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MeshplayIcon);

/***/ }),

/***/ 97535:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6022);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(86695);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(48308);
/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(93113);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _lib_store__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(68885);
/* harmony import */ var _resources_config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(96467);
/* harmony import */ var _resources_resources_table__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(87893);
/* harmony import */ var _resources_resources_sub_menu__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(59701);
/* harmony import */ var _overview__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(27126);
/* harmony import */ var _assets_icons_technology_kubernetes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(69222);
/* harmony import */ var _images_meshplay_icon_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(39328);
/* harmony import */ var _tabpanel__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(93429);
/* harmony import */ var _MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(95484);
/* harmony import */ var _css_icons_styles__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(52518);
/* harmony import */ var _utils_dimension__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(37842);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_5__, _resources_config__WEBPACK_IMPORTED_MODULE_8__, _resources_resources_table__WEBPACK_IMPORTED_MODULE_9__, _resources_resources_sub_menu__WEBPACK_IMPORTED_MODULE_10__, _overview__WEBPACK_IMPORTED_MODULE_11__]);
([_utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_5__, _resources_config__WEBPACK_IMPORTED_MODULE_8__, _resources_resources_table__WEBPACK_IMPORTED_MODULE_9__, _resources_resources_sub_menu__WEBPACK_IMPORTED_MODULE_10__, _overview__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_2pog50v3rk() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/index.js";
  var hash = "31c553e51238b127030594bb7b2ddab4a74df1ce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/index.js",
    statementMap: {
      "0": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 117,
          column: 2
        }
      },
      "1": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "2": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 146,
          column: 1
        }
      },
      "3": {
        start: {
          line: 119,
          column: 17
        },
        end: {
          line: 119,
          column: 28
        }
      },
      "4": {
        start: {
          line: 120,
          column: 44
        },
        end: {
          line: 120,
          column: 50
        }
      },
      "5": {
        start: {
          line: 122,
          column: 27
        },
        end: {
          line: 122,
          column: 63
        }
      },
      "6": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 123,
          column: 41
        }
      },
      "7": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 134,
          column: 3
        }
      },
      "8": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "9": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "10": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 133,
          column: 6
        }
      },
      "11": {
        start: {
          line: 136,
          column: 39
        },
        end: {
          line: 143,
          column: 3
        }
      },
      "12": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "13": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "14": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "15": {
        start: {
          line: 145,
          column: 2
        },
        end: {
          line: 145,
          column: 97
        }
      },
      "16": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 148,
          column: 74
        }
      },
      "17": {
        start: {
          line: 149,
          column: 27
        },
        end: {
          line: 233,
          column: 1
        }
      },
      "18": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 24
        }
      },
      "19": {
        start: {
          line: 153,
          column: 35
        },
        end: {
          line: 155,
          column: 3
        }
      },
      "20": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 87
        }
      },
      "21": {
        start: {
          line: 154,
          column: 56
        },
        end: {
          line: 154,
          column: 85
        }
      },
      "22": {
        start: {
          line: 157,
          column: 30
        },
        end: {
          line: 159,
          column: 3
        }
      },
      "23": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 39
        }
      },
      "24": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 41
        }
      },
      "25": {
        start: {
          line: 162,
          column: 2
        },
        end: {
          line: 232,
          column: 4
        }
      },
      "26": {
        start: {
          line: 171,
          column: 14
        },
        end: {
          line: 171,
          column: 58
        }
      },
      "27": {
        start: {
          line: 179,
          column: 14
        },
        end: {
          line: 195,
          column: 16
        }
      },
      "28": {
        start: {
          line: 204,
          column: 10
        },
        end: {
          line: 228,
          column: 21
        }
      },
      "29": {
        start: {
          line: 235,
          column: 27
        },
        end: {
          line: 237,
          column: 2
        }
      },
      "30": {
        start: {
          line: 235,
          column: 42
        },
        end: {
          line: 237,
          column: 1
        }
      },
      "31": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 247,
          column: 1
        }
      },
      "32": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 42
        }
      },
      "33": {
        start: {
          line: 241,
          column: 30
        },
        end: {
          line: 241,
          column: 62
        }
      },
      "34": {
        start: {
          line: 243,
          column: 2
        },
        end: {
          line: 246,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 16
          }
        },
        loc: {
          start: {
            line: 20,
            column: 27
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 118,
            column: 27
          },
          end: {
            line: 118,
            column: 28
          }
        },
        loc: {
          start: {
            line: 118,
            column: 33
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 118
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 125,
            column: 29
          }
        },
        loc: {
          start: {
            line: 125,
            column: 50
          },
          end: {
            line: 134,
            column: 3
          }
        },
        line: 125
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 136,
            column: 40
          }
        },
        loc: {
          start: {
            line: 136,
            column: 53
          },
          end: {
            line: 143,
            column: 3
          }
        },
        line: 136
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 149,
            column: 27
          },
          end: {
            line: 149,
            column: 28
          }
        },
        loc: {
          start: {
            line: 149,
            column: 92
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 149
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 153,
            column: 35
          },
          end: {
            line: 153,
            column: 36
          }
        },
        loc: {
          start: {
            line: 153,
            column: 57
          },
          end: {
            line: 155,
            column: 3
          }
        },
        line: 153
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 154,
            column: 42
          },
          end: {
            line: 154,
            column: 43
          }
        },
        loc: {
          start: {
            line: 154,
            column: 56
          },
          end: {
            line: 154,
            column: 85
          }
        },
        line: 154
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 157,
            column: 30
          },
          end: {
            line: 157,
            column: 31
          }
        },
        loc: {
          start: {
            line: 157,
            column: 41
          },
          end: {
            line: 159,
            column: 3
          }
        },
        line: 157
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 170,
            column: 22
          },
          end: {
            line: 170,
            column: 23
          }
        },
        loc: {
          start: {
            line: 170,
            column: 35
          },
          end: {
            line: 172,
            column: 13
          }
        },
        line: 170
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 178,
            column: 38
          },
          end: {
            line: 178,
            column: 39
          }
        },
        loc: {
          start: {
            line: 178,
            column: 57
          },
          end: {
            line: 196,
            column: 13
          }
        },
        line: 178
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 203,
            column: 42
          },
          end: {
            line: 203,
            column: 43
          }
        },
        loc: {
          start: {
            line: 204,
            column: 10
          },
          end: {
            line: 228,
            column: 21
          }
        },
        line: 204
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 235,
            column: 27
          },
          end: {
            line: 235,
            column: 28
          }
        },
        loc: {
          start: {
            line: 235,
            column: 42
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 235
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 239,
            column: 25
          }
        },
        loc: {
          start: {
            line: 239,
            column: 35
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 239
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 13
          },
          end: {
            line: 33,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 45
          },
          end: {
            line: 33,
            column: 54
          }
        }, {
          start: {
            line: 33,
            column: 57
          },
          end: {
            line: 33,
            column: 78
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 37,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 37,
            column: 62
          }
        }, {
          start: {
            line: 37,
            column: 65
          },
          end: {
            line: 37,
            column: 74
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 55
          },
          end: {
            line: 43,
            column: 64
          }
        }, {
          start: {
            line: 43,
            column: 67
          },
          end: {
            line: 43,
            column: 88
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 122,
            column: 27
          },
          end: {
            line: 122,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 27
          },
          end: {
            line: 122,
            column: 49
          }
        }, {
          start: {
            line: 122,
            column: 53
          },
          end: {
            line: 122,
            column: 63
          }
        }],
        line: 122
      },
      "4": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "5": {
        loc: {
          start: {
            line: 130,
            column: 35
          },
          end: {
            line: 130,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 35
          },
          end: {
            line: 130,
            column: 51
          }
        }, {
          start: {
            line: 130,
            column: 55
          },
          end: {
            line: 130,
            column: 77
          }
        }],
        line: 130
      },
      "6": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "7": {
        loc: {
          start: {
            line: 173,
            column: 21
          },
          end: {
            line: 173,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 36
          },
          end: {
            line: 173,
            column: 48
          }
        }, {
          start: {
            line: 173,
            column: 51
          },
          end: {
            line: 173,
            column: 62
          }
        }],
        line: 173
      },
      "8": {
        loc: {
          start: {
            line: 186,
            column: 22
          },
          end: {
            line: 190,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 24
          },
          end: {
            line: 187,
            column: 58
          }
        }, {
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 189,
            column: 60
          }
        }],
        line: 186
      },
      "9": {
        loc: {
          start: {
            line: 205,
            column: 13
          },
          end: {
            line: 227,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 206,
            column: 14
          },
          end: {
            line: 215,
            column: 16
          }
        }, {
          start: {
            line: 217,
            column: 14
          },
          end: {
            line: 226,
            column: 16
          }
        }],
        line: 205
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "31c553e51238b127030594bb7b2ddab4a74df1ce"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pog50v3rk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2pog50v3rk();





















cov_2pog50v3rk().s[0]++;

const styles = theme => {
  cov_2pog50v3rk().f[0]++;
  cov_2pog50v3rk().s[1]++;
  return {
    wrapperClss: {
      flexGrow: 1,
      maxWidth: '100vw',
      height: 'auto'
    },
    tab: {
      width: 'max(6rem, 20%)',
      margin: 0,
      minWidth: 40,
      paddingLeft: 0,
      paddingRight: 0,
      '&.Mui-selected': {
        color: theme.palette.type === 'dark' ? (cov_2pog50v3rk().b[0][0]++, '#00B39F') : (cov_2pog50v3rk().b[0][1]++, theme.palette.primary)
      }
    },
    subMenuTab: {
      backgroundColor: theme.palette.type === 'dark' ? (cov_2pog50v3rk().b[1][0]++, '#212121') : (cov_2pog50v3rk().b[1][1]++, '#f5f5f5')
    },
    tabs: {
      width: '100%',
      // flexGrow: 1,
      '& .MuiTabs-indicator': {
        backgroundColor: theme.palette.type === 'dark' ? (cov_2pog50v3rk().b[2][0]++, '#00B39F') : (cov_2pog50v3rk().b[2][1]++, theme.palette.primary)
      },
      '& .MuiTab-fullWidth': {// flexBasis: 'unset', // Remove flex-basis
      }
    },
    icon: {
      display: 'inline',
      verticalAlign: 'text-top',
      width: theme.spacing(1.75),
      marginLeft: theme.spacing(0.5)
    },
    iconText: {
      display: 'inline',
      verticalAlign: 'middle'
    },
    backToPlay: {
      margin: theme.spacing(2)
    },
    link: {
      cursor: 'pointer'
    },
    container: {
      display: 'flex',
      justifyContent: 'center',
      marginTop: theme.spacing(2)
    },
    paper: {
      maxWidth: '90%',
      margin: 'auto',
      overflow: 'hidden'
    },
    topToolbar: {
      marginBottom: '2rem',
      display: 'flex',
      justifyContent: 'space-between',
      paddingLeft: '1rem',
      maxWidth: '90%'
    },
    dashboardSection: {
      backgroundColor: theme.palette.secondary.elevatedComponents,
      padding: theme.spacing(2),
      borderRadius: 4,
      height: '100%'
    },
    cardHeader: {
      fontSize: theme.spacing(2)
    },
    card: {
      height: '100%',
      marginTop: theme.spacing(2)
    },
    cardContent: {
      height: '100%'
    },
    boxWrapper: {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'end',
      flexDirection: 'row',
      flexWrap: 'wrap',
      height: '60vh',
      borderRadius: 0,
      color: 'white',
      ['@media (max-width: 455px)']: {
        width: '100%'
      },
      zIndex: 5
    },
    box: {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      flexDirection: 'column',
      width: 300,
      height: 300,
      backgroundColor: theme.palette.secondary.dark,
      border: '0px solid #000',
      boxShadow: theme.shadows[5],
      margin: theme.spacing(2),
      cursor: 'pointer'
    }
  };
};

cov_2pog50v3rk().s[2]++;

const useDashboardRouter = () => {
  cov_2pog50v3rk().f[1]++;
  const router = (cov_2pog50v3rk().s[3]++, (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)());
  const {
    query,
    push: pushRoute,
    route
  } = (cov_2pog50v3rk().s[4]++, router);
  const resourceCategory = (cov_2pog50v3rk().s[5]++, (cov_2pog50v3rk().b[3][0]++, query.resourceCategory) || (cov_2pog50v3rk().b[3][1]++, 'Overview'));
  const selectedResource = (cov_2pog50v3rk().s[6]++, query.resource);
  cov_2pog50v3rk().s[7]++;

  const changeResourceTab = resourceCategory => {
    cov_2pog50v3rk().f[2]++;
    cov_2pog50v3rk().s[8]++;

    if (query.resourceCategory === resourceCategory) {
      cov_2pog50v3rk().b[4][0]++;
      cov_2pog50v3rk().s[9]++;
      return;
    } else {
      cov_2pog50v3rk().b[4][1]++;
    }

    cov_2pog50v3rk().s[10]++;
    pushRoute(`${route}?resourceCategory=${(cov_2pog50v3rk().b[5][0]++, resourceCategory) || (cov_2pog50v3rk().b[5][1]++, query.resourceCategory)}`, undefined, {
      shallow: true
    });
  };

  cov_2pog50v3rk().s[11]++;

  const handleChangeSelectedResource = resource => {
    cov_2pog50v3rk().f[3]++;
    cov_2pog50v3rk().s[12]++;

    if (query.resource === resource) {
      cov_2pog50v3rk().b[6][0]++;
      cov_2pog50v3rk().s[13]++;
      return;
    } else {
      cov_2pog50v3rk().b[6][1]++;
    }

    cov_2pog50v3rk().s[14]++;
    pushRoute(`${route}?resourceCategory=${resourceCategory}&resource=${resource}`, undefined, {
      shallow: true
    });
  };

  cov_2pog50v3rk().s[15]++;
  return {
    resourceCategory,
    changeResourceTab,
    selectedResource,
    handleChangeSelectedResource
  };
};

const ResourceCategoryTabs = (cov_2pog50v3rk().s[16]++, ['Overview', ...Object.keys(_resources_config__WEBPACK_IMPORTED_MODULE_8__/* .ResourcesConfig */ .CN)]);
cov_2pog50v3rk().s[17]++;

const DashboardComponent = ({
  classes,
  k8sconfig,
  selectedK8sContexts,
  updateProgress
}) => {
  cov_2pog50v3rk().f[4]++;
  const {
    resourceCategory,
    changeResourceTab,
    selectedResource,
    handleChangeSelectedResource
  } = (cov_2pog50v3rk().s[18]++, useDashboardRouter());
  cov_2pog50v3rk().s[19]++;

  const getResourceCategoryIndex = resourceCategory => {
    cov_2pog50v3rk().f[5]++;
    cov_2pog50v3rk().s[20]++;
    return ResourceCategoryTabs.findIndex(resource => {
      cov_2pog50v3rk().f[6]++;
      cov_2pog50v3rk().s[21]++;
      return resource === resourceCategory;
    });
  };

  cov_2pog50v3rk().s[22]++;

  const getResourceCategory = index => {
    cov_2pog50v3rk().f[7]++;
    cov_2pog50v3rk().s[23]++;
    return ResourceCategoryTabs[index];
  };

  const {
    width
  } = (cov_2pog50v3rk().s[24]++, (0,_utils_dimension__WEBPACK_IMPORTED_MODULE_17__/* .useWindowDimensions */ .d)());
  cov_2pog50v3rk().s[25]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("div", {
      className: classes.wrapperClss,
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_6__.Paper, {
        square: true,
        className: classes.wrapperClss,
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_6__.Tabs, {
          value: getResourceCategoryIndex(resourceCategory),
          indicatorColor: "primary",
          className: classes.tabs,
          onChange: (_e, val) => {
            cov_2pog50v3rk().f[8]++;
            cov_2pog50v3rk().s[26]++;
            changeResourceTab(getResourceCategory(val));
          },
          variant: width < 1280 ? (cov_2pog50v3rk().b[7][0]++, 'scrollable') : (cov_2pog50v3rk().b[7][1]++, 'fullWidth'),
          scrollButtons: "on",
          textColor: "primary",
          centered: true,
          children: ResourceCategoryTabs.map((resource, idx) => {
            cov_2pog50v3rk().f[9]++;
            cov_2pog50v3rk().s[27]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_MeshplayMeshInterface_PatternService_CustomTextTooltip__WEBPACK_IMPORTED_MODULE_15__/* .CustomTextTooltip */ .y, {
              title: `View ${resource}`,
              placement: "top",
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_6__.Tab, {
                value: idx,
                className: classes.tab,
                icon: resource === 'Overview' ? (cov_2pog50v3rk().b[8][0]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_images_meshplay_icon_js__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z, {
                  style: _css_icons_styles__WEBPACK_IMPORTED_MODULE_16__/* .iconLarge */ .wJ
                })) : (cov_2pog50v3rk().b[8][1]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_assets_icons_technology_kubernetes__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z, {
                  style: _css_icons_styles__WEBPACK_IMPORTED_MODULE_16__/* .iconLarge */ .wJ
                })),
                label: resource
              }, resource)
            }, idx);
          })
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_tabpanel__WEBPACK_IMPORTED_MODULE_14__/* .TabPanel */ .x, {
        value: resourceCategory,
        index: 'Overview',
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_overview__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, {})
      }), Object.keys(_resources_config__WEBPACK_IMPORTED_MODULE_8__/* .ResourcesConfig */ .CN).map((resource, idx) => {
        cov_2pog50v3rk().f[10]++;
        cov_2pog50v3rk().s[28]++;
        return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_tabpanel__WEBPACK_IMPORTED_MODULE_14__/* .TabPanel */ .x, {
          value: resourceCategory,
          index: resource,
          children: _resources_config__WEBPACK_IMPORTED_MODULE_8__/* .ResourcesConfig */ .CN[resource].submenu ? (cov_2pog50v3rk().b[9][0]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_resources_resources_sub_menu__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, {
            resource: _resources_config__WEBPACK_IMPORTED_MODULE_8__/* .ResourcesConfig */ .CN[resource],
            selectedResource: selectedResource,
            handleChangeSelectedResource: handleChangeSelectedResource,
            updateProgress: updateProgress,
            classes: classes,
            k8sConfig: k8sconfig,
            selectedK8sContexts: selectedK8sContexts
          }, idx)) : (cov_2pog50v3rk().b[9][1]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx(_resources_resources_table__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, {
            workloadType: resource,
            classes: classes,
            k8sConfig: k8sconfig,
            selectedK8sContexts: selectedK8sContexts,
            resourceConfig: _resources_config__WEBPACK_IMPORTED_MODULE_8__/* .ResourcesConfig */ .CN[resource].tableConfig,
            menu: _resources_config__WEBPACK_IMPORTED_MODULE_8__/* .ResourcesConfig */ .CN[resource].submenu,
            updateProgress: updateProgress
          }, idx))
        }, resource);
      })]
    })
  });
};

cov_2pog50v3rk().s[29]++;

const mapDispatchToProps = dispatch => {
  cov_2pog50v3rk().f[11]++;
  cov_2pog50v3rk().s[30]++;
  return {
    updateProgress: (0,redux__WEBPACK_IMPORTED_MODULE_2__.bindActionCreators)(_lib_store__WEBPACK_IMPORTED_MODULE_7__/* .updateProgress */ .RO, dispatch)
  };
};

cov_2pog50v3rk().s[31]++;

const mapStateToProps = state => {
  cov_2pog50v3rk().f[12]++;
  const k8sconfig = (cov_2pog50v3rk().s[32]++, state.get('k8sConfig'));
  const selectedK8sContexts = (cov_2pog50v3rk().s[33]++, state.get('selectedK8sContexts'));
  cov_2pog50v3rk().s[34]++;
  return {
    k8sconfig,
    selectedK8sContexts
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__.withStyles)(styles, {
  withTheme: true
})((0,react_redux__WEBPACK_IMPORTED_MODULE_1__.connect)(mapStateToProps, mapDispatchToProps)((0,next_router__WEBPACK_IMPORTED_MODULE_3__.withRouter)((0,_utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_5__/* .withNotify */ .n)(DashboardComponent)))));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 27126:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Popup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(10086);
/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48308);
/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(93113);
/* harmony import */ var _material_ui_core_colors_blue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4263);
/* harmony import */ var _material_ui_core_colors_blue__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_colors_blue__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _charts_DashboardMeshModelGraph_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(85004);
/* harmony import */ var _charts_ConnectionCharts_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(14305);
/* harmony import */ var _charts_MeshplayConfigurationCharts_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(71900);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(6022);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _store_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(60577);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Popup__WEBPACK_IMPORTED_MODULE_2__, _utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_5__, _charts_DashboardMeshModelGraph_js__WEBPACK_IMPORTED_MODULE_7__, _charts_ConnectionCharts_js__WEBPACK_IMPORTED_MODULE_8__, _charts_MeshplayConfigurationCharts_js__WEBPACK_IMPORTED_MODULE_9__]);
([_Popup__WEBPACK_IMPORTED_MODULE_2__, _utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_5__, _charts_DashboardMeshModelGraph_js__WEBPACK_IMPORTED_MODULE_7__, _charts_ConnectionCharts_js__WEBPACK_IMPORTED_MODULE_8__, _charts_MeshplayConfigurationCharts_js__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_blnp1ktqt() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/overview.js";
  var hash = "92fa8d5bf626d0b016e834cbf9a00eb4f38a1db5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/overview.js",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "1": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "2": {
        start: {
          line: 82,
          column: 17
        },
        end: {
          line: 108,
          column: 1
        }
      },
      "3": {
        start: {
          line: 83,
          column: 2
        },
        end: {
          line: 107,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 16
          }
        },
        loc: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 82,
            column: 17
          },
          end: {
            line: 82,
            column: 18
          }
        },
        loc: {
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 82
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "92fa8d5bf626d0b016e834cbf9a00eb4f38a1db5"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_blnp1ktqt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_blnp1ktqt();














cov_blnp1ktqt().s[0]++;

const styles = theme => {
  cov_blnp1ktqt().f[0]++;
  cov_blnp1ktqt().s[1]++;
  return {
    rootClass: {
      backgroundColor: theme.palette.secondary.elevatedComponents2,
      marginTop: '1rem'
    },
    datatable: {
      boxShadow: 'none'
    },
    chip: {
      marginRight: theme.spacing(1),
      marginBottom: theme.spacing(1)
    },
    buttons: {
      display: 'flex',
      justifyContent: 'flex-end'
    },
    button: {
      marginTop: theme.spacing(3),
      marginLeft: theme.spacing(1)
    },
    link: {
      cursor: 'pointer',
      textDecoration: 'none'
    },
    metricsButton: {
      width: '240px'
    },
    alreadyConfigured: {
      textAlign: 'center'
    },
    margin: {
      margin: theme.spacing(1)
    },
    colorSwitchBase: {
      color: (_material_ui_core_colors_blue__WEBPACK_IMPORTED_MODULE_6___default()[300]),
      '&$colorChecked': {
        color: (_material_ui_core_colors_blue__WEBPACK_IMPORTED_MODULE_6___default()[500]),
        '& + $colorBar': {
          backgroundColor: (_material_ui_core_colors_blue__WEBPACK_IMPORTED_MODULE_6___default()[500])
        }
      }
    },
    colorBar: {},
    colorChecked: {},
    fileLabel: {
      width: '100%'
    },
    fileLabelText: {},
    inClusterLabel: {
      paddingRight: theme.spacing(2)
    },
    alignCenter: {
      textAlign: 'center'
    },
    icon: {
      width: theme.spacing(2.5)
    },
    istioIcon: {
      width: theme.spacing(1.5)
    },
    settingsIcon: {
      width: theme.spacing(2.5),
      paddingRight: theme.spacing(0.5)
    },
    addIcon: {
      width: theme.spacing(2.5),
      paddingRight: theme.spacing(0.5)
    },
    cardHeader: {
      fontSize: theme.spacing(2)
    },
    card: {
      height: '100%',
      marginTop: theme.spacing(2)
    },
    cardContent: {
      height: '100%'
    },
    redirectButton: {
      marginLeft: '-.5em',
      color: '#000'
    },
    dashboardSection: {
      backgroundColor: theme.palette.secondary.elevatedComponents,
      padding: theme.spacing(2),
      borderRadius: 4,
      height: '100%',
      marginBottom: theme.spacing(2)
    }
  };
};

cov_blnp1ktqt().s[2]++;

const Overview = ({
  classes
}) => {
  cov_blnp1ktqt().f[1]++;
  cov_blnp1ktqt().s[3]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.NoSsr, {
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(_Popup__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {}), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(react_redux__WEBPACK_IMPORTED_MODULE_10__.Provider, {
      store: _store_index__WEBPACK_IMPORTED_MODULE_11__/* .store */ .h,
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx("div", {
        className: classes.rootClass,
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Grid, {
          container: true,
          spacing: 2,
          children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Grid, {
            item: true,
            xs: 12,
            md: 12,
            children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(_charts_DashboardMeshModelGraph_js__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, {
              classes: classes
            })
          }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Grid, {
            item: true,
            xs: 12,
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Grid, {
              container: true,
              spacing: 2,
              children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Grid, {
                item: true,
                xs: 12,
                md: 6,
                children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(_charts_ConnectionCharts_js__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
                  classes: classes
                })
              }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Grid, {
                item: true,
                xs: 12,
                md: 6,
                children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx(_charts_MeshplayConfigurationCharts_js__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, {
                  classes: classes
                })
              })]
            })
          })]
        })
      })
    })]
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__.withStyles)(styles, {
  withTheme: true
})((0,next_router__WEBPACK_IMPORTED_MODULE_4__.withRouter)((0,_utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_5__/* .withNotify */ .n)(Overview))));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 96467:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CN": () => (/* binding */ ResourcesConfig),
/* harmony export */   "IU": () => (/* binding */ SINGLE_VIEW),
/* harmony export */   "s$": () => (/* binding */ ALL_VIEW)
/* harmony export */ });
/* harmony import */ var _configuration_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62930);
/* harmony import */ var _network_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11921);
/* harmony import */ var _security_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55833);
/* harmony import */ var _storage_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38928);
/* harmony import */ var _workloads_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(40181);
/* harmony import */ var _namespace_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(19152);
/* harmony import */ var _nodes_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(76965);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_configuration_config__WEBPACK_IMPORTED_MODULE_0__, _network_config__WEBPACK_IMPORTED_MODULE_1__, _security_config__WEBPACK_IMPORTED_MODULE_2__, _storage_config__WEBPACK_IMPORTED_MODULE_3__, _workloads_config__WEBPACK_IMPORTED_MODULE_4__, _namespace_config__WEBPACK_IMPORTED_MODULE_5__, _nodes_config__WEBPACK_IMPORTED_MODULE_6__]);
([_configuration_config__WEBPACK_IMPORTED_MODULE_0__, _network_config__WEBPACK_IMPORTED_MODULE_1__, _security_config__WEBPACK_IMPORTED_MODULE_2__, _storage_config__WEBPACK_IMPORTED_MODULE_3__, _workloads_config__WEBPACK_IMPORTED_MODULE_4__, _namespace_config__WEBPACK_IMPORTED_MODULE_5__, _nodes_config__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_6gi0q9krp() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/config.js";
  var hash = "721415ce0446fcfac9dea650473fefc18f09937e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/config.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 31
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "1": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "2": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 35
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "721415ce0446fcfac9dea650473fefc18f09937e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6gi0q9krp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_6gi0q9krp();







const ResourcesConfig = (cov_6gi0q9krp().s[0]++, {
  Node: {
    tableConfig: _nodes_config__WEBPACK_IMPORTED_MODULE_6__/* .NodeTableConfig */ .L,
    submenu: false
  },
  Namespace: {
    tableConfig: _namespace_config__WEBPACK_IMPORTED_MODULE_5__/* .NamespaceTableConfig */ .F,
    submenu: false
  },
  Workload: {
    tableConfig: _workloads_config__WEBPACK_IMPORTED_MODULE_4__/* .WorkloadTableConfig */ .d,
    submenu: true
  },
  Configuration: {
    tableConfig: _configuration_config__WEBPACK_IMPORTED_MODULE_0__/* .ConfigurationTableConfig */ .O,
    submenu: true
  },
  Network: {
    tableConfig: _network_config__WEBPACK_IMPORTED_MODULE_1__/* .NetWorkTableConfig */ .i,
    submenu: true
  },
  Security: {
    tableConfig: _security_config__WEBPACK_IMPORTED_MODULE_2__/* .SecurityTypesConfig */ .H,
    submenu: true
  },
  Storage: {
    tableConfig: _storage_config__WEBPACK_IMPORTED_MODULE_3__/* .StorageTableConfig */ .h,
    submenu: true
  }
});
const ALL_VIEW = (cov_6gi0q9krp().s[1]++, 'all');
const SINGLE_VIEW = (cov_6gi0q9krp().s[2]++, 'single');
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 62930:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "O": () => (/* binding */ ConfigurationTableConfig)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59077);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96467);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(88767);
/* harmony import */ var _connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16845);
/* harmony import */ var _sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(63471);
/* harmony import */ var _utils_Enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(46811);
/* harmony import */ var _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(22921);
/* harmony import */ var _utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7806);
/* harmony import */ var _components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(38409);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_config__WEBPACK_IMPORTED_MODULE_2__, _view__WEBPACK_IMPORTED_MODULE_3__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_7__]);
([_config__WEBPACK_IMPORTED_MODULE_2__, _view__WEBPACK_IMPORTED_MODULE_3__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
const _excluded = ["index"],
      _excluded2 = ["index"],
      _excluded3 = ["index"],
      _excluded4 = ["index"],
      _excluded5 = ["index"],
      _excluded6 = ["index"],
      _excluded7 = ["index"],
      _excluded8 = ["index"],
      _excluded9 = ["index"],
      _excluded10 = ["index"],
      _excluded11 = ["index"],
      _excluded12 = ["index"],
      _excluded13 = ["index"],
      _excluded14 = ["index"],
      _excluded15 = ["index"],
      _excluded16 = ["index"],
      _excluded17 = ["index"],
      _excluded18 = ["index"],
      _excluded19 = ["index"],
      _excluded20 = ["index"],
      _excluded21 = ["index"],
      _excluded22 = ["index"],
      _excluded23 = ["index"];

function cov_l960wvr4v() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/configuration/config.js";
  var hash = "c562daf6c98efe4b16558aa76d7f000498bb3dfe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/configuration/config.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 40
        },
        end: {
          line: 1444,
          column: 1
        }
      },
      "1": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "2": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 1443,
          column: 4
        }
      },
      "3": {
        start: {
          line: 36,
          column: 41
        },
        end: {
          line: 36,
          column: 64
        }
      },
      "4": {
        start: {
          line: 45,
          column: 14
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "5": {
        start: {
          line: 48,
          column: 14
        },
        end: {
          line: 58,
          column: 16
        }
      },
      "6": {
        start: {
          line: 50,
          column: 33
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "7": {
        start: {
          line: 69,
          column: 14
        },
        end: {
          line: 76,
          column: 16
        }
      },
      "8": {
        start: {
          line: 74,
          column: 32
        },
        end: {
          line: 74,
          column: 49
        }
      },
      "9": {
        start: {
          line: 86,
          column: 14
        },
        end: {
          line: 86,
          column: 62
        }
      },
      "10": {
        start: {
          line: 97,
          column: 14
        },
        end: {
          line: 104,
          column: 16
        }
      },
      "11": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "12": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 70
        }
      },
      "13": {
        start: {
          line: 108,
          column: 14
        },
        end: {
          line: 118,
          column: 16
        }
      },
      "14": {
        start: {
          line: 116,
          column: 36
        },
        end: {
          line: 116,
          column: 93
        }
      },
      "15": {
        start: {
          line: 128,
          column: 14
        },
        end: {
          line: 128,
          column: 62
        }
      },
      "16": {
        start: {
          line: 131,
          column: 25
        },
        end: {
          line: 131,
          column: 39
        }
      },
      "17": {
        start: {
          line: 132,
          column: 14
        },
        end: {
          line: 132,
          column: 33
        }
      },
      "18": {
        start: {
          line: 153,
          column: 41
        },
        end: {
          line: 153,
          column: 64
        }
      },
      "19": {
        start: {
          line: 162,
          column: 14
        },
        end: {
          line: 162,
          column: 62
        }
      },
      "20": {
        start: {
          line: 165,
          column: 14
        },
        end: {
          line: 175,
          column: 16
        }
      },
      "21": {
        start: {
          line: 167,
          column: 33
        },
        end: {
          line: 167,
          column: 95
        }
      },
      "22": {
        start: {
          line: 186,
          column: 14
        },
        end: {
          line: 193,
          column: 16
        }
      },
      "23": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 191,
          column: 49
        }
      },
      "24": {
        start: {
          line: 204,
          column: 14
        },
        end: {
          line: 211,
          column: 16
        }
      },
      "25": {
        start: {
          line: 209,
          column: 32
        },
        end: {
          line: 209,
          column: 49
        }
      },
      "26": {
        start: {
          line: 221,
          column: 14
        },
        end: {
          line: 221,
          column: 62
        }
      },
      "27": {
        start: {
          line: 232,
          column: 14
        },
        end: {
          line: 239,
          column: 16
        }
      },
      "28": {
        start: {
          line: 237,
          column: 32
        },
        end: {
          line: 237,
          column: 49
        }
      },
      "29": {
        start: {
          line: 242,
          column: 28
        },
        end: {
          line: 242,
          column: 70
        }
      },
      "30": {
        start: {
          line: 243,
          column: 14
        },
        end: {
          line: 253,
          column: 16
        }
      },
      "31": {
        start: {
          line: 251,
          column: 36
        },
        end: {
          line: 251,
          column: 93
        }
      },
      "32": {
        start: {
          line: 263,
          column: 14
        },
        end: {
          line: 263,
          column: 62
        }
      },
      "33": {
        start: {
          line: 266,
          column: 25
        },
        end: {
          line: 266,
          column: 39
        }
      },
      "34": {
        start: {
          line: 267,
          column: 14
        },
        end: {
          line: 267,
          column: 33
        }
      },
      "35": {
        start: {
          line: 288,
          column: 41
        },
        end: {
          line: 288,
          column: 64
        }
      },
      "36": {
        start: {
          line: 297,
          column: 14
        },
        end: {
          line: 297,
          column: 62
        }
      },
      "37": {
        start: {
          line: 300,
          column: 14
        },
        end: {
          line: 310,
          column: 16
        }
      },
      "38": {
        start: {
          line: 302,
          column: 33
        },
        end: {
          line: 302,
          column: 95
        }
      },
      "39": {
        start: {
          line: 321,
          column: 14
        },
        end: {
          line: 328,
          column: 16
        }
      },
      "40": {
        start: {
          line: 326,
          column: 32
        },
        end: {
          line: 326,
          column: 49
        }
      },
      "41": {
        start: {
          line: 338,
          column: 14
        },
        end: {
          line: 338,
          column: 62
        }
      },
      "42": {
        start: {
          line: 349,
          column: 14
        },
        end: {
          line: 356,
          column: 16
        }
      },
      "43": {
        start: {
          line: 354,
          column: 32
        },
        end: {
          line: 354,
          column: 49
        }
      },
      "44": {
        start: {
          line: 359,
          column: 28
        },
        end: {
          line: 359,
          column: 70
        }
      },
      "45": {
        start: {
          line: 360,
          column: 14
        },
        end: {
          line: 370,
          column: 16
        }
      },
      "46": {
        start: {
          line: 368,
          column: 36
        },
        end: {
          line: 368,
          column: 93
        }
      },
      "47": {
        start: {
          line: 380,
          column: 14
        },
        end: {
          line: 380,
          column: 62
        }
      },
      "48": {
        start: {
          line: 383,
          column: 25
        },
        end: {
          line: 383,
          column: 39
        }
      },
      "49": {
        start: {
          line: 384,
          column: 14
        },
        end: {
          line: 384,
          column: 33
        }
      },
      "50": {
        start: {
          line: 405,
          column: 41
        },
        end: {
          line: 405,
          column: 64
        }
      },
      "51": {
        start: {
          line: 414,
          column: 14
        },
        end: {
          line: 414,
          column: 62
        }
      },
      "52": {
        start: {
          line: 417,
          column: 14
        },
        end: {
          line: 427,
          column: 16
        }
      },
      "53": {
        start: {
          line: 419,
          column: 33
        },
        end: {
          line: 419,
          column: 95
        }
      },
      "54": {
        start: {
          line: 438,
          column: 14
        },
        end: {
          line: 445,
          column: 16
        }
      },
      "55": {
        start: {
          line: 443,
          column: 32
        },
        end: {
          line: 443,
          column: 49
        }
      },
      "56": {
        start: {
          line: 455,
          column: 14
        },
        end: {
          line: 455,
          column: 62
        }
      },
      "57": {
        start: {
          line: 466,
          column: 14
        },
        end: {
          line: 473,
          column: 16
        }
      },
      "58": {
        start: {
          line: 471,
          column: 32
        },
        end: {
          line: 471,
          column: 49
        }
      },
      "59": {
        start: {
          line: 476,
          column: 28
        },
        end: {
          line: 476,
          column: 70
        }
      },
      "60": {
        start: {
          line: 477,
          column: 14
        },
        end: {
          line: 487,
          column: 16
        }
      },
      "61": {
        start: {
          line: 485,
          column: 36
        },
        end: {
          line: 485,
          column: 93
        }
      },
      "62": {
        start: {
          line: 497,
          column: 14
        },
        end: {
          line: 497,
          column: 62
        }
      },
      "63": {
        start: {
          line: 500,
          column: 25
        },
        end: {
          line: 500,
          column: 39
        }
      },
      "64": {
        start: {
          line: 501,
          column: 14
        },
        end: {
          line: 501,
          column: 33
        }
      },
      "65": {
        start: {
          line: 524,
          column: 41
        },
        end: {
          line: 524,
          column: 64
        }
      },
      "66": {
        start: {
          line: 533,
          column: 14
        },
        end: {
          line: 533,
          column: 62
        }
      },
      "67": {
        start: {
          line: 536,
          column: 14
        },
        end: {
          line: 546,
          column: 16
        }
      },
      "68": {
        start: {
          line: 538,
          column: 33
        },
        end: {
          line: 538,
          column: 95
        }
      },
      "69": {
        start: {
          line: 557,
          column: 14
        },
        end: {
          line: 564,
          column: 16
        }
      },
      "70": {
        start: {
          line: 562,
          column: 32
        },
        end: {
          line: 562,
          column: 49
        }
      },
      "71": {
        start: {
          line: 574,
          column: 14
        },
        end: {
          line: 574,
          column: 62
        }
      },
      "72": {
        start: {
          line: 577,
          column: 30
        },
        end: {
          line: 577,
          column: 45
        }
      },
      "73": {
        start: {
          line: 578,
          column: 32
        },
        end: {
          line: 578,
          column: 54
        }
      },
      "74": {
        start: {
          line: 579,
          column: 14
        },
        end: {
          line: 579,
          column: 40
        }
      },
      "75": {
        start: {
          line: 589,
          column: 14
        },
        end: {
          line: 589,
          column: 62
        }
      },
      "76": {
        start: {
          line: 592,
          column: 30
        },
        end: {
          line: 592,
          column: 45
        }
      },
      "77": {
        start: {
          line: 593,
          column: 32
        },
        end: {
          line: 593,
          column: 54
        }
      },
      "78": {
        start: {
          line: 594,
          column: 14
        },
        end: {
          line: 594,
          column: 40
        }
      },
      "79": {
        start: {
          line: 604,
          column: 14
        },
        end: {
          line: 604,
          column: 62
        }
      },
      "80": {
        start: {
          line: 607,
          column: 30
        },
        end: {
          line: 607,
          column: 45
        }
      },
      "81": {
        start: {
          line: 608,
          column: 36
        },
        end: {
          line: 608,
          column: 62
        }
      },
      "82": {
        start: {
          line: 609,
          column: 14
        },
        end: {
          line: 609,
          column: 44
        }
      },
      "83": {
        start: {
          line: 619,
          column: 14
        },
        end: {
          line: 619,
          column: 62
        }
      },
      "84": {
        start: {
          line: 631,
          column: 14
        },
        end: {
          line: 638,
          column: 16
        }
      },
      "85": {
        start: {
          line: 636,
          column: 32
        },
        end: {
          line: 636,
          column: 49
        }
      },
      "86": {
        start: {
          line: 641,
          column: 28
        },
        end: {
          line: 641,
          column: 70
        }
      },
      "87": {
        start: {
          line: 642,
          column: 14
        },
        end: {
          line: 652,
          column: 16
        }
      },
      "88": {
        start: {
          line: 650,
          column: 36
        },
        end: {
          line: 650,
          column: 93
        }
      },
      "89": {
        start: {
          line: 662,
          column: 14
        },
        end: {
          line: 662,
          column: 62
        }
      },
      "90": {
        start: {
          line: 665,
          column: 25
        },
        end: {
          line: 665,
          column: 39
        }
      },
      "91": {
        start: {
          line: 666,
          column: 14
        },
        end: {
          line: 666,
          column: 33
        }
      },
      "92": {
        start: {
          line: 687,
          column: 41
        },
        end: {
          line: 687,
          column: 64
        }
      },
      "93": {
        start: {
          line: 696,
          column: 14
        },
        end: {
          line: 696,
          column: 62
        }
      },
      "94": {
        start: {
          line: 699,
          column: 14
        },
        end: {
          line: 709,
          column: 16
        }
      },
      "95": {
        start: {
          line: 701,
          column: 33
        },
        end: {
          line: 701,
          column: 95
        }
      },
      "96": {
        start: {
          line: 720,
          column: 14
        },
        end: {
          line: 727,
          column: 16
        }
      },
      "97": {
        start: {
          line: 725,
          column: 32
        },
        end: {
          line: 725,
          column: 49
        }
      },
      "98": {
        start: {
          line: 737,
          column: 14
        },
        end: {
          line: 737,
          column: 62
        }
      },
      "99": {
        start: {
          line: 748,
          column: 14
        },
        end: {
          line: 755,
          column: 16
        }
      },
      "100": {
        start: {
          line: 753,
          column: 32
        },
        end: {
          line: 753,
          column: 49
        }
      },
      "101": {
        start: {
          line: 758,
          column: 28
        },
        end: {
          line: 758,
          column: 70
        }
      },
      "102": {
        start: {
          line: 759,
          column: 14
        },
        end: {
          line: 769,
          column: 16
        }
      },
      "103": {
        start: {
          line: 767,
          column: 36
        },
        end: {
          line: 767,
          column: 93
        }
      },
      "104": {
        start: {
          line: 779,
          column: 14
        },
        end: {
          line: 779,
          column: 62
        }
      },
      "105": {
        start: {
          line: 782,
          column: 25
        },
        end: {
          line: 782,
          column: 39
        }
      },
      "106": {
        start: {
          line: 783,
          column: 14
        },
        end: {
          line: 783,
          column: 33
        }
      },
      "107": {
        start: {
          line: 806,
          column: 41
        },
        end: {
          line: 806,
          column: 64
        }
      },
      "108": {
        start: {
          line: 815,
          column: 14
        },
        end: {
          line: 815,
          column: 62
        }
      },
      "109": {
        start: {
          line: 818,
          column: 14
        },
        end: {
          line: 828,
          column: 16
        }
      },
      "110": {
        start: {
          line: 820,
          column: 33
        },
        end: {
          line: 820,
          column: 95
        }
      },
      "111": {
        start: {
          line: 839,
          column: 14
        },
        end: {
          line: 846,
          column: 16
        }
      },
      "112": {
        start: {
          line: 844,
          column: 32
        },
        end: {
          line: 844,
          column: 49
        }
      },
      "113": {
        start: {
          line: 856,
          column: 14
        },
        end: {
          line: 856,
          column: 62
        }
      },
      "114": {
        start: {
          line: 859,
          column: 30
        },
        end: {
          line: 859,
          column: 45
        }
      },
      "115": {
        start: {
          line: 860,
          column: 33
        },
        end: {
          line: 860,
          column: 56
        }
      },
      "116": {
        start: {
          line: 861,
          column: 14
        },
        end: {
          line: 861,
          column: 41
        }
      },
      "117": {
        start: {
          line: 871,
          column: 14
        },
        end: {
          line: 871,
          column: 62
        }
      },
      "118": {
        start: {
          line: 874,
          column: 30
        },
        end: {
          line: 874,
          column: 45
        }
      },
      "119": {
        start: {
          line: 875,
          column: 33
        },
        end: {
          line: 875,
          column: 56
        }
      },
      "120": {
        start: {
          line: 876,
          column: 14
        },
        end: {
          line: 876,
          column: 41
        }
      },
      "121": {
        start: {
          line: 886,
          column: 14
        },
        end: {
          line: 886,
          column: 62
        }
      },
      "122": {
        start: {
          line: 889,
          column: 30
        },
        end: {
          line: 889,
          column: 45
        }
      },
      "123": {
        start: {
          line: 890,
          column: 35
        },
        end: {
          line: 890,
          column: 60
        }
      },
      "124": {
        start: {
          line: 891,
          column: 14
        },
        end: {
          line: 891,
          column: 43
        }
      },
      "125": {
        start: {
          line: 901,
          column: 14
        },
        end: {
          line: 901,
          column: 62
        }
      },
      "126": {
        start: {
          line: 904,
          column: 30
        },
        end: {
          line: 904,
          column: 45
        }
      },
      "127": {
        start: {
          line: 905,
          column: 36
        },
        end: {
          line: 905,
          column: 62
        }
      },
      "128": {
        start: {
          line: 906,
          column: 14
        },
        end: {
          line: 906,
          column: 44
        }
      },
      "129": {
        start: {
          line: 916,
          column: 14
        },
        end: {
          line: 916,
          column: 62
        }
      },
      "130": {
        start: {
          line: 927,
          column: 14
        },
        end: {
          line: 934,
          column: 16
        }
      },
      "131": {
        start: {
          line: 932,
          column: 32
        },
        end: {
          line: 932,
          column: 49
        }
      },
      "132": {
        start: {
          line: 937,
          column: 28
        },
        end: {
          line: 937,
          column: 70
        }
      },
      "133": {
        start: {
          line: 938,
          column: 14
        },
        end: {
          line: 948,
          column: 16
        }
      },
      "134": {
        start: {
          line: 946,
          column: 36
        },
        end: {
          line: 946,
          column: 93
        }
      },
      "135": {
        start: {
          line: 958,
          column: 14
        },
        end: {
          line: 958,
          column: 62
        }
      },
      "136": {
        start: {
          line: 961,
          column: 25
        },
        end: {
          line: 961,
          column: 39
        }
      },
      "137": {
        start: {
          line: 962,
          column: 14
        },
        end: {
          line: 962,
          column: 33
        }
      },
      "138": {
        start: {
          line: 983,
          column: 41
        },
        end: {
          line: 983,
          column: 64
        }
      },
      "139": {
        start: {
          line: 992,
          column: 14
        },
        end: {
          line: 992,
          column: 62
        }
      },
      "140": {
        start: {
          line: 995,
          column: 14
        },
        end: {
          line: 1005,
          column: 16
        }
      },
      "141": {
        start: {
          line: 997,
          column: 33
        },
        end: {
          line: 997,
          column: 95
        }
      },
      "142": {
        start: {
          line: 1016,
          column: 14
        },
        end: {
          line: 1023,
          column: 16
        }
      },
      "143": {
        start: {
          line: 1021,
          column: 32
        },
        end: {
          line: 1021,
          column: 49
        }
      },
      "144": {
        start: {
          line: 1033,
          column: 14
        },
        end: {
          line: 1033,
          column: 62
        }
      },
      "145": {
        start: {
          line: 1044,
          column: 14
        },
        end: {
          line: 1051,
          column: 16
        }
      },
      "146": {
        start: {
          line: 1049,
          column: 32
        },
        end: {
          line: 1049,
          column: 49
        }
      },
      "147": {
        start: {
          line: 1054,
          column: 28
        },
        end: {
          line: 1054,
          column: 70
        }
      },
      "148": {
        start: {
          line: 1055,
          column: 14
        },
        end: {
          line: 1065,
          column: 16
        }
      },
      "149": {
        start: {
          line: 1063,
          column: 36
        },
        end: {
          line: 1063,
          column: 93
        }
      },
      "150": {
        start: {
          line: 1075,
          column: 14
        },
        end: {
          line: 1075,
          column: 62
        }
      },
      "151": {
        start: {
          line: 1078,
          column: 25
        },
        end: {
          line: 1078,
          column: 39
        }
      },
      "152": {
        start: {
          line: 1079,
          column: 14
        },
        end: {
          line: 1079,
          column: 33
        }
      },
      "153": {
        start: {
          line: 1100,
          column: 41
        },
        end: {
          line: 1100,
          column: 64
        }
      },
      "154": {
        start: {
          line: 1109,
          column: 14
        },
        end: {
          line: 1109,
          column: 62
        }
      },
      "155": {
        start: {
          line: 1112,
          column: 14
        },
        end: {
          line: 1122,
          column: 16
        }
      },
      "156": {
        start: {
          line: 1114,
          column: 33
        },
        end: {
          line: 1114,
          column: 95
        }
      },
      "157": {
        start: {
          line: 1133,
          column: 14
        },
        end: {
          line: 1140,
          column: 16
        }
      },
      "158": {
        start: {
          line: 1138,
          column: 32
        },
        end: {
          line: 1138,
          column: 49
        }
      },
      "159": {
        start: {
          line: 1150,
          column: 14
        },
        end: {
          line: 1150,
          column: 62
        }
      },
      "160": {
        start: {
          line: 1161,
          column: 14
        },
        end: {
          line: 1168,
          column: 16
        }
      },
      "161": {
        start: {
          line: 1166,
          column: 32
        },
        end: {
          line: 1166,
          column: 49
        }
      },
      "162": {
        start: {
          line: 1171,
          column: 28
        },
        end: {
          line: 1171,
          column: 70
        }
      },
      "163": {
        start: {
          line: 1172,
          column: 14
        },
        end: {
          line: 1182,
          column: 16
        }
      },
      "164": {
        start: {
          line: 1180,
          column: 36
        },
        end: {
          line: 1180,
          column: 93
        }
      },
      "165": {
        start: {
          line: 1192,
          column: 14
        },
        end: {
          line: 1192,
          column: 62
        }
      },
      "166": {
        start: {
          line: 1195,
          column: 25
        },
        end: {
          line: 1195,
          column: 39
        }
      },
      "167": {
        start: {
          line: 1196,
          column: 14
        },
        end: {
          line: 1196,
          column: 33
        }
      },
      "168": {
        start: {
          line: 1219,
          column: 41
        },
        end: {
          line: 1219,
          column: 64
        }
      },
      "169": {
        start: {
          line: 1228,
          column: 14
        },
        end: {
          line: 1228,
          column: 62
        }
      },
      "170": {
        start: {
          line: 1231,
          column: 14
        },
        end: {
          line: 1241,
          column: 16
        }
      },
      "171": {
        start: {
          line: 1233,
          column: 33
        },
        end: {
          line: 1233,
          column: 95
        }
      },
      "172": {
        start: {
          line: 1252,
          column: 14
        },
        end: {
          line: 1259,
          column: 16
        }
      },
      "173": {
        start: {
          line: 1257,
          column: 32
        },
        end: {
          line: 1257,
          column: 49
        }
      },
      "174": {
        start: {
          line: 1269,
          column: 14
        },
        end: {
          line: 1269,
          column: 62
        }
      },
      "175": {
        start: {
          line: 1272,
          column: 30
        },
        end: {
          line: 1272,
          column: 45
        }
      },
      "176": {
        start: {
          line: 1273,
          column: 35
        },
        end: {
          line: 1273,
          column: 60
        }
      },
      "177": {
        start: {
          line: 1274,
          column: 14
        },
        end: {
          line: 1274,
          column: 43
        }
      },
      "178": {
        start: {
          line: 1284,
          column: 14
        },
        end: {
          line: 1284,
          column: 62
        }
      },
      "179": {
        start: {
          line: 1295,
          column: 14
        },
        end: {
          line: 1302,
          column: 16
        }
      },
      "180": {
        start: {
          line: 1300,
          column: 32
        },
        end: {
          line: 1300,
          column: 49
        }
      },
      "181": {
        start: {
          line: 1305,
          column: 28
        },
        end: {
          line: 1305,
          column: 70
        }
      },
      "182": {
        start: {
          line: 1306,
          column: 14
        },
        end: {
          line: 1316,
          column: 16
        }
      },
      "183": {
        start: {
          line: 1314,
          column: 36
        },
        end: {
          line: 1314,
          column: 93
        }
      },
      "184": {
        start: {
          line: 1326,
          column: 14
        },
        end: {
          line: 1326,
          column: 62
        }
      },
      "185": {
        start: {
          line: 1329,
          column: 25
        },
        end: {
          line: 1329,
          column: 39
        }
      },
      "186": {
        start: {
          line: 1330,
          column: 14
        },
        end: {
          line: 1330,
          column: 33
        }
      },
      "187": {
        start: {
          line: 1351,
          column: 41
        },
        end: {
          line: 1351,
          column: 64
        }
      },
      "188": {
        start: {
          line: 1360,
          column: 14
        },
        end: {
          line: 1360,
          column: 62
        }
      },
      "189": {
        start: {
          line: 1363,
          column: 14
        },
        end: {
          line: 1373,
          column: 16
        }
      },
      "190": {
        start: {
          line: 1365,
          column: 33
        },
        end: {
          line: 1365,
          column: 95
        }
      },
      "191": {
        start: {
          line: 1384,
          column: 14
        },
        end: {
          line: 1391,
          column: 16
        }
      },
      "192": {
        start: {
          line: 1389,
          column: 32
        },
        end: {
          line: 1389,
          column: 49
        }
      },
      "193": {
        start: {
          line: 1402,
          column: 14
        },
        end: {
          line: 1409,
          column: 16
        }
      },
      "194": {
        start: {
          line: 1407,
          column: 32
        },
        end: {
          line: 1407,
          column: 49
        }
      },
      "195": {
        start: {
          line: 1412,
          column: 28
        },
        end: {
          line: 1412,
          column: 70
        }
      },
      "196": {
        start: {
          line: 1413,
          column: 14
        },
        end: {
          line: 1423,
          column: 16
        }
      },
      "197": {
        start: {
          line: 1421,
          column: 36
        },
        end: {
          line: 1421,
          column: 93
        }
      },
      "198": {
        start: {
          line: 1433,
          column: 14
        },
        end: {
          line: 1433,
          column: 62
        }
      },
      "199": {
        start: {
          line: 1436,
          column: 25
        },
        end: {
          line: 1436,
          column: 39
        }
      },
      "200": {
        start: {
          line: 1437,
          column: 14
        },
        end: {
          line: 1437,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 13,
            column: 41
          }
        },
        loc: {
          start: {
            line: 18,
            column: 5
          },
          end: {
            line: 1444,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 31
          }
        },
        loc: {
          start: {
            line: 36,
            column: 41
          },
          end: {
            line: 36,
            column: 64
          }
        },
        line: 36
      },
      "2": {
        name: "CustomHead",
        decl: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 49
          }
        },
        loc: {
          start: {
            line: 44,
            column: 65
          },
          end: {
            line: 46,
            column: 13
          }
        },
        line: 44
      },
      "3": {
        name: "CustomBody",
        decl: {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 47,
            column: 49
          }
        },
        loc: {
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 59,
            column: 13
          }
        },
        line: 47
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 27
          },
          end: {
            line: 50,
            column: 28
          }
        },
        loc: {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 95
          }
        },
        line: 50
      },
      "5": {
        name: "CustomHead",
        decl: {
          start: {
            line: 68,
            column: 39
          },
          end: {
            line: 68,
            column: 49
          }
        },
        loc: {
          start: {
            line: 68,
            column: 96
          },
          end: {
            line: 77,
            column: 13
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 27
          }
        },
        loc: {
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 74,
            column: 49
          }
        },
        line: 74
      },
      "7": {
        name: "CustomHead",
        decl: {
          start: {
            line: 85,
            column: 39
          },
          end: {
            line: 85,
            column: 49
          }
        },
        loc: {
          start: {
            line: 85,
            column: 65
          },
          end: {
            line: 87,
            column: 13
          }
        },
        line: 85
      },
      "8": {
        name: "CustomHead",
        decl: {
          start: {
            line: 96,
            column: 39
          },
          end: {
            line: 96,
            column: 49
          }
        },
        loc: {
          start: {
            line: 96,
            column: 96
          },
          end: {
            line: 105,
            column: 13
          }
        },
        line: 96
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 27
          }
        },
        loc: {
          start: {
            line: 102,
            column: 32
          },
          end: {
            line: 102,
            column: 49
          }
        },
        line: 102
      },
      "10": {
        name: "CustomBody",
        decl: {
          start: {
            line: 106,
            column: 39
          },
          end: {
            line: 106,
            column: 49
          }
        },
        loc: {
          start: {
            line: 106,
            column: 55
          },
          end: {
            line: 119,
            column: 13
          }
        },
        line: 106
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 116,
            column: 31
          }
        },
        loc: {
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 116,
            column: 93
          }
        },
        line: 116
      },
      "12": {
        name: "CustomHead",
        decl: {
          start: {
            line: 127,
            column: 39
          },
          end: {
            line: 127,
            column: 49
          }
        },
        loc: {
          start: {
            line: 127,
            column: 65
          },
          end: {
            line: 129,
            column: 13
          }
        },
        line: 127
      },
      "13": {
        name: "CustomBody",
        decl: {
          start: {
            line: 130,
            column: 39
          },
          end: {
            line: 130,
            column: 49
          }
        },
        loc: {
          start: {
            line: 130,
            column: 57
          },
          end: {
            line: 133,
            column: 13
          }
        },
        line: 130
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 31
          }
        },
        loc: {
          start: {
            line: 153,
            column: 41
          },
          end: {
            line: 153,
            column: 64
          }
        },
        line: 153
      },
      "15": {
        name: "CustomHead",
        decl: {
          start: {
            line: 161,
            column: 39
          },
          end: {
            line: 161,
            column: 49
          }
        },
        loc: {
          start: {
            line: 161,
            column: 65
          },
          end: {
            line: 163,
            column: 13
          }
        },
        line: 161
      },
      "16": {
        name: "CustomBody",
        decl: {
          start: {
            line: 164,
            column: 39
          },
          end: {
            line: 164,
            column: 49
          }
        },
        loc: {
          start: {
            line: 164,
            column: 68
          },
          end: {
            line: 176,
            column: 13
          }
        },
        line: 164
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 167,
            column: 27
          },
          end: {
            line: 167,
            column: 28
          }
        },
        loc: {
          start: {
            line: 167,
            column: 33
          },
          end: {
            line: 167,
            column: 95
          }
        },
        line: 167
      },
      "18": {
        name: "CustomHead",
        decl: {
          start: {
            line: 185,
            column: 39
          },
          end: {
            line: 185,
            column: 49
          }
        },
        loc: {
          start: {
            line: 185,
            column: 96
          },
          end: {
            line: 194,
            column: 13
          }
        },
        line: 185
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 191,
            column: 26
          },
          end: {
            line: 191,
            column: 27
          }
        },
        loc: {
          start: {
            line: 191,
            column: 32
          },
          end: {
            line: 191,
            column: 49
          }
        },
        line: 191
      },
      "20": {
        name: "CustomHead",
        decl: {
          start: {
            line: 203,
            column: 39
          },
          end: {
            line: 203,
            column: 49
          }
        },
        loc: {
          start: {
            line: 203,
            column: 96
          },
          end: {
            line: 212,
            column: 13
          }
        },
        line: 203
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 209,
            column: 26
          },
          end: {
            line: 209,
            column: 27
          }
        },
        loc: {
          start: {
            line: 209,
            column: 32
          },
          end: {
            line: 209,
            column: 49
          }
        },
        line: 209
      },
      "22": {
        name: "CustomHead",
        decl: {
          start: {
            line: 220,
            column: 39
          },
          end: {
            line: 220,
            column: 49
          }
        },
        loc: {
          start: {
            line: 220,
            column: 65
          },
          end: {
            line: 222,
            column: 13
          }
        },
        line: 220
      },
      "23": {
        name: "CustomHead",
        decl: {
          start: {
            line: 231,
            column: 39
          },
          end: {
            line: 231,
            column: 49
          }
        },
        loc: {
          start: {
            line: 231,
            column: 96
          },
          end: {
            line: 240,
            column: 13
          }
        },
        line: 231
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 237,
            column: 26
          },
          end: {
            line: 237,
            column: 27
          }
        },
        loc: {
          start: {
            line: 237,
            column: 32
          },
          end: {
            line: 237,
            column: 49
          }
        },
        line: 237
      },
      "25": {
        name: "CustomBody",
        decl: {
          start: {
            line: 241,
            column: 39
          },
          end: {
            line: 241,
            column: 49
          }
        },
        loc: {
          start: {
            line: 241,
            column: 55
          },
          end: {
            line: 254,
            column: 13
          }
        },
        line: 241
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 251,
            column: 30
          },
          end: {
            line: 251,
            column: 31
          }
        },
        loc: {
          start: {
            line: 251,
            column: 36
          },
          end: {
            line: 251,
            column: 93
          }
        },
        line: 251
      },
      "27": {
        name: "CustomHead",
        decl: {
          start: {
            line: 262,
            column: 39
          },
          end: {
            line: 262,
            column: 49
          }
        },
        loc: {
          start: {
            line: 262,
            column: 65
          },
          end: {
            line: 264,
            column: 13
          }
        },
        line: 262
      },
      "28": {
        name: "CustomBody",
        decl: {
          start: {
            line: 265,
            column: 39
          },
          end: {
            line: 265,
            column: 49
          }
        },
        loc: {
          start: {
            line: 265,
            column: 57
          },
          end: {
            line: 268,
            column: 13
          }
        },
        line: 265
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 288,
            column: 30
          },
          end: {
            line: 288,
            column: 31
          }
        },
        loc: {
          start: {
            line: 288,
            column: 41
          },
          end: {
            line: 288,
            column: 64
          }
        },
        line: 288
      },
      "30": {
        name: "CustomHead",
        decl: {
          start: {
            line: 296,
            column: 39
          },
          end: {
            line: 296,
            column: 49
          }
        },
        loc: {
          start: {
            line: 296,
            column: 65
          },
          end: {
            line: 298,
            column: 13
          }
        },
        line: 296
      },
      "31": {
        name: "CustomBody",
        decl: {
          start: {
            line: 299,
            column: 39
          },
          end: {
            line: 299,
            column: 49
          }
        },
        loc: {
          start: {
            line: 299,
            column: 68
          },
          end: {
            line: 311,
            column: 13
          }
        },
        line: 299
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 302,
            column: 27
          },
          end: {
            line: 302,
            column: 28
          }
        },
        loc: {
          start: {
            line: 302,
            column: 33
          },
          end: {
            line: 302,
            column: 95
          }
        },
        line: 302
      },
      "33": {
        name: "CustomHead",
        decl: {
          start: {
            line: 320,
            column: 39
          },
          end: {
            line: 320,
            column: 49
          }
        },
        loc: {
          start: {
            line: 320,
            column: 96
          },
          end: {
            line: 329,
            column: 13
          }
        },
        line: 320
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 326,
            column: 26
          },
          end: {
            line: 326,
            column: 27
          }
        },
        loc: {
          start: {
            line: 326,
            column: 32
          },
          end: {
            line: 326,
            column: 49
          }
        },
        line: 326
      },
      "35": {
        name: "CustomHead",
        decl: {
          start: {
            line: 337,
            column: 39
          },
          end: {
            line: 337,
            column: 49
          }
        },
        loc: {
          start: {
            line: 337,
            column: 65
          },
          end: {
            line: 339,
            column: 13
          }
        },
        line: 337
      },
      "36": {
        name: "CustomHead",
        decl: {
          start: {
            line: 348,
            column: 39
          },
          end: {
            line: 348,
            column: 49
          }
        },
        loc: {
          start: {
            line: 348,
            column: 96
          },
          end: {
            line: 357,
            column: 13
          }
        },
        line: 348
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 354,
            column: 26
          },
          end: {
            line: 354,
            column: 27
          }
        },
        loc: {
          start: {
            line: 354,
            column: 32
          },
          end: {
            line: 354,
            column: 49
          }
        },
        line: 354
      },
      "38": {
        name: "CustomBody",
        decl: {
          start: {
            line: 358,
            column: 39
          },
          end: {
            line: 358,
            column: 49
          }
        },
        loc: {
          start: {
            line: 358,
            column: 55
          },
          end: {
            line: 371,
            column: 13
          }
        },
        line: 358
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 368,
            column: 30
          },
          end: {
            line: 368,
            column: 31
          }
        },
        loc: {
          start: {
            line: 368,
            column: 36
          },
          end: {
            line: 368,
            column: 93
          }
        },
        line: 368
      },
      "40": {
        name: "CustomHead",
        decl: {
          start: {
            line: 379,
            column: 39
          },
          end: {
            line: 379,
            column: 49
          }
        },
        loc: {
          start: {
            line: 379,
            column: 65
          },
          end: {
            line: 381,
            column: 13
          }
        },
        line: 379
      },
      "41": {
        name: "CustomBody",
        decl: {
          start: {
            line: 382,
            column: 39
          },
          end: {
            line: 382,
            column: 49
          }
        },
        loc: {
          start: {
            line: 382,
            column: 57
          },
          end: {
            line: 385,
            column: 13
          }
        },
        line: 382
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 405,
            column: 30
          },
          end: {
            line: 405,
            column: 31
          }
        },
        loc: {
          start: {
            line: 405,
            column: 41
          },
          end: {
            line: 405,
            column: 64
          }
        },
        line: 405
      },
      "43": {
        name: "CustomHead",
        decl: {
          start: {
            line: 413,
            column: 39
          },
          end: {
            line: 413,
            column: 49
          }
        },
        loc: {
          start: {
            line: 413,
            column: 65
          },
          end: {
            line: 415,
            column: 13
          }
        },
        line: 413
      },
      "44": {
        name: "CustomBody",
        decl: {
          start: {
            line: 416,
            column: 39
          },
          end: {
            line: 416,
            column: 49
          }
        },
        loc: {
          start: {
            line: 416,
            column: 68
          },
          end: {
            line: 428,
            column: 13
          }
        },
        line: 416
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 419,
            column: 27
          },
          end: {
            line: 419,
            column: 28
          }
        },
        loc: {
          start: {
            line: 419,
            column: 33
          },
          end: {
            line: 419,
            column: 95
          }
        },
        line: 419
      },
      "46": {
        name: "CustomHead",
        decl: {
          start: {
            line: 437,
            column: 39
          },
          end: {
            line: 437,
            column: 49
          }
        },
        loc: {
          start: {
            line: 437,
            column: 96
          },
          end: {
            line: 446,
            column: 13
          }
        },
        line: 437
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 443,
            column: 26
          },
          end: {
            line: 443,
            column: 27
          }
        },
        loc: {
          start: {
            line: 443,
            column: 32
          },
          end: {
            line: 443,
            column: 49
          }
        },
        line: 443
      },
      "48": {
        name: "CustomHead",
        decl: {
          start: {
            line: 454,
            column: 39
          },
          end: {
            line: 454,
            column: 49
          }
        },
        loc: {
          start: {
            line: 454,
            column: 65
          },
          end: {
            line: 456,
            column: 13
          }
        },
        line: 454
      },
      "49": {
        name: "CustomHead",
        decl: {
          start: {
            line: 465,
            column: 39
          },
          end: {
            line: 465,
            column: 49
          }
        },
        loc: {
          start: {
            line: 465,
            column: 96
          },
          end: {
            line: 474,
            column: 13
          }
        },
        line: 465
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 471,
            column: 26
          },
          end: {
            line: 471,
            column: 27
          }
        },
        loc: {
          start: {
            line: 471,
            column: 32
          },
          end: {
            line: 471,
            column: 49
          }
        },
        line: 471
      },
      "51": {
        name: "CustomBody",
        decl: {
          start: {
            line: 475,
            column: 39
          },
          end: {
            line: 475,
            column: 49
          }
        },
        loc: {
          start: {
            line: 475,
            column: 55
          },
          end: {
            line: 488,
            column: 13
          }
        },
        line: 475
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 485,
            column: 30
          },
          end: {
            line: 485,
            column: 31
          }
        },
        loc: {
          start: {
            line: 485,
            column: 36
          },
          end: {
            line: 485,
            column: 93
          }
        },
        line: 485
      },
      "53": {
        name: "CustomHead",
        decl: {
          start: {
            line: 496,
            column: 39
          },
          end: {
            line: 496,
            column: 49
          }
        },
        loc: {
          start: {
            line: 496,
            column: 65
          },
          end: {
            line: 498,
            column: 13
          }
        },
        line: 496
      },
      "54": {
        name: "CustomBody",
        decl: {
          start: {
            line: 499,
            column: 39
          },
          end: {
            line: 499,
            column: 49
          }
        },
        loc: {
          start: {
            line: 499,
            column: 57
          },
          end: {
            line: 502,
            column: 13
          }
        },
        line: 499
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 524,
            column: 30
          },
          end: {
            line: 524,
            column: 31
          }
        },
        loc: {
          start: {
            line: 524,
            column: 41
          },
          end: {
            line: 524,
            column: 64
          }
        },
        line: 524
      },
      "56": {
        name: "CustomHead",
        decl: {
          start: {
            line: 532,
            column: 39
          },
          end: {
            line: 532,
            column: 49
          }
        },
        loc: {
          start: {
            line: 532,
            column: 65
          },
          end: {
            line: 534,
            column: 13
          }
        },
        line: 532
      },
      "57": {
        name: "CustomBody",
        decl: {
          start: {
            line: 535,
            column: 39
          },
          end: {
            line: 535,
            column: 49
          }
        },
        loc: {
          start: {
            line: 535,
            column: 68
          },
          end: {
            line: 547,
            column: 13
          }
        },
        line: 535
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 538,
            column: 27
          },
          end: {
            line: 538,
            column: 28
          }
        },
        loc: {
          start: {
            line: 538,
            column: 33
          },
          end: {
            line: 538,
            column: 95
          }
        },
        line: 538
      },
      "59": {
        name: "CustomHead",
        decl: {
          start: {
            line: 556,
            column: 39
          },
          end: {
            line: 556,
            column: 49
          }
        },
        loc: {
          start: {
            line: 556,
            column: 96
          },
          end: {
            line: 565,
            column: 13
          }
        },
        line: 556
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 562,
            column: 26
          },
          end: {
            line: 562,
            column: 27
          }
        },
        loc: {
          start: {
            line: 562,
            column: 32
          },
          end: {
            line: 562,
            column: 49
          }
        },
        line: 562
      },
      "61": {
        name: "CustomHead",
        decl: {
          start: {
            line: 573,
            column: 39
          },
          end: {
            line: 573,
            column: 49
          }
        },
        loc: {
          start: {
            line: 573,
            column: 65
          },
          end: {
            line: 575,
            column: 13
          }
        },
        line: 573
      },
      "62": {
        name: "CustomBody",
        decl: {
          start: {
            line: 576,
            column: 39
          },
          end: {
            line: 576,
            column: 49
          }
        },
        loc: {
          start: {
            line: 576,
            column: 55
          },
          end: {
            line: 580,
            column: 13
          }
        },
        line: 576
      },
      "63": {
        name: "CustomHead",
        decl: {
          start: {
            line: 588,
            column: 39
          },
          end: {
            line: 588,
            column: 49
          }
        },
        loc: {
          start: {
            line: 588,
            column: 65
          },
          end: {
            line: 590,
            column: 13
          }
        },
        line: 588
      },
      "64": {
        name: "CustomBody",
        decl: {
          start: {
            line: 591,
            column: 39
          },
          end: {
            line: 591,
            column: 49
          }
        },
        loc: {
          start: {
            line: 591,
            column: 55
          },
          end: {
            line: 595,
            column: 13
          }
        },
        line: 591
      },
      "65": {
        name: "CustomHead",
        decl: {
          start: {
            line: 603,
            column: 39
          },
          end: {
            line: 603,
            column: 49
          }
        },
        loc: {
          start: {
            line: 603,
            column: 65
          },
          end: {
            line: 605,
            column: 13
          }
        },
        line: 603
      },
      "66": {
        name: "CustomBody",
        decl: {
          start: {
            line: 606,
            column: 39
          },
          end: {
            line: 606,
            column: 49
          }
        },
        loc: {
          start: {
            line: 606,
            column: 55
          },
          end: {
            line: 610,
            column: 13
          }
        },
        line: 606
      },
      "67": {
        name: "CustomHead",
        decl: {
          start: {
            line: 618,
            column: 39
          },
          end: {
            line: 618,
            column: 49
          }
        },
        loc: {
          start: {
            line: 618,
            column: 65
          },
          end: {
            line: 620,
            column: 13
          }
        },
        line: 618
      },
      "68": {
        name: "CustomHead",
        decl: {
          start: {
            line: 630,
            column: 39
          },
          end: {
            line: 630,
            column: 49
          }
        },
        loc: {
          start: {
            line: 630,
            column: 96
          },
          end: {
            line: 639,
            column: 13
          }
        },
        line: 630
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 636,
            column: 26
          },
          end: {
            line: 636,
            column: 27
          }
        },
        loc: {
          start: {
            line: 636,
            column: 32
          },
          end: {
            line: 636,
            column: 49
          }
        },
        line: 636
      },
      "70": {
        name: "CustomBody",
        decl: {
          start: {
            line: 640,
            column: 39
          },
          end: {
            line: 640,
            column: 49
          }
        },
        loc: {
          start: {
            line: 640,
            column: 55
          },
          end: {
            line: 653,
            column: 13
          }
        },
        line: 640
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 650,
            column: 30
          },
          end: {
            line: 650,
            column: 31
          }
        },
        loc: {
          start: {
            line: 650,
            column: 36
          },
          end: {
            line: 650,
            column: 93
          }
        },
        line: 650
      },
      "72": {
        name: "CustomHead",
        decl: {
          start: {
            line: 661,
            column: 39
          },
          end: {
            line: 661,
            column: 49
          }
        },
        loc: {
          start: {
            line: 661,
            column: 65
          },
          end: {
            line: 663,
            column: 13
          }
        },
        line: 661
      },
      "73": {
        name: "CustomBody",
        decl: {
          start: {
            line: 664,
            column: 39
          },
          end: {
            line: 664,
            column: 49
          }
        },
        loc: {
          start: {
            line: 664,
            column: 57
          },
          end: {
            line: 667,
            column: 13
          }
        },
        line: 664
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 687,
            column: 30
          },
          end: {
            line: 687,
            column: 31
          }
        },
        loc: {
          start: {
            line: 687,
            column: 41
          },
          end: {
            line: 687,
            column: 64
          }
        },
        line: 687
      },
      "75": {
        name: "CustomHead",
        decl: {
          start: {
            line: 695,
            column: 39
          },
          end: {
            line: 695,
            column: 49
          }
        },
        loc: {
          start: {
            line: 695,
            column: 65
          },
          end: {
            line: 697,
            column: 13
          }
        },
        line: 695
      },
      "76": {
        name: "CustomBody",
        decl: {
          start: {
            line: 698,
            column: 39
          },
          end: {
            line: 698,
            column: 49
          }
        },
        loc: {
          start: {
            line: 698,
            column: 68
          },
          end: {
            line: 710,
            column: 13
          }
        },
        line: 698
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 701,
            column: 27
          },
          end: {
            line: 701,
            column: 28
          }
        },
        loc: {
          start: {
            line: 701,
            column: 33
          },
          end: {
            line: 701,
            column: 95
          }
        },
        line: 701
      },
      "78": {
        name: "CustomHead",
        decl: {
          start: {
            line: 719,
            column: 39
          },
          end: {
            line: 719,
            column: 49
          }
        },
        loc: {
          start: {
            line: 719,
            column: 96
          },
          end: {
            line: 728,
            column: 13
          }
        },
        line: 719
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 725,
            column: 26
          },
          end: {
            line: 725,
            column: 27
          }
        },
        loc: {
          start: {
            line: 725,
            column: 32
          },
          end: {
            line: 725,
            column: 49
          }
        },
        line: 725
      },
      "80": {
        name: "CustomHead",
        decl: {
          start: {
            line: 736,
            column: 39
          },
          end: {
            line: 736,
            column: 49
          }
        },
        loc: {
          start: {
            line: 736,
            column: 65
          },
          end: {
            line: 738,
            column: 13
          }
        },
        line: 736
      },
      "81": {
        name: "CustomHead",
        decl: {
          start: {
            line: 747,
            column: 39
          },
          end: {
            line: 747,
            column: 49
          }
        },
        loc: {
          start: {
            line: 747,
            column: 96
          },
          end: {
            line: 756,
            column: 13
          }
        },
        line: 747
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 753,
            column: 26
          },
          end: {
            line: 753,
            column: 27
          }
        },
        loc: {
          start: {
            line: 753,
            column: 32
          },
          end: {
            line: 753,
            column: 49
          }
        },
        line: 753
      },
      "83": {
        name: "CustomBody",
        decl: {
          start: {
            line: 757,
            column: 39
          },
          end: {
            line: 757,
            column: 49
          }
        },
        loc: {
          start: {
            line: 757,
            column: 55
          },
          end: {
            line: 770,
            column: 13
          }
        },
        line: 757
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 767,
            column: 30
          },
          end: {
            line: 767,
            column: 31
          }
        },
        loc: {
          start: {
            line: 767,
            column: 36
          },
          end: {
            line: 767,
            column: 93
          }
        },
        line: 767
      },
      "85": {
        name: "CustomHead",
        decl: {
          start: {
            line: 778,
            column: 39
          },
          end: {
            line: 778,
            column: 49
          }
        },
        loc: {
          start: {
            line: 778,
            column: 65
          },
          end: {
            line: 780,
            column: 13
          }
        },
        line: 778
      },
      "86": {
        name: "CustomBody",
        decl: {
          start: {
            line: 781,
            column: 39
          },
          end: {
            line: 781,
            column: 49
          }
        },
        loc: {
          start: {
            line: 781,
            column: 57
          },
          end: {
            line: 784,
            column: 13
          }
        },
        line: 781
      },
      "87": {
        name: "(anonymous_87)",
        decl: {
          start: {
            line: 806,
            column: 30
          },
          end: {
            line: 806,
            column: 31
          }
        },
        loc: {
          start: {
            line: 806,
            column: 41
          },
          end: {
            line: 806,
            column: 64
          }
        },
        line: 806
      },
      "88": {
        name: "CustomHead",
        decl: {
          start: {
            line: 814,
            column: 39
          },
          end: {
            line: 814,
            column: 49
          }
        },
        loc: {
          start: {
            line: 814,
            column: 65
          },
          end: {
            line: 816,
            column: 13
          }
        },
        line: 814
      },
      "89": {
        name: "CustomBody",
        decl: {
          start: {
            line: 817,
            column: 39
          },
          end: {
            line: 817,
            column: 49
          }
        },
        loc: {
          start: {
            line: 817,
            column: 68
          },
          end: {
            line: 829,
            column: 13
          }
        },
        line: 817
      },
      "90": {
        name: "(anonymous_90)",
        decl: {
          start: {
            line: 820,
            column: 27
          },
          end: {
            line: 820,
            column: 28
          }
        },
        loc: {
          start: {
            line: 820,
            column: 33
          },
          end: {
            line: 820,
            column: 95
          }
        },
        line: 820
      },
      "91": {
        name: "CustomHead",
        decl: {
          start: {
            line: 838,
            column: 39
          },
          end: {
            line: 838,
            column: 49
          }
        },
        loc: {
          start: {
            line: 838,
            column: 96
          },
          end: {
            line: 847,
            column: 13
          }
        },
        line: 838
      },
      "92": {
        name: "(anonymous_92)",
        decl: {
          start: {
            line: 844,
            column: 26
          },
          end: {
            line: 844,
            column: 27
          }
        },
        loc: {
          start: {
            line: 844,
            column: 32
          },
          end: {
            line: 844,
            column: 49
          }
        },
        line: 844
      },
      "93": {
        name: "CustomHead",
        decl: {
          start: {
            line: 855,
            column: 39
          },
          end: {
            line: 855,
            column: 49
          }
        },
        loc: {
          start: {
            line: 855,
            column: 65
          },
          end: {
            line: 857,
            column: 13
          }
        },
        line: 855
      },
      "94": {
        name: "CustomBody",
        decl: {
          start: {
            line: 858,
            column: 39
          },
          end: {
            line: 858,
            column: 49
          }
        },
        loc: {
          start: {
            line: 858,
            column: 55
          },
          end: {
            line: 862,
            column: 13
          }
        },
        line: 858
      },
      "95": {
        name: "CustomHead",
        decl: {
          start: {
            line: 870,
            column: 39
          },
          end: {
            line: 870,
            column: 49
          }
        },
        loc: {
          start: {
            line: 870,
            column: 65
          },
          end: {
            line: 872,
            column: 13
          }
        },
        line: 870
      },
      "96": {
        name: "CustomBody",
        decl: {
          start: {
            line: 873,
            column: 39
          },
          end: {
            line: 873,
            column: 49
          }
        },
        loc: {
          start: {
            line: 873,
            column: 55
          },
          end: {
            line: 877,
            column: 13
          }
        },
        line: 873
      },
      "97": {
        name: "CustomHead",
        decl: {
          start: {
            line: 885,
            column: 39
          },
          end: {
            line: 885,
            column: 49
          }
        },
        loc: {
          start: {
            line: 885,
            column: 65
          },
          end: {
            line: 887,
            column: 13
          }
        },
        line: 885
      },
      "98": {
        name: "CustomBody",
        decl: {
          start: {
            line: 888,
            column: 39
          },
          end: {
            line: 888,
            column: 49
          }
        },
        loc: {
          start: {
            line: 888,
            column: 55
          },
          end: {
            line: 892,
            column: 13
          }
        },
        line: 888
      },
      "99": {
        name: "CustomHead",
        decl: {
          start: {
            line: 900,
            column: 39
          },
          end: {
            line: 900,
            column: 49
          }
        },
        loc: {
          start: {
            line: 900,
            column: 65
          },
          end: {
            line: 902,
            column: 13
          }
        },
        line: 900
      },
      "100": {
        name: "CustomBody",
        decl: {
          start: {
            line: 903,
            column: 39
          },
          end: {
            line: 903,
            column: 49
          }
        },
        loc: {
          start: {
            line: 903,
            column: 55
          },
          end: {
            line: 907,
            column: 13
          }
        },
        line: 903
      },
      "101": {
        name: "CustomHead",
        decl: {
          start: {
            line: 915,
            column: 39
          },
          end: {
            line: 915,
            column: 49
          }
        },
        loc: {
          start: {
            line: 915,
            column: 65
          },
          end: {
            line: 917,
            column: 13
          }
        },
        line: 915
      },
      "102": {
        name: "CustomHead",
        decl: {
          start: {
            line: 926,
            column: 39
          },
          end: {
            line: 926,
            column: 49
          }
        },
        loc: {
          start: {
            line: 926,
            column: 96
          },
          end: {
            line: 935,
            column: 13
          }
        },
        line: 926
      },
      "103": {
        name: "(anonymous_103)",
        decl: {
          start: {
            line: 932,
            column: 26
          },
          end: {
            line: 932,
            column: 27
          }
        },
        loc: {
          start: {
            line: 932,
            column: 32
          },
          end: {
            line: 932,
            column: 49
          }
        },
        line: 932
      },
      "104": {
        name: "CustomBody",
        decl: {
          start: {
            line: 936,
            column: 39
          },
          end: {
            line: 936,
            column: 49
          }
        },
        loc: {
          start: {
            line: 936,
            column: 55
          },
          end: {
            line: 949,
            column: 13
          }
        },
        line: 936
      },
      "105": {
        name: "(anonymous_105)",
        decl: {
          start: {
            line: 946,
            column: 30
          },
          end: {
            line: 946,
            column: 31
          }
        },
        loc: {
          start: {
            line: 946,
            column: 36
          },
          end: {
            line: 946,
            column: 93
          }
        },
        line: 946
      },
      "106": {
        name: "CustomHead",
        decl: {
          start: {
            line: 957,
            column: 39
          },
          end: {
            line: 957,
            column: 49
          }
        },
        loc: {
          start: {
            line: 957,
            column: 65
          },
          end: {
            line: 959,
            column: 13
          }
        },
        line: 957
      },
      "107": {
        name: "CustomBody",
        decl: {
          start: {
            line: 960,
            column: 39
          },
          end: {
            line: 960,
            column: 49
          }
        },
        loc: {
          start: {
            line: 960,
            column: 57
          },
          end: {
            line: 963,
            column: 13
          }
        },
        line: 960
      },
      "108": {
        name: "(anonymous_108)",
        decl: {
          start: {
            line: 983,
            column: 30
          },
          end: {
            line: 983,
            column: 31
          }
        },
        loc: {
          start: {
            line: 983,
            column: 41
          },
          end: {
            line: 983,
            column: 64
          }
        },
        line: 983
      },
      "109": {
        name: "CustomHead",
        decl: {
          start: {
            line: 991,
            column: 39
          },
          end: {
            line: 991,
            column: 49
          }
        },
        loc: {
          start: {
            line: 991,
            column: 65
          },
          end: {
            line: 993,
            column: 13
          }
        },
        line: 991
      },
      "110": {
        name: "CustomBody",
        decl: {
          start: {
            line: 994,
            column: 39
          },
          end: {
            line: 994,
            column: 49
          }
        },
        loc: {
          start: {
            line: 994,
            column: 68
          },
          end: {
            line: 1006,
            column: 13
          }
        },
        line: 994
      },
      "111": {
        name: "(anonymous_111)",
        decl: {
          start: {
            line: 997,
            column: 27
          },
          end: {
            line: 997,
            column: 28
          }
        },
        loc: {
          start: {
            line: 997,
            column: 33
          },
          end: {
            line: 997,
            column: 95
          }
        },
        line: 997
      },
      "112": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1015,
            column: 39
          },
          end: {
            line: 1015,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1015,
            column: 96
          },
          end: {
            line: 1024,
            column: 13
          }
        },
        line: 1015
      },
      "113": {
        name: "(anonymous_113)",
        decl: {
          start: {
            line: 1021,
            column: 26
          },
          end: {
            line: 1021,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1021,
            column: 32
          },
          end: {
            line: 1021,
            column: 49
          }
        },
        line: 1021
      },
      "114": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1032,
            column: 39
          },
          end: {
            line: 1032,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1032,
            column: 65
          },
          end: {
            line: 1034,
            column: 13
          }
        },
        line: 1032
      },
      "115": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1043,
            column: 39
          },
          end: {
            line: 1043,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1043,
            column: 96
          },
          end: {
            line: 1052,
            column: 13
          }
        },
        line: 1043
      },
      "116": {
        name: "(anonymous_116)",
        decl: {
          start: {
            line: 1049,
            column: 26
          },
          end: {
            line: 1049,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1049,
            column: 32
          },
          end: {
            line: 1049,
            column: 49
          }
        },
        line: 1049
      },
      "117": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1053,
            column: 39
          },
          end: {
            line: 1053,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1053,
            column: 55
          },
          end: {
            line: 1066,
            column: 13
          }
        },
        line: 1053
      },
      "118": {
        name: "(anonymous_118)",
        decl: {
          start: {
            line: 1063,
            column: 30
          },
          end: {
            line: 1063,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1063,
            column: 36
          },
          end: {
            line: 1063,
            column: 93
          }
        },
        line: 1063
      },
      "119": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1074,
            column: 39
          },
          end: {
            line: 1074,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1074,
            column: 65
          },
          end: {
            line: 1076,
            column: 13
          }
        },
        line: 1074
      },
      "120": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1077,
            column: 39
          },
          end: {
            line: 1077,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1077,
            column: 57
          },
          end: {
            line: 1080,
            column: 13
          }
        },
        line: 1077
      },
      "121": {
        name: "(anonymous_121)",
        decl: {
          start: {
            line: 1100,
            column: 30
          },
          end: {
            line: 1100,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1100,
            column: 41
          },
          end: {
            line: 1100,
            column: 64
          }
        },
        line: 1100
      },
      "122": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1108,
            column: 39
          },
          end: {
            line: 1108,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1108,
            column: 65
          },
          end: {
            line: 1110,
            column: 13
          }
        },
        line: 1108
      },
      "123": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1111,
            column: 39
          },
          end: {
            line: 1111,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1111,
            column: 68
          },
          end: {
            line: 1123,
            column: 13
          }
        },
        line: 1111
      },
      "124": {
        name: "(anonymous_124)",
        decl: {
          start: {
            line: 1114,
            column: 27
          },
          end: {
            line: 1114,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1114,
            column: 33
          },
          end: {
            line: 1114,
            column: 95
          }
        },
        line: 1114
      },
      "125": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1132,
            column: 39
          },
          end: {
            line: 1132,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1132,
            column: 96
          },
          end: {
            line: 1141,
            column: 13
          }
        },
        line: 1132
      },
      "126": {
        name: "(anonymous_126)",
        decl: {
          start: {
            line: 1138,
            column: 26
          },
          end: {
            line: 1138,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1138,
            column: 32
          },
          end: {
            line: 1138,
            column: 49
          }
        },
        line: 1138
      },
      "127": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1149,
            column: 39
          },
          end: {
            line: 1149,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1149,
            column: 65
          },
          end: {
            line: 1151,
            column: 13
          }
        },
        line: 1149
      },
      "128": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1160,
            column: 39
          },
          end: {
            line: 1160,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1160,
            column: 96
          },
          end: {
            line: 1169,
            column: 13
          }
        },
        line: 1160
      },
      "129": {
        name: "(anonymous_129)",
        decl: {
          start: {
            line: 1166,
            column: 26
          },
          end: {
            line: 1166,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1166,
            column: 32
          },
          end: {
            line: 1166,
            column: 49
          }
        },
        line: 1166
      },
      "130": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1170,
            column: 39
          },
          end: {
            line: 1170,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1170,
            column: 55
          },
          end: {
            line: 1183,
            column: 13
          }
        },
        line: 1170
      },
      "131": {
        name: "(anonymous_131)",
        decl: {
          start: {
            line: 1180,
            column: 30
          },
          end: {
            line: 1180,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1180,
            column: 36
          },
          end: {
            line: 1180,
            column: 93
          }
        },
        line: 1180
      },
      "132": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1191,
            column: 39
          },
          end: {
            line: 1191,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1191,
            column: 65
          },
          end: {
            line: 1193,
            column: 13
          }
        },
        line: 1191
      },
      "133": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1194,
            column: 39
          },
          end: {
            line: 1194,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1194,
            column: 57
          },
          end: {
            line: 1197,
            column: 13
          }
        },
        line: 1194
      },
      "134": {
        name: "(anonymous_134)",
        decl: {
          start: {
            line: 1219,
            column: 30
          },
          end: {
            line: 1219,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1219,
            column: 41
          },
          end: {
            line: 1219,
            column: 64
          }
        },
        line: 1219
      },
      "135": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1227,
            column: 39
          },
          end: {
            line: 1227,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1227,
            column: 65
          },
          end: {
            line: 1229,
            column: 13
          }
        },
        line: 1227
      },
      "136": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1230,
            column: 39
          },
          end: {
            line: 1230,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1230,
            column: 68
          },
          end: {
            line: 1242,
            column: 13
          }
        },
        line: 1230
      },
      "137": {
        name: "(anonymous_137)",
        decl: {
          start: {
            line: 1233,
            column: 27
          },
          end: {
            line: 1233,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1233,
            column: 33
          },
          end: {
            line: 1233,
            column: 95
          }
        },
        line: 1233
      },
      "138": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1251,
            column: 39
          },
          end: {
            line: 1251,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1251,
            column: 96
          },
          end: {
            line: 1260,
            column: 13
          }
        },
        line: 1251
      },
      "139": {
        name: "(anonymous_139)",
        decl: {
          start: {
            line: 1257,
            column: 26
          },
          end: {
            line: 1257,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1257,
            column: 32
          },
          end: {
            line: 1257,
            column: 49
          }
        },
        line: 1257
      },
      "140": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1268,
            column: 39
          },
          end: {
            line: 1268,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1268,
            column: 65
          },
          end: {
            line: 1270,
            column: 13
          }
        },
        line: 1268
      },
      "141": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1271,
            column: 39
          },
          end: {
            line: 1271,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1271,
            column: 55
          },
          end: {
            line: 1275,
            column: 13
          }
        },
        line: 1271
      },
      "142": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1283,
            column: 39
          },
          end: {
            line: 1283,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1283,
            column: 65
          },
          end: {
            line: 1285,
            column: 13
          }
        },
        line: 1283
      },
      "143": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1294,
            column: 39
          },
          end: {
            line: 1294,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1294,
            column: 96
          },
          end: {
            line: 1303,
            column: 13
          }
        },
        line: 1294
      },
      "144": {
        name: "(anonymous_144)",
        decl: {
          start: {
            line: 1300,
            column: 26
          },
          end: {
            line: 1300,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1300,
            column: 32
          },
          end: {
            line: 1300,
            column: 49
          }
        },
        line: 1300
      },
      "145": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1304,
            column: 39
          },
          end: {
            line: 1304,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1304,
            column: 55
          },
          end: {
            line: 1317,
            column: 13
          }
        },
        line: 1304
      },
      "146": {
        name: "(anonymous_146)",
        decl: {
          start: {
            line: 1314,
            column: 30
          },
          end: {
            line: 1314,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1314,
            column: 36
          },
          end: {
            line: 1314,
            column: 93
          }
        },
        line: 1314
      },
      "147": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1325,
            column: 39
          },
          end: {
            line: 1325,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1325,
            column: 65
          },
          end: {
            line: 1327,
            column: 13
          }
        },
        line: 1325
      },
      "148": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1328,
            column: 39
          },
          end: {
            line: 1328,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1328,
            column: 57
          },
          end: {
            line: 1331,
            column: 13
          }
        },
        line: 1328
      },
      "149": {
        name: "(anonymous_149)",
        decl: {
          start: {
            line: 1351,
            column: 30
          },
          end: {
            line: 1351,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1351,
            column: 41
          },
          end: {
            line: 1351,
            column: 64
          }
        },
        line: 1351
      },
      "150": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1359,
            column: 39
          },
          end: {
            line: 1359,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1359,
            column: 65
          },
          end: {
            line: 1361,
            column: 13
          }
        },
        line: 1359
      },
      "151": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1362,
            column: 39
          },
          end: {
            line: 1362,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1362,
            column: 68
          },
          end: {
            line: 1374,
            column: 13
          }
        },
        line: 1362
      },
      "152": {
        name: "(anonymous_152)",
        decl: {
          start: {
            line: 1365,
            column: 27
          },
          end: {
            line: 1365,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1365,
            column: 33
          },
          end: {
            line: 1365,
            column: 95
          }
        },
        line: 1365
      },
      "153": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1383,
            column: 39
          },
          end: {
            line: 1383,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1383,
            column: 96
          },
          end: {
            line: 1392,
            column: 13
          }
        },
        line: 1383
      },
      "154": {
        name: "(anonymous_154)",
        decl: {
          start: {
            line: 1389,
            column: 26
          },
          end: {
            line: 1389,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1389,
            column: 32
          },
          end: {
            line: 1389,
            column: 49
          }
        },
        line: 1389
      },
      "155": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1401,
            column: 39
          },
          end: {
            line: 1401,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1401,
            column: 96
          },
          end: {
            line: 1410,
            column: 13
          }
        },
        line: 1401
      },
      "156": {
        name: "(anonymous_156)",
        decl: {
          start: {
            line: 1407,
            column: 26
          },
          end: {
            line: 1407,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1407,
            column: 32
          },
          end: {
            line: 1407,
            column: 49
          }
        },
        line: 1407
      },
      "157": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1411,
            column: 39
          },
          end: {
            line: 1411,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1411,
            column: 55
          },
          end: {
            line: 1424,
            column: 13
          }
        },
        line: 1411
      },
      "158": {
        name: "(anonymous_158)",
        decl: {
          start: {
            line: 1421,
            column: 30
          },
          end: {
            line: 1421,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1421,
            column: 36
          },
          end: {
            line: 1421,
            column: 93
          }
        },
        line: 1421
      },
      "159": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1432,
            column: 39
          },
          end: {
            line: 1432,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1432,
            column: 65
          },
          end: {
            line: 1434,
            column: 13
          }
        },
        line: 1432
      },
      "160": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1435,
            column: 39
          },
          end: {
            line: 1435,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1435,
            column: 57
          },
          end: {
            line: 1438,
            column: 13
          }
        },
        line: 1435
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 54,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 81
          }
        }, {
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 54,
            column: 26
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 112,
            column: 20
          },
          end: {
            line: 114,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 82
          }
        }, {
          start: {
            line: 114,
            column: 24
          },
          end: {
            line: 114,
            column: 26
          }
        }],
        line: 112
      },
      "2": {
        loc: {
          start: {
            line: 169,
            column: 20
          },
          end: {
            line: 171,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 24
          },
          end: {
            line: 170,
            column: 81
          }
        }, {
          start: {
            line: 171,
            column: 24
          },
          end: {
            line: 171,
            column: 26
          }
        }],
        line: 169
      },
      "3": {
        loc: {
          start: {
            line: 247,
            column: 20
          },
          end: {
            line: 249,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 24
          },
          end: {
            line: 248,
            column: 82
          }
        }, {
          start: {
            line: 249,
            column: 24
          },
          end: {
            line: 249,
            column: 26
          }
        }],
        line: 247
      },
      "4": {
        loc: {
          start: {
            line: 304,
            column: 20
          },
          end: {
            line: 306,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 24
          },
          end: {
            line: 305,
            column: 81
          }
        }, {
          start: {
            line: 306,
            column: 24
          },
          end: {
            line: 306,
            column: 26
          }
        }],
        line: 304
      },
      "5": {
        loc: {
          start: {
            line: 364,
            column: 20
          },
          end: {
            line: 366,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 24
          },
          end: {
            line: 365,
            column: 82
          }
        }, {
          start: {
            line: 366,
            column: 24
          },
          end: {
            line: 366,
            column: 26
          }
        }],
        line: 364
      },
      "6": {
        loc: {
          start: {
            line: 421,
            column: 20
          },
          end: {
            line: 423,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 422,
            column: 24
          },
          end: {
            line: 422,
            column: 81
          }
        }, {
          start: {
            line: 423,
            column: 24
          },
          end: {
            line: 423,
            column: 26
          }
        }],
        line: 421
      },
      "7": {
        loc: {
          start: {
            line: 481,
            column: 20
          },
          end: {
            line: 483,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 482,
            column: 24
          },
          end: {
            line: 482,
            column: 82
          }
        }, {
          start: {
            line: 483,
            column: 24
          },
          end: {
            line: 483,
            column: 26
          }
        }],
        line: 481
      },
      "8": {
        loc: {
          start: {
            line: 540,
            column: 20
          },
          end: {
            line: 542,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 541,
            column: 24
          },
          end: {
            line: 541,
            column: 81
          }
        }, {
          start: {
            line: 542,
            column: 24
          },
          end: {
            line: 542,
            column: 26
          }
        }],
        line: 540
      },
      "9": {
        loc: {
          start: {
            line: 646,
            column: 20
          },
          end: {
            line: 648,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 647,
            column: 24
          },
          end: {
            line: 647,
            column: 82
          }
        }, {
          start: {
            line: 648,
            column: 24
          },
          end: {
            line: 648,
            column: 26
          }
        }],
        line: 646
      },
      "10": {
        loc: {
          start: {
            line: 703,
            column: 20
          },
          end: {
            line: 705,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 704,
            column: 24
          },
          end: {
            line: 704,
            column: 81
          }
        }, {
          start: {
            line: 705,
            column: 24
          },
          end: {
            line: 705,
            column: 26
          }
        }],
        line: 703
      },
      "11": {
        loc: {
          start: {
            line: 763,
            column: 20
          },
          end: {
            line: 765,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 764,
            column: 24
          },
          end: {
            line: 764,
            column: 82
          }
        }, {
          start: {
            line: 765,
            column: 24
          },
          end: {
            line: 765,
            column: 26
          }
        }],
        line: 763
      },
      "12": {
        loc: {
          start: {
            line: 822,
            column: 20
          },
          end: {
            line: 824,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 823,
            column: 24
          },
          end: {
            line: 823,
            column: 81
          }
        }, {
          start: {
            line: 824,
            column: 24
          },
          end: {
            line: 824,
            column: 26
          }
        }],
        line: 822
      },
      "13": {
        loc: {
          start: {
            line: 942,
            column: 20
          },
          end: {
            line: 944,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 943,
            column: 24
          },
          end: {
            line: 943,
            column: 82
          }
        }, {
          start: {
            line: 944,
            column: 24
          },
          end: {
            line: 944,
            column: 26
          }
        }],
        line: 942
      },
      "14": {
        loc: {
          start: {
            line: 999,
            column: 20
          },
          end: {
            line: 1001,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1000,
            column: 24
          },
          end: {
            line: 1000,
            column: 81
          }
        }, {
          start: {
            line: 1001,
            column: 24
          },
          end: {
            line: 1001,
            column: 26
          }
        }],
        line: 999
      },
      "15": {
        loc: {
          start: {
            line: 1059,
            column: 20
          },
          end: {
            line: 1061,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1060,
            column: 24
          },
          end: {
            line: 1060,
            column: 82
          }
        }, {
          start: {
            line: 1061,
            column: 24
          },
          end: {
            line: 1061,
            column: 26
          }
        }],
        line: 1059
      },
      "16": {
        loc: {
          start: {
            line: 1116,
            column: 20
          },
          end: {
            line: 1118,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1117,
            column: 24
          },
          end: {
            line: 1117,
            column: 81
          }
        }, {
          start: {
            line: 1118,
            column: 24
          },
          end: {
            line: 1118,
            column: 26
          }
        }],
        line: 1116
      },
      "17": {
        loc: {
          start: {
            line: 1176,
            column: 20
          },
          end: {
            line: 1178,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1177,
            column: 24
          },
          end: {
            line: 1177,
            column: 82
          }
        }, {
          start: {
            line: 1178,
            column: 24
          },
          end: {
            line: 1178,
            column: 26
          }
        }],
        line: 1176
      },
      "18": {
        loc: {
          start: {
            line: 1235,
            column: 20
          },
          end: {
            line: 1237,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1236,
            column: 24
          },
          end: {
            line: 1236,
            column: 81
          }
        }, {
          start: {
            line: 1237,
            column: 24
          },
          end: {
            line: 1237,
            column: 26
          }
        }],
        line: 1235
      },
      "19": {
        loc: {
          start: {
            line: 1310,
            column: 20
          },
          end: {
            line: 1312,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1311,
            column: 24
          },
          end: {
            line: 1311,
            column: 82
          }
        }, {
          start: {
            line: 1312,
            column: 24
          },
          end: {
            line: 1312,
            column: 26
          }
        }],
        line: 1310
      },
      "20": {
        loc: {
          start: {
            line: 1367,
            column: 20
          },
          end: {
            line: 1369,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1368,
            column: 24
          },
          end: {
            line: 1368,
            column: 81
          }
        }, {
          start: {
            line: 1369,
            column: 24
          },
          end: {
            line: 1369,
            column: 26
          }
        }],
        line: 1367
      },
      "21": {
        loc: {
          start: {
            line: 1417,
            column: 20
          },
          end: {
            line: 1419,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1418,
            column: 24
          },
          end: {
            line: 1418,
            column: 82
          }
        }, {
          start: {
            line: 1419,
            column: 24
          },
          end: {
            line: 1419,
            column: 26
          }
        }],
        line: 1417
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c562daf6c98efe4b16558aa76d7f000498bb3dfe"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_l960wvr4v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_l960wvr4v();

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













cov_l960wvr4v().s[0]++;
const ConfigurationTableConfig = (switchView, meshSyncResources, k8sConfig, connectionMetadataState) => {
  cov_l960wvr4v().f[0]++;
  const ping = (cov_l960wvr4v().s[1]++, (0,_hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP)());
  cov_l960wvr4v().s[2]++;
  return {
    ConfigMap: {
      name: 'ConfigMap',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[1]++;
            cov_l960wvr4v().s[3]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref) {
            let column = Object.assign({}, _ref);
            cov_l960wvr4v().f[2]++;
            cov_l960wvr4v().s[4]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[3]++;
            cov_l960wvr4v().s[5]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[4]++;
                cov_l960wvr4v().s[6]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[0][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[0][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref2, sortColumn, columnMeta) {
            let {
              index
            } = _ref2,
                column = _objectWithoutProperties(_ref2, _excluded);

            cov_l960wvr4v().f[5]++;
            cov_l960wvr4v().s[7]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[6]++;
                cov_l960wvr4v().s[8]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref3) {
            let column = Object.assign({}, _ref3);
            cov_l960wvr4v().f[7]++;
            cov_l960wvr4v().s[9]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref4, sortColumn, columnMeta) {
            let {
              index
            } = _ref4,
                column = _objectWithoutProperties(_ref4, _excluded2);

            cov_l960wvr4v().f[8]++;
            cov_l960wvr4v().s[10]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[9]++;
                cov_l960wvr4v().s[11]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[10]++;
            let context = (cov_l960wvr4v().s[12]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[13]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[1][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[1][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[11]++;
                cov_l960wvr4v().s[14]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref5) {
            let column = Object.assign({}, _ref5);
            cov_l960wvr4v().f[12]++;
            cov_l960wvr4v().s[15]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[13]++;
            let time = (cov_l960wvr4v().s[16]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[17]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    Secrets: {
      name: 'Secrets',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[14]++;
            cov_l960wvr4v().s[18]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref6) {
            let column = Object.assign({}, _ref6);
            cov_l960wvr4v().f[15]++;
            cov_l960wvr4v().s[19]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[16]++;
            cov_l960wvr4v().s[20]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[17]++;
                cov_l960wvr4v().s[21]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[2][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[2][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref7, sortColumn, columnMeta) {
            let {
              index
            } = _ref7,
                column = _objectWithoutProperties(_ref7, _excluded3);

            cov_l960wvr4v().f[18]++;
            cov_l960wvr4v().s[22]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[19]++;
                cov_l960wvr4v().s[23]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'type',
        label: 'Type',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref8, sortColumn, columnMeta) {
            let {
              index
            } = _ref8,
                column = _objectWithoutProperties(_ref8, _excluded4);

            cov_l960wvr4v().f[20]++;
            cov_l960wvr4v().s[24]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[21]++;
                cov_l960wvr4v().s[25]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref9) {
            let column = Object.assign({}, _ref9);
            cov_l960wvr4v().f[22]++;
            cov_l960wvr4v().s[26]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref10, sortColumn, columnMeta) {
            let {
              index
            } = _ref10,
                column = _objectWithoutProperties(_ref10, _excluded5);

            cov_l960wvr4v().f[23]++;
            cov_l960wvr4v().s[27]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[24]++;
                cov_l960wvr4v().s[28]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[25]++;
            let context = (cov_l960wvr4v().s[29]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[30]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[3][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[3][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[26]++;
                cov_l960wvr4v().s[31]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref11) {
            let column = Object.assign({}, _ref11);
            cov_l960wvr4v().f[27]++;
            cov_l960wvr4v().s[32]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[28]++;
            let time = (cov_l960wvr4v().s[33]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[34]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    ResourceQuota: {
      name: 'ResourceQuota',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[29]++;
            cov_l960wvr4v().s[35]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref12) {
            let column = Object.assign({}, _ref12);
            cov_l960wvr4v().f[30]++;
            cov_l960wvr4v().s[36]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[31]++;
            cov_l960wvr4v().s[37]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[32]++;
                cov_l960wvr4v().s[38]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[4][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[4][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref13, sortColumn, columnMeta) {
            let {
              index
            } = _ref13,
                column = _objectWithoutProperties(_ref13, _excluded6);

            cov_l960wvr4v().f[33]++;
            cov_l960wvr4v().s[39]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[34]++;
                cov_l960wvr4v().s[40]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref14) {
            let column = Object.assign({}, _ref14);
            cov_l960wvr4v().f[35]++;
            cov_l960wvr4v().s[41]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref15, sortColumn, columnMeta) {
            let {
              index
            } = _ref15,
                column = _objectWithoutProperties(_ref15, _excluded7);

            cov_l960wvr4v().f[36]++;
            cov_l960wvr4v().s[42]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[37]++;
                cov_l960wvr4v().s[43]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[38]++;
            let context = (cov_l960wvr4v().s[44]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[45]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[5][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[5][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[39]++;
                cov_l960wvr4v().s[46]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref16) {
            let column = Object.assign({}, _ref16);
            cov_l960wvr4v().f[40]++;
            cov_l960wvr4v().s[47]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[41]++;
            let time = (cov_l960wvr4v().s[48]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[49]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    LimitRange: {
      name: 'LimitRange',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[42]++;
            cov_l960wvr4v().s[50]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref17) {
            let column = Object.assign({}, _ref17);
            cov_l960wvr4v().f[43]++;
            cov_l960wvr4v().s[51]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[44]++;
            cov_l960wvr4v().s[52]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[45]++;
                cov_l960wvr4v().s[53]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[6][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[6][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref18, sortColumn, columnMeta) {
            let {
              index
            } = _ref18,
                column = _objectWithoutProperties(_ref18, _excluded8);

            cov_l960wvr4v().f[46]++;
            cov_l960wvr4v().s[54]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[47]++;
                cov_l960wvr4v().s[55]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref19) {
            let column = Object.assign({}, _ref19);
            cov_l960wvr4v().f[48]++;
            cov_l960wvr4v().s[56]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref20, sortColumn, columnMeta) {
            let {
              index
            } = _ref20,
                column = _objectWithoutProperties(_ref20, _excluded9);

            cov_l960wvr4v().f[49]++;
            cov_l960wvr4v().s[57]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[50]++;
                cov_l960wvr4v().s[58]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[51]++;
            let context = (cov_l960wvr4v().s[59]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[60]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[7][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[7][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[52]++;
                cov_l960wvr4v().s[61]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref21) {
            let column = Object.assign({}, _ref21);
            cov_l960wvr4v().f[53]++;
            cov_l960wvr4v().s[62]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[54]++;
            let time = (cov_l960wvr4v().s[63]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[64]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    HorizontalPodAutoscaler: {
      name: 'HorizontalPodAutoscaler',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 'm'], ['status.attribute', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[55]++;
            cov_l960wvr4v().s[65]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref22) {
            let column = Object.assign({}, _ref22);
            cov_l960wvr4v().f[56]++;
            cov_l960wvr4v().s[66]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[57]++;
            cov_l960wvr4v().s[67]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[58]++;
                cov_l960wvr4v().s[68]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[8][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[8][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref23, sortColumn, columnMeta) {
            let {
              index
            } = _ref23,
                column = _objectWithoutProperties(_ref23, _excluded10);

            cov_l960wvr4v().f[59]++;
            cov_l960wvr4v().s[69]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[60]++;
                cov_l960wvr4v().s[70]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Min Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref24) {
            let column = Object.assign({}, _ref24);
            cov_l960wvr4v().f[61]++;
            cov_l960wvr4v().s[71]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[62]++;
            let attribute = (cov_l960wvr4v().s[72]++, JSON.parse(val));
            let minReplicas = (cov_l960wvr4v().s[73]++, attribute?.minReplicas);
            cov_l960wvr4v().s[74]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: minReplicas
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Max Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref25) {
            let column = Object.assign({}, _ref25);
            cov_l960wvr4v().f[63]++;
            cov_l960wvr4v().s[75]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[64]++;
            let attribute = (cov_l960wvr4v().s[76]++, JSON.parse(val));
            let maxReplicas = (cov_l960wvr4v().s[77]++, attribute?.maxReplicas);
            cov_l960wvr4v().s[78]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: maxReplicas
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Current Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref26) {
            let column = Object.assign({}, _ref26);
            cov_l960wvr4v().f[65]++;
            cov_l960wvr4v().s[79]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[66]++;
            let attribute = (cov_l960wvr4v().s[80]++, JSON.parse(val));
            let currentReplicas = (cov_l960wvr4v().s[81]++, attribute?.currentReplicas);
            cov_l960wvr4v().s[82]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: currentReplicas
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref27) {
            let column = Object.assign({}, _ref27);
            cov_l960wvr4v().f[67]++;
            cov_l960wvr4v().s[83]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          sortThirdClickReset: true
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref28, sortColumn, columnMeta) {
            let {
              index
            } = _ref28,
                column = _objectWithoutProperties(_ref28, _excluded11);

            cov_l960wvr4v().f[68]++;
            cov_l960wvr4v().s[84]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[69]++;
                cov_l960wvr4v().s[85]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[70]++;
            let context = (cov_l960wvr4v().s[86]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[87]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[9][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[9][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[71]++;
                cov_l960wvr4v().s[88]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref29) {
            let column = Object.assign({}, _ref29);
            cov_l960wvr4v().f[72]++;
            cov_l960wvr4v().s[89]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[73]++;
            let time = (cov_l960wvr4v().s[90]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[91]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    VerticalPodAutoscaler: {
      name: 'VerticalPodAutoscaler',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[74]++;
            cov_l960wvr4v().s[92]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref30) {
            let column = Object.assign({}, _ref30);
            cov_l960wvr4v().f[75]++;
            cov_l960wvr4v().s[93]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[76]++;
            cov_l960wvr4v().s[94]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[77]++;
                cov_l960wvr4v().s[95]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[10][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[10][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref31, sortColumn, columnMeta) {
            let {
              index
            } = _ref31,
                column = _objectWithoutProperties(_ref31, _excluded12);

            cov_l960wvr4v().f[78]++;
            cov_l960wvr4v().s[96]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[79]++;
                cov_l960wvr4v().s[97]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref32) {
            let column = Object.assign({}, _ref32);
            cov_l960wvr4v().f[80]++;
            cov_l960wvr4v().s[98]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref33, sortColumn, columnMeta) {
            let {
              index
            } = _ref33,
                column = _objectWithoutProperties(_ref33, _excluded13);

            cov_l960wvr4v().f[81]++;
            cov_l960wvr4v().s[99]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[82]++;
                cov_l960wvr4v().s[100]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[83]++;
            let context = (cov_l960wvr4v().s[101]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[102]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[11][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[11][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[84]++;
                cov_l960wvr4v().s[103]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref34) {
            let column = Object.assign({}, _ref34);
            cov_l960wvr4v().f[85]++;
            cov_l960wvr4v().s[104]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[86]++;
            let time = (cov_l960wvr4v().s[105]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[106]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    PodDisruptionBudget: {
      name: 'PodDisruptionBudget',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 'm'], ['status.attribute', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[87]++;
            cov_l960wvr4v().s[107]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref35) {
            let column = Object.assign({}, _ref35);
            cov_l960wvr4v().f[88]++;
            cov_l960wvr4v().s[108]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[89]++;
            cov_l960wvr4v().s[109]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[90]++;
                cov_l960wvr4v().s[110]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[12][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[12][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref36, sortColumn, columnMeta) {
            let {
              index
            } = _ref36,
                column = _objectWithoutProperties(_ref36, _excluded14);

            cov_l960wvr4v().f[91]++;
            cov_l960wvr4v().s[111]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[92]++;
                cov_l960wvr4v().s[112]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Min Available',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref37) {
            let column = Object.assign({}, _ref37);
            cov_l960wvr4v().f[93]++;
            cov_l960wvr4v().s[113]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[94]++;
            let attribute = (cov_l960wvr4v().s[114]++, JSON.parse(val));
            let minAvailable = (cov_l960wvr4v().s[115]++, attribute?.minAvailable);
            cov_l960wvr4v().s[116]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: minAvailable
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Max Available',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref38) {
            let column = Object.assign({}, _ref38);
            cov_l960wvr4v().f[95]++;
            cov_l960wvr4v().s[117]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[96]++;
            let attribute = (cov_l960wvr4v().s[118]++, JSON.parse(val));
            let maxAvailable = (cov_l960wvr4v().s[119]++, attribute?.maxAvailable);
            cov_l960wvr4v().s[120]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: maxAvailable
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Current Healthy',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref39) {
            let column = Object.assign({}, _ref39);
            cov_l960wvr4v().f[97]++;
            cov_l960wvr4v().s[121]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[98]++;
            let attribute = (cov_l960wvr4v().s[122]++, JSON.parse(val));
            let currentHealthy = (cov_l960wvr4v().s[123]++, attribute?.currentHealthy);
            cov_l960wvr4v().s[124]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: currentHealthy
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Desired Healthy',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref40) {
            let column = Object.assign({}, _ref40);
            cov_l960wvr4v().f[99]++;
            cov_l960wvr4v().s[125]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[100]++;
            let attribute = (cov_l960wvr4v().s[126]++, JSON.parse(val));
            let desiredtHealthy = (cov_l960wvr4v().s[127]++, attribute?.desiredtHealthy);
            cov_l960wvr4v().s[128]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: desiredtHealthy
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref41) {
            let column = Object.assign({}, _ref41);
            cov_l960wvr4v().f[101]++;
            cov_l960wvr4v().s[129]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref42, sortColumn, columnMeta) {
            let {
              index
            } = _ref42,
                column = _objectWithoutProperties(_ref42, _excluded15);

            cov_l960wvr4v().f[102]++;
            cov_l960wvr4v().s[130]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[103]++;
                cov_l960wvr4v().s[131]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[104]++;
            let context = (cov_l960wvr4v().s[132]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[133]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[13][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[13][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[105]++;
                cov_l960wvr4v().s[134]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref43) {
            let column = Object.assign({}, _ref43);
            cov_l960wvr4v().f[106]++;
            cov_l960wvr4v().s[135]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[107]++;
            let time = (cov_l960wvr4v().s[136]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[137]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    PriorityClass: {
      name: 'PriorityClass',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[108]++;
            cov_l960wvr4v().s[138]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref44) {
            let column = Object.assign({}, _ref44);
            cov_l960wvr4v().f[109]++;
            cov_l960wvr4v().s[139]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[110]++;
            cov_l960wvr4v().s[140]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[111]++;
                cov_l960wvr4v().s[141]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[14][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[14][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref45, sortColumn, columnMeta) {
            let {
              index
            } = _ref45,
                column = _objectWithoutProperties(_ref45, _excluded16);

            cov_l960wvr4v().f[112]++;
            cov_l960wvr4v().s[142]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[113]++;
                cov_l960wvr4v().s[143]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref46) {
            let column = Object.assign({}, _ref46);
            cov_l960wvr4v().f[114]++;
            cov_l960wvr4v().s[144]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref47, sortColumn, columnMeta) {
            let {
              index
            } = _ref47,
                column = _objectWithoutProperties(_ref47, _excluded17);

            cov_l960wvr4v().f[115]++;
            cov_l960wvr4v().s[145]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[116]++;
                cov_l960wvr4v().s[146]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[117]++;
            let context = (cov_l960wvr4v().s[147]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[148]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[15][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[15][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[118]++;
                cov_l960wvr4v().s[149]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref48) {
            let column = Object.assign({}, _ref48);
            cov_l960wvr4v().f[119]++;
            cov_l960wvr4v().s[150]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[120]++;
            let time = (cov_l960wvr4v().s[151]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[152]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    RuntimeClass: {
      name: 'RuntimeClass',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[121]++;
            cov_l960wvr4v().s[153]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref49) {
            let column = Object.assign({}, _ref49);
            cov_l960wvr4v().f[122]++;
            cov_l960wvr4v().s[154]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[123]++;
            cov_l960wvr4v().s[155]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[124]++;
                cov_l960wvr4v().s[156]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[16][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[16][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref50, sortColumn, columnMeta) {
            let {
              index
            } = _ref50,
                column = _objectWithoutProperties(_ref50, _excluded18);

            cov_l960wvr4v().f[125]++;
            cov_l960wvr4v().s[157]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[126]++;
                cov_l960wvr4v().s[158]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref51) {
            let column = Object.assign({}, _ref51);
            cov_l960wvr4v().f[127]++;
            cov_l960wvr4v().s[159]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref52, sortColumn, columnMeta) {
            let {
              index
            } = _ref52,
                column = _objectWithoutProperties(_ref52, _excluded19);

            cov_l960wvr4v().f[128]++;
            cov_l960wvr4v().s[160]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[129]++;
                cov_l960wvr4v().s[161]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[130]++;
            let context = (cov_l960wvr4v().s[162]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[163]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[17][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[17][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[131]++;
                cov_l960wvr4v().s[164]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref53) {
            let column = Object.assign({}, _ref53);
            cov_l960wvr4v().f[132]++;
            cov_l960wvr4v().s[165]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[133]++;
            let time = (cov_l960wvr4v().s[166]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[167]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    Leases: {
      name: 'Leases',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 'm'], ['status.attribute', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[134]++;
            cov_l960wvr4v().s[168]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref54) {
            let column = Object.assign({}, _ref54);
            cov_l960wvr4v().f[135]++;
            cov_l960wvr4v().s[169]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[136]++;
            cov_l960wvr4v().s[170]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[137]++;
                cov_l960wvr4v().s[171]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[18][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[18][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref55, sortColumn, columnMeta) {
            let {
              index
            } = _ref55,
                column = _objectWithoutProperties(_ref55, _excluded20);

            cov_l960wvr4v().f[138]++;
            cov_l960wvr4v().s[172]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[139]++;
                cov_l960wvr4v().s[173]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Holder Identity',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref56) {
            let column = Object.assign({}, _ref56);
            cov_l960wvr4v().f[140]++;
            cov_l960wvr4v().s[174]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[141]++;
            let attribute = (cov_l960wvr4v().s[175]++, JSON.parse(val));
            let holderIdentity = (cov_l960wvr4v().s[176]++, attribute?.holderIdentity);
            cov_l960wvr4v().s[177]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: holderIdentity
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref57) {
            let column = Object.assign({}, _ref57);
            cov_l960wvr4v().f[142]++;
            cov_l960wvr4v().s[178]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref58, sortColumn, columnMeta) {
            let {
              index
            } = _ref58,
                column = _objectWithoutProperties(_ref58, _excluded21);

            cov_l960wvr4v().f[143]++;
            cov_l960wvr4v().s[179]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[144]++;
                cov_l960wvr4v().s[180]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[145]++;
            let context = (cov_l960wvr4v().s[181]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[182]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[19][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[19][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[146]++;
                cov_l960wvr4v().s[183]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref59) {
            let column = Object.assign({}, _ref59);
            cov_l960wvr4v().f[147]++;
            cov_l960wvr4v().s[184]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[148]++;
            let time = (cov_l960wvr4v().s[185]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[186]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    MutatingWebhookConfiguration: {
      name: 'MutatingWebhookConfiguration',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          customBodyRender: value => {
            cov_l960wvr4v().f[149]++;
            cov_l960wvr4v().s[187]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref60) {
            let column = Object.assign({}, _ref60);
            cov_l960wvr4v().f[150]++;
            cov_l960wvr4v().s[188]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_l960wvr4v().f[151]++;
            cov_l960wvr4v().s[189]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
              onClick: () => {
                cov_l960wvr4v().f[152]++;
                cov_l960wvr4v().s[190]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_l960wvr4v().b[20][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_l960wvr4v().b[20][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref61, sortColumn, columnMeta) {
            let {
              index
            } = _ref61,
                column = _objectWithoutProperties(_ref61, _excluded22);

            cov_l960wvr4v().f[153]++;
            cov_l960wvr4v().s[191]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[154]++;
                cov_l960wvr4v().s[192]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref62, sortColumn, columnMeta) {
            let {
              index
            } = _ref62,
                column = _objectWithoutProperties(_ref62, _excluded23);

            cov_l960wvr4v().f[155]++;
            cov_l960wvr4v().s[193]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_l960wvr4v().f[156]++;
                cov_l960wvr4v().s[194]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_l960wvr4v().f[157]++;
            let context = (cov_l960wvr4v().s[195]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_l960wvr4v().s[196]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_l960wvr4v().b[21][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_6__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_l960wvr4v().b[21][1]++, ''),
              handlePing: () => {
                cov_l960wvr4v().f[158]++;
                cov_l960wvr4v().s[197]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref63) {
            let column = Object.assign({}, _ref63);
            cov_l960wvr4v().f[159]++;
            cov_l960wvr4v().s[198]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_5__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_l960wvr4v().f[160]++;
            let time = (cov_l960wvr4v().s[199]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_l960wvr4v().s[200]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    }
  };
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 19152:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "F": () => (/* binding */ NamespaceTableConfig)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59077);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(96467);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(88767);
/* harmony import */ var _connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16845);
/* harmony import */ var _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(22921);
/* harmony import */ var _sortable_table_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(63471);
/* harmony import */ var _utils_Enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(46811);
/* harmony import */ var _utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7806);
/* harmony import */ var _components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(38409);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_config__WEBPACK_IMPORTED_MODULE_2__, _view__WEBPACK_IMPORTED_MODULE_3__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_5__]);
([_config__WEBPACK_IMPORTED_MODULE_2__, _view__WEBPACK_IMPORTED_MODULE_3__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
const _excluded = ["index"],
      _excluded2 = ["index"];

function cov_om6uem9w9() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/namespace/config.js";
  var hash = "2ab8d15624eb8fd31be6a523811d026f26c06805";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/namespace/config.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 36
        },
        end: {
          line: 128,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "2": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 127,
          column: 4
        }
      },
      "3": {
        start: {
          line: 36,
          column: 39
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "4": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 60
        }
      },
      "5": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 58,
          column: 14
        }
      },
      "6": {
        start: {
          line: 50,
          column: 31
        },
        end: {
          line: 50,
          column: 93
        }
      },
      "7": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 76,
          column: 14
        }
      },
      "8": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 74,
          column: 47
        }
      },
      "9": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 94,
          column: 14
        }
      },
      "10": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 47
        }
      },
      "11": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 97,
          column: 68
        }
      },
      "12": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 108,
          column: 14
        }
      },
      "13": {
        start: {
          line: 106,
          column: 34
        },
        end: {
          line: 106,
          column: 91
        }
      },
      "14": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 60
        }
      },
      "15": {
        start: {
          line: 121,
          column: 23
        },
        end: {
          line: 121,
          column: 37
        }
      },
      "16": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 36
          },
          end: {
            line: 14,
            column: 37
          }
        },
        loc: {
          start: {
            line: 19,
            column: 5
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 36,
            column: 29
          }
        },
        loc: {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 36,
            column: 62
          }
        },
        line: 36
      },
      "2": {
        name: "CustomHead",
        decl: {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 47
          }
        },
        loc: {
          start: {
            line: 44,
            column: 63
          },
          end: {
            line: 46,
            column: 11
          }
        },
        line: 44
      },
      "3": {
        name: "CustomBody",
        decl: {
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 47
          }
        },
        loc: {
          start: {
            line: 47,
            column: 66
          },
          end: {
            line: 59,
            column: 11
          }
        },
        line: 47
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 26
          }
        },
        loc: {
          start: {
            line: 50,
            column: 31
          },
          end: {
            line: 50,
            column: 93
          }
        },
        line: 50
      },
      "5": {
        name: "CustomHead",
        decl: {
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 68,
            column: 47
          }
        },
        loc: {
          start: {
            line: 68,
            column: 94
          },
          end: {
            line: 77,
            column: 11
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 25
          }
        },
        loc: {
          start: {
            line: 74,
            column: 30
          },
          end: {
            line: 74,
            column: 47
          }
        },
        line: 74
      },
      "7": {
        name: "CustomHead",
        decl: {
          start: {
            line: 86,
            column: 37
          },
          end: {
            line: 86,
            column: 47
          }
        },
        loc: {
          start: {
            line: 86,
            column: 94
          },
          end: {
            line: 95,
            column: 11
          }
        },
        line: 86
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 25
          }
        },
        loc: {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 92,
            column: 47
          }
        },
        line: 92
      },
      "9": {
        name: "CustomBody",
        decl: {
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 96,
            column: 47
          }
        },
        loc: {
          start: {
            line: 96,
            column: 53
          },
          end: {
            line: 109,
            column: 11
          }
        },
        line: 96
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 106,
            column: 29
          }
        },
        loc: {
          start: {
            line: 106,
            column: 34
          },
          end: {
            line: 106,
            column: 91
          }
        },
        line: 106
      },
      "11": {
        name: "CustomHead",
        decl: {
          start: {
            line: 117,
            column: 37
          },
          end: {
            line: 117,
            column: 47
          }
        },
        loc: {
          start: {
            line: 117,
            column: 63
          },
          end: {
            line: 119,
            column: 11
          }
        },
        line: 117
      },
      "12": {
        name: "CustomBody",
        decl: {
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 120,
            column: 47
          }
        },
        loc: {
          start: {
            line: 120,
            column: 55
          },
          end: {
            line: 123,
            column: 11
          }
        },
        line: 120
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 18
          },
          end: {
            line: 54,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 53,
            column: 79
          }
        }, {
          start: {
            line: 54,
            column: 22
          },
          end: {
            line: 54,
            column: 24
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 102,
            column: 18
          },
          end: {
            line: 104,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 22
          },
          end: {
            line: 103,
            column: 80
          }
        }, {
          start: {
            line: 104,
            column: 22
          },
          end: {
            line: 104,
            column: 24
          }
        }],
        line: 102
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2ab8d15624eb8fd31be6a523811d026f26c06805"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_om6uem9w9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_om6uem9w9();

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













cov_om6uem9w9().s[0]++;
const NamespaceTableConfig = (switchView, meshSyncResources, k8sConfig, connectionMetadataState) => {
  cov_om6uem9w9().f[0]++;
  const ping = (cov_om6uem9w9().s[1]++, (0,_hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP)());
  cov_om6uem9w9().s[2]++;
  return {
    name: 'Namespace',
    colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
    columns: [{
      name: 'id',
      label: 'ID',
      options: {
        display: false,
        customBodyRender: value => {
          cov_om6uem9w9().f[1]++;
          cov_om6uem9w9().s[3]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
            id: value
          });
        }
      }
    }, {
      name: 'metadata.name',
      label: 'Name',
      options: {
        sort: false,
        customHeadRender: function CustomHead(_ref) {
          let column = Object.assign({}, _ref);
          cov_om6uem9w9().f[2]++;
          cov_om6uem9w9().s[4]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_6__/* .DefaultTableCell */ .V, {
            columnData: column
          });
        },
        customBodyRender: function CustomBody(value, tableMeta) {
          cov_om6uem9w9().f[3]++;
          cov_om6uem9w9().s[5]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_3__/* .Title */ .D, {
            onClick: () => {
              cov_om6uem9w9().f[4]++;
              cov_om6uem9w9().s[6]++;
              return switchView(_config__WEBPACK_IMPORTED_MODULE_2__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
            },
            data: meshSyncResources[tableMeta.rowIndex] ? (cov_om6uem9w9().b[0][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_om6uem9w9().b[0][1]++, {}),
            value: value
          });
        }
      }
    }, {
      name: 'apiVersion',
      label: 'API version',
      options: {
        sort: true,
        sortThirdClickReset: true,
        customHeadRender: function CustomHead(_ref2, sortColumn, columnMeta) {
          let {
            index
          } = _ref2,
              column = _objectWithoutProperties(_ref2, _excluded);

          cov_om6uem9w9().f[5]++;
          cov_om6uem9w9().s[7]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_6__/* .SortableTableCell */ .k, {
            index: index,
            columnData: column,
            columnMeta: columnMeta,
            onSort: () => {
              cov_om6uem9w9().f[6]++;
              cov_om6uem9w9().s[8]++;
              return sortColumn(index);
            }
          });
        }
      }
    }, {
      name: 'cluster_id',
      label: 'Cluster',
      options: {
        sort: true,
        sortThirdClickReset: true,
        customHeadRender: function CustomHead(_ref3, sortColumn, columnMeta) {
          let {
            index
          } = _ref3,
              column = _objectWithoutProperties(_ref3, _excluded2);

          cov_om6uem9w9().f[7]++;
          cov_om6uem9w9().s[9]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_6__/* .SortableTableCell */ .k, {
            index: index,
            columnData: column,
            columnMeta: columnMeta,
            onSort: () => {
              cov_om6uem9w9().f[8]++;
              cov_om6uem9w9().s[10]++;
              return sortColumn(index);
            }
          });
        },
        customBodyRender: function CustomBody(val) {
          cov_om6uem9w9().f[9]++;
          let context = (cov_om6uem9w9().s[11]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
          cov_om6uem9w9().s[12]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_4__/* .TootltipWrappedConnectionChip */ .$h, {
            title: context.name,
            iconSrc: connectionMetadataState ? (cov_om6uem9w9().b[1][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_7__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_om6uem9w9().b[1][1]++, ''),
            handlePing: () => {
              cov_om6uem9w9().f[10]++;
              cov_om6uem9w9().s[13]++;
              return ping(context.name, context.server, context.connection_id);
            }
          });
        }
      }
    }, {
      name: 'metadata.creationTimestamp',
      label: 'Age',
      options: {
        sort: false,
        customHeadRender: function CustomHead(_ref4) {
          let column = Object.assign({}, _ref4);
          cov_om6uem9w9().f[11]++;
          cov_om6uem9w9().s[14]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_6__/* .DefaultTableCell */ .V, {
            columnData: column
          });
        },
        customBodyRender: function CustomBody(value) {
          cov_om6uem9w9().f[12]++;
          let time = (cov_om6uem9w9().s[15]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
          cov_om6uem9w9().s[16]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
            children: time
          });
        }
      }
    }]
  };
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 11921:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i": () => (/* binding */ NetWorkTableConfig)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59077);
/* harmony import */ var _utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7806);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96467);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88767);
/* harmony import */ var _connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16845);
/* harmony import */ var _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22921);
/* harmony import */ var _sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63471);
/* harmony import */ var _utils_Enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(46811);
/* harmony import */ var _components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(38409);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__]);
([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
const _excluded = ["index"],
      _excluded2 = ["index"],
      _excluded3 = ["index"],
      _excluded4 = ["index"],
      _excluded5 = ["index"],
      _excluded6 = ["index"],
      _excluded7 = ["index"],
      _excluded8 = ["index"],
      _excluded9 = ["index"],
      _excluded10 = ["index"];

function cov_1pf7vaiw03() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/network/config.js";
  var hash = "17dcc7914692b8be87be1ee09ed4531026e85fb3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/network/config.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 794,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "2": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 793,
          column: 4
        }
      },
      "3": {
        start: {
          line: 42,
          column: 41
        },
        end: {
          line: 42,
          column: 64
        }
      },
      "4": {
        start: {
          line: 51,
          column: 14
        },
        end: {
          line: 51,
          column: 62
        }
      },
      "5": {
        start: {
          line: 54,
          column: 14
        },
        end: {
          line: 64,
          column: 16
        }
      },
      "6": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 56,
          column: 95
        }
      },
      "7": {
        start: {
          line: 75,
          column: 14
        },
        end: {
          line: 82,
          column: 16
        }
      },
      "8": {
        start: {
          line: 80,
          column: 32
        },
        end: {
          line: 80,
          column: 49
        }
      },
      "9": {
        start: {
          line: 92,
          column: 14
        },
        end: {
          line: 92,
          column: 62
        }
      },
      "10": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 95,
          column: 45
        }
      },
      "11": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 96,
          column: 40
        }
      },
      "12": {
        start: {
          line: 97,
          column: 14
        },
        end: {
          line: 97,
          column: 33
        }
      },
      "13": {
        start: {
          line: 107,
          column: 14
        },
        end: {
          line: 107,
          column: 62
        }
      },
      "14": {
        start: {
          line: 110,
          column: 30
        },
        end: {
          line: 110,
          column: 45
        }
      },
      "15": {
        start: {
          line: 111,
          column: 30
        },
        end: {
          line: 111,
          column: 50
        }
      },
      "16": {
        start: {
          line: 112,
          column: 14
        },
        end: {
          line: 112,
          column: 38
        }
      },
      "17": {
        start: {
          line: 122,
          column: 14
        },
        end: {
          line: 122,
          column: 62
        }
      },
      "18": {
        start: {
          line: 125,
          column: 30
        },
        end: {
          line: 125,
          column: 45
        }
      },
      "19": {
        start: {
          line: 126,
          column: 33
        },
        end: {
          line: 126,
          column: 56
        }
      },
      "20": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 127,
          column: 51
        }
      },
      "21": {
        start: {
          line: 128,
          column: 14
        },
        end: {
          line: 139,
          column: 16
        }
      },
      "22": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 136,
          column: 22
        }
      },
      "23": {
        start: {
          line: 149,
          column: 14
        },
        end: {
          line: 149,
          column: 62
        }
      },
      "24": {
        start: {
          line: 152,
          column: 30
        },
        end: {
          line: 152,
          column: 45
        }
      },
      "25": {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 42
        }
      },
      "26": {
        start: {
          line: 155,
          column: 34
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "27": {
        start: {
          line: 156,
          column: 14
        },
        end: {
          line: 183,
          column: 16
        }
      },
      "28": {
        start: {
          line: 160,
          column: 22
        },
        end: {
          line: 163,
          column: 28
        }
      },
      "29": {
        start: {
          line: 175,
          column: 26
        },
        end: {
          line: 175,
          column: 88
        }
      },
      "30": {
        start: {
          line: 193,
          column: 14
        },
        end: {
          line: 193,
          column: 62
        }
      },
      "31": {
        start: {
          line: 204,
          column: 14
        },
        end: {
          line: 211,
          column: 16
        }
      },
      "32": {
        start: {
          line: 209,
          column: 32
        },
        end: {
          line: 209,
          column: 49
        }
      },
      "33": {
        start: {
          line: 214,
          column: 28
        },
        end: {
          line: 214,
          column: 70
        }
      },
      "34": {
        start: {
          line: 216,
          column: 14
        },
        end: {
          line: 228,
          column: 16
        }
      },
      "35": {
        start: {
          line: 225,
          column: 38
        },
        end: {
          line: 225,
          column: 95
        }
      },
      "36": {
        start: {
          line: 238,
          column: 14
        },
        end: {
          line: 238,
          column: 62
        }
      },
      "37": {
        start: {
          line: 241,
          column: 25
        },
        end: {
          line: 241,
          column: 39
        }
      },
      "38": {
        start: {
          line: 242,
          column: 14
        },
        end: {
          line: 242,
          column: 33
        }
      },
      "39": {
        start: {
          line: 264,
          column: 41
        },
        end: {
          line: 264,
          column: 64
        }
      },
      "40": {
        start: {
          line: 273,
          column: 14
        },
        end: {
          line: 273,
          column: 62
        }
      },
      "41": {
        start: {
          line: 276,
          column: 14
        },
        end: {
          line: 286,
          column: 16
        }
      },
      "42": {
        start: {
          line: 278,
          column: 33
        },
        end: {
          line: 278,
          column: 95
        }
      },
      "43": {
        start: {
          line: 297,
          column: 14
        },
        end: {
          line: 304,
          column: 16
        }
      },
      "44": {
        start: {
          line: 302,
          column: 32
        },
        end: {
          line: 302,
          column: 49
        }
      },
      "45": {
        start: {
          line: 314,
          column: 14
        },
        end: {
          line: 314,
          column: 62
        }
      },
      "46": {
        start: {
          line: 324,
          column: 14
        },
        end: {
          line: 331,
          column: 16
        }
      },
      "47": {
        start: {
          line: 329,
          column: 32
        },
        end: {
          line: 329,
          column: 49
        }
      },
      "48": {
        start: {
          line: 334,
          column: 28
        },
        end: {
          line: 334,
          column: 70
        }
      },
      "49": {
        start: {
          line: 335,
          column: 14
        },
        end: {
          line: 345,
          column: 16
        }
      },
      "50": {
        start: {
          line: 343,
          column: 36
        },
        end: {
          line: 343,
          column: 93
        }
      },
      "51": {
        start: {
          line: 355,
          column: 14
        },
        end: {
          line: 355,
          column: 62
        }
      },
      "52": {
        start: {
          line: 358,
          column: 25
        },
        end: {
          line: 358,
          column: 39
        }
      },
      "53": {
        start: {
          line: 359,
          column: 14
        },
        end: {
          line: 359,
          column: 33
        }
      },
      "54": {
        start: {
          line: 382,
          column: 41
        },
        end: {
          line: 382,
          column: 64
        }
      },
      "55": {
        start: {
          line: 391,
          column: 14
        },
        end: {
          line: 391,
          column: 62
        }
      },
      "56": {
        start: {
          line: 394,
          column: 14
        },
        end: {
          line: 404,
          column: 16
        }
      },
      "57": {
        start: {
          line: 396,
          column: 33
        },
        end: {
          line: 396,
          column: 95
        }
      },
      "58": {
        start: {
          line: 415,
          column: 14
        },
        end: {
          line: 422,
          column: 16
        }
      },
      "59": {
        start: {
          line: 420,
          column: 32
        },
        end: {
          line: 420,
          column: 49
        }
      },
      "60": {
        start: {
          line: 432,
          column: 14
        },
        end: {
          line: 432,
          column: 62
        }
      },
      "61": {
        start: {
          line: 435,
          column: 30
        },
        end: {
          line: 435,
          column: 45
        }
      },
      "62": {
        start: {
          line: 436,
          column: 33
        },
        end: {
          line: 436,
          column: 55
        }
      },
      "63": {
        start: {
          line: 437,
          column: 14
        },
        end: {
          line: 448,
          column: 16
        }
      },
      "64": {
        start: {
          line: 440,
          column: 20
        },
        end: {
          line: 445,
          column: 22
        }
      },
      "65": {
        start: {
          line: 458,
          column: 14
        },
        end: {
          line: 458,
          column: 62
        }
      },
      "66": {
        start: {
          line: 469,
          column: 14
        },
        end: {
          line: 476,
          column: 16
        }
      },
      "67": {
        start: {
          line: 474,
          column: 32
        },
        end: {
          line: 474,
          column: 49
        }
      },
      "68": {
        start: {
          line: 479,
          column: 28
        },
        end: {
          line: 479,
          column: 70
        }
      },
      "69": {
        start: {
          line: 480,
          column: 14
        },
        end: {
          line: 492,
          column: 16
        }
      },
      "70": {
        start: {
          line: 489,
          column: 38
        },
        end: {
          line: 489,
          column: 95
        }
      },
      "71": {
        start: {
          line: 502,
          column: 14
        },
        end: {
          line: 502,
          column: 62
        }
      },
      "72": {
        start: {
          line: 505,
          column: 25
        },
        end: {
          line: 505,
          column: 39
        }
      },
      "73": {
        start: {
          line: 506,
          column: 14
        },
        end: {
          line: 506,
          column: 33
        }
      },
      "74": {
        start: {
          line: 529,
          column: 41
        },
        end: {
          line: 529,
          column: 64
        }
      },
      "75": {
        start: {
          line: 538,
          column: 14
        },
        end: {
          line: 538,
          column: 62
        }
      },
      "76": {
        start: {
          line: 541,
          column: 14
        },
        end: {
          line: 551,
          column: 16
        }
      },
      "77": {
        start: {
          line: 543,
          column: 33
        },
        end: {
          line: 543,
          column: 95
        }
      },
      "78": {
        start: {
          line: 562,
          column: 14
        },
        end: {
          line: 569,
          column: 16
        }
      },
      "79": {
        start: {
          line: 567,
          column: 32
        },
        end: {
          line: 567,
          column: 49
        }
      },
      "80": {
        start: {
          line: 579,
          column: 14
        },
        end: {
          line: 579,
          column: 62
        }
      },
      "81": {
        start: {
          line: 582,
          column: 30
        },
        end: {
          line: 582,
          column: 45
        }
      },
      "82": {
        start: {
          line: 583,
          column: 31
        },
        end: {
          line: 583,
          column: 52
        }
      },
      "83": {
        start: {
          line: 584,
          column: 14
        },
        end: {
          line: 584,
          column: 39
        }
      },
      "84": {
        start: {
          line: 594,
          column: 14
        },
        end: {
          line: 594,
          column: 62
        }
      },
      "85": {
        start: {
          line: 605,
          column: 14
        },
        end: {
          line: 612,
          column: 16
        }
      },
      "86": {
        start: {
          line: 610,
          column: 32
        },
        end: {
          line: 610,
          column: 49
        }
      },
      "87": {
        start: {
          line: 615,
          column: 28
        },
        end: {
          line: 615,
          column: 70
        }
      },
      "88": {
        start: {
          line: 616,
          column: 14
        },
        end: {
          line: 628,
          column: 16
        }
      },
      "89": {
        start: {
          line: 625,
          column: 38
        },
        end: {
          line: 625,
          column: 95
        }
      },
      "90": {
        start: {
          line: 638,
          column: 14
        },
        end: {
          line: 638,
          column: 62
        }
      },
      "91": {
        start: {
          line: 641,
          column: 25
        },
        end: {
          line: 641,
          column: 39
        }
      },
      "92": {
        start: {
          line: 642,
          column: 14
        },
        end: {
          line: 642,
          column: 33
        }
      },
      "93": {
        start: {
          line: 665,
          column: 41
        },
        end: {
          line: 665,
          column: 64
        }
      },
      "94": {
        start: {
          line: 674,
          column: 14
        },
        end: {
          line: 674,
          column: 62
        }
      },
      "95": {
        start: {
          line: 677,
          column: 14
        },
        end: {
          line: 687,
          column: 16
        }
      },
      "96": {
        start: {
          line: 679,
          column: 33
        },
        end: {
          line: 679,
          column: 95
        }
      },
      "97": {
        start: {
          line: 698,
          column: 14
        },
        end: {
          line: 705,
          column: 16
        }
      },
      "98": {
        start: {
          line: 703,
          column: 32
        },
        end: {
          line: 703,
          column: 49
        }
      },
      "99": {
        start: {
          line: 715,
          column: 14
        },
        end: {
          line: 715,
          column: 62
        }
      },
      "100": {
        start: {
          line: 718,
          column: 30
        },
        end: {
          line: 718,
          column: 45
        }
      },
      "101": {
        start: {
          line: 719,
          column: 32
        },
        end: {
          line: 719,
          column: 54
        }
      },
      "102": {
        start: {
          line: 720,
          column: 14
        },
        end: {
          line: 731,
          column: 16
        }
      },
      "103": {
        start: {
          line: 723,
          column: 20
        },
        end: {
          line: 728,
          column: 22
        }
      },
      "104": {
        start: {
          line: 741,
          column: 14
        },
        end: {
          line: 741,
          column: 62
        }
      },
      "105": {
        start: {
          line: 752,
          column: 14
        },
        end: {
          line: 759,
          column: 16
        }
      },
      "106": {
        start: {
          line: 757,
          column: 32
        },
        end: {
          line: 757,
          column: 49
        }
      },
      "107": {
        start: {
          line: 762,
          column: 28
        },
        end: {
          line: 762,
          column: 70
        }
      },
      "108": {
        start: {
          line: 763,
          column: 14
        },
        end: {
          line: 773,
          column: 16
        }
      },
      "109": {
        start: {
          line: 771,
          column: 36
        },
        end: {
          line: 771,
          column: 93
        }
      },
      "110": {
        start: {
          line: 783,
          column: 14
        },
        end: {
          line: 783,
          column: 62
        }
      },
      "111": {
        start: {
          line: 786,
          column: 25
        },
        end: {
          line: 786,
          column: 39
        }
      },
      "112": {
        start: {
          line: 787,
          column: 14
        },
        end: {
          line: 787,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 34
          },
          end: {
            line: 14,
            column: 35
          }
        },
        loc: {
          start: {
            line: 19,
            column: 5
          },
          end: {
            line: 794,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 42,
            column: 31
          }
        },
        loc: {
          start: {
            line: 42,
            column: 41
          },
          end: {
            line: 42,
            column: 64
          }
        },
        line: 42
      },
      "2": {
        name: "CustomHead",
        decl: {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 50,
            column: 49
          }
        },
        loc: {
          start: {
            line: 50,
            column: 65
          },
          end: {
            line: 52,
            column: 13
          }
        },
        line: 50
      },
      "3": {
        name: "CustomBody",
        decl: {
          start: {
            line: 53,
            column: 39
          },
          end: {
            line: 53,
            column: 49
          }
        },
        loc: {
          start: {
            line: 53,
            column: 68
          },
          end: {
            line: 65,
            column: 13
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 27
          },
          end: {
            line: 56,
            column: 28
          }
        },
        loc: {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 95
          }
        },
        line: 56
      },
      "5": {
        name: "CustomHead",
        decl: {
          start: {
            line: 74,
            column: 39
          },
          end: {
            line: 74,
            column: 49
          }
        },
        loc: {
          start: {
            line: 74,
            column: 96
          },
          end: {
            line: 83,
            column: 13
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 27
          }
        },
        loc: {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 49
          }
        },
        line: 80
      },
      "7": {
        name: "CustomHead",
        decl: {
          start: {
            line: 91,
            column: 39
          },
          end: {
            line: 91,
            column: 49
          }
        },
        loc: {
          start: {
            line: 91,
            column: 65
          },
          end: {
            line: 93,
            column: 13
          }
        },
        line: 91
      },
      "8": {
        name: "CustomBody",
        decl: {
          start: {
            line: 94,
            column: 39
          },
          end: {
            line: 94,
            column: 49
          }
        },
        loc: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 98,
            column: 13
          }
        },
        line: 94
      },
      "9": {
        name: "CustomHead",
        decl: {
          start: {
            line: 106,
            column: 39
          },
          end: {
            line: 106,
            column: 49
          }
        },
        loc: {
          start: {
            line: 106,
            column: 65
          },
          end: {
            line: 108,
            column: 13
          }
        },
        line: 106
      },
      "10": {
        name: "CustomBody",
        decl: {
          start: {
            line: 109,
            column: 39
          },
          end: {
            line: 109,
            column: 49
          }
        },
        loc: {
          start: {
            line: 109,
            column: 55
          },
          end: {
            line: 113,
            column: 13
          }
        },
        line: 109
      },
      "11": {
        name: "CustomHead",
        decl: {
          start: {
            line: 121,
            column: 39
          },
          end: {
            line: 121,
            column: 49
          }
        },
        loc: {
          start: {
            line: 121,
            column: 65
          },
          end: {
            line: 123,
            column: 13
          }
        },
        line: 121
      },
      "12": {
        name: "CustomBody",
        decl: {
          start: {
            line: 124,
            column: 39
          },
          end: {
            line: 124,
            column: 49
          }
        },
        loc: {
          start: {
            line: 124,
            column: 55
          },
          end: {
            line: 140,
            column: 13
          }
        },
        line: 124
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 130,
            column: 34
          },
          end: {
            line: 130,
            column: 35
          }
        },
        loc: {
          start: {
            line: 130,
            column: 50
          },
          end: {
            line: 137,
            column: 19
          }
        },
        line: 130
      },
      "14": {
        name: "CustomHead",
        decl: {
          start: {
            line: 148,
            column: 39
          },
          end: {
            line: 148,
            column: 49
          }
        },
        loc: {
          start: {
            line: 148,
            column: 65
          },
          end: {
            line: 150,
            column: 13
          }
        },
        line: 148
      },
      "15": {
        name: "CustomBody",
        decl: {
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 151,
            column: 49
          }
        },
        loc: {
          start: {
            line: 151,
            column: 66
          },
          end: {
            line: 184,
            column: 13
          }
        },
        line: 151
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 159,
            column: 44
          },
          end: {
            line: 159,
            column: 45
          }
        },
        loc: {
          start: {
            line: 160,
            column: 22
          },
          end: {
            line: 163,
            column: 28
          }
        },
        line: 160
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 174,
            column: 33
          },
          end: {
            line: 174,
            column: 34
          }
        },
        loc: {
          start: {
            line: 175,
            column: 26
          },
          end: {
            line: 175,
            column: 88
          }
        },
        line: 175
      },
      "18": {
        name: "CustomHead",
        decl: {
          start: {
            line: 192,
            column: 39
          },
          end: {
            line: 192,
            column: 49
          }
        },
        loc: {
          start: {
            line: 192,
            column: 65
          },
          end: {
            line: 194,
            column: 13
          }
        },
        line: 192
      },
      "19": {
        name: "CustomHead",
        decl: {
          start: {
            line: 203,
            column: 39
          },
          end: {
            line: 203,
            column: 49
          }
        },
        loc: {
          start: {
            line: 203,
            column: 96
          },
          end: {
            line: 212,
            column: 13
          }
        },
        line: 203
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 209,
            column: 26
          },
          end: {
            line: 209,
            column: 27
          }
        },
        loc: {
          start: {
            line: 209,
            column: 32
          },
          end: {
            line: 209,
            column: 49
          }
        },
        line: 209
      },
      "21": {
        name: "CustomBody",
        decl: {
          start: {
            line: 213,
            column: 39
          },
          end: {
            line: 213,
            column: 49
          }
        },
        loc: {
          start: {
            line: 213,
            column: 55
          },
          end: {
            line: 229,
            column: 13
          }
        },
        line: 213
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 225,
            column: 32
          },
          end: {
            line: 225,
            column: 33
          }
        },
        loc: {
          start: {
            line: 225,
            column: 38
          },
          end: {
            line: 225,
            column: 95
          }
        },
        line: 225
      },
      "23": {
        name: "CustomHead",
        decl: {
          start: {
            line: 237,
            column: 39
          },
          end: {
            line: 237,
            column: 49
          }
        },
        loc: {
          start: {
            line: 237,
            column: 65
          },
          end: {
            line: 239,
            column: 13
          }
        },
        line: 237
      },
      "24": {
        name: "CustomBody",
        decl: {
          start: {
            line: 240,
            column: 39
          },
          end: {
            line: 240,
            column: 49
          }
        },
        loc: {
          start: {
            line: 240,
            column: 57
          },
          end: {
            line: 243,
            column: 13
          }
        },
        line: 240
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 264,
            column: 30
          },
          end: {
            line: 264,
            column: 31
          }
        },
        loc: {
          start: {
            line: 264,
            column: 41
          },
          end: {
            line: 264,
            column: 64
          }
        },
        line: 264
      },
      "26": {
        name: "CustomHead",
        decl: {
          start: {
            line: 272,
            column: 39
          },
          end: {
            line: 272,
            column: 49
          }
        },
        loc: {
          start: {
            line: 272,
            column: 65
          },
          end: {
            line: 274,
            column: 13
          }
        },
        line: 272
      },
      "27": {
        name: "CustomBody",
        decl: {
          start: {
            line: 275,
            column: 39
          },
          end: {
            line: 275,
            column: 49
          }
        },
        loc: {
          start: {
            line: 275,
            column: 68
          },
          end: {
            line: 287,
            column: 13
          }
        },
        line: 275
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 278,
            column: 27
          },
          end: {
            line: 278,
            column: 28
          }
        },
        loc: {
          start: {
            line: 278,
            column: 33
          },
          end: {
            line: 278,
            column: 95
          }
        },
        line: 278
      },
      "29": {
        name: "CustomHead",
        decl: {
          start: {
            line: 296,
            column: 39
          },
          end: {
            line: 296,
            column: 49
          }
        },
        loc: {
          start: {
            line: 296,
            column: 96
          },
          end: {
            line: 305,
            column: 13
          }
        },
        line: 296
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 302,
            column: 26
          },
          end: {
            line: 302,
            column: 27
          }
        },
        loc: {
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 302,
            column: 49
          }
        },
        line: 302
      },
      "31": {
        name: "CustomHead",
        decl: {
          start: {
            line: 313,
            column: 39
          },
          end: {
            line: 313,
            column: 49
          }
        },
        loc: {
          start: {
            line: 313,
            column: 65
          },
          end: {
            line: 315,
            column: 13
          }
        },
        line: 313
      },
      "32": {
        name: "CustomHead",
        decl: {
          start: {
            line: 323,
            column: 39
          },
          end: {
            line: 323,
            column: 49
          }
        },
        loc: {
          start: {
            line: 323,
            column: 96
          },
          end: {
            line: 332,
            column: 13
          }
        },
        line: 323
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 329,
            column: 26
          },
          end: {
            line: 329,
            column: 27
          }
        },
        loc: {
          start: {
            line: 329,
            column: 32
          },
          end: {
            line: 329,
            column: 49
          }
        },
        line: 329
      },
      "34": {
        name: "CustomBody",
        decl: {
          start: {
            line: 333,
            column: 39
          },
          end: {
            line: 333,
            column: 49
          }
        },
        loc: {
          start: {
            line: 333,
            column: 55
          },
          end: {
            line: 346,
            column: 13
          }
        },
        line: 333
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 343,
            column: 31
          }
        },
        loc: {
          start: {
            line: 343,
            column: 36
          },
          end: {
            line: 343,
            column: 93
          }
        },
        line: 343
      },
      "36": {
        name: "CustomHead",
        decl: {
          start: {
            line: 354,
            column: 39
          },
          end: {
            line: 354,
            column: 49
          }
        },
        loc: {
          start: {
            line: 354,
            column: 65
          },
          end: {
            line: 356,
            column: 13
          }
        },
        line: 354
      },
      "37": {
        name: "CustomBody",
        decl: {
          start: {
            line: 357,
            column: 39
          },
          end: {
            line: 357,
            column: 49
          }
        },
        loc: {
          start: {
            line: 357,
            column: 57
          },
          end: {
            line: 360,
            column: 13
          }
        },
        line: 357
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 382,
            column: 30
          },
          end: {
            line: 382,
            column: 31
          }
        },
        loc: {
          start: {
            line: 382,
            column: 41
          },
          end: {
            line: 382,
            column: 64
          }
        },
        line: 382
      },
      "39": {
        name: "CustomHead",
        decl: {
          start: {
            line: 390,
            column: 39
          },
          end: {
            line: 390,
            column: 49
          }
        },
        loc: {
          start: {
            line: 390,
            column: 65
          },
          end: {
            line: 392,
            column: 13
          }
        },
        line: 390
      },
      "40": {
        name: "CustomBody",
        decl: {
          start: {
            line: 393,
            column: 39
          },
          end: {
            line: 393,
            column: 49
          }
        },
        loc: {
          start: {
            line: 393,
            column: 68
          },
          end: {
            line: 405,
            column: 13
          }
        },
        line: 393
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 396,
            column: 27
          },
          end: {
            line: 396,
            column: 28
          }
        },
        loc: {
          start: {
            line: 396,
            column: 33
          },
          end: {
            line: 396,
            column: 95
          }
        },
        line: 396
      },
      "42": {
        name: "CustomHead",
        decl: {
          start: {
            line: 414,
            column: 39
          },
          end: {
            line: 414,
            column: 49
          }
        },
        loc: {
          start: {
            line: 414,
            column: 96
          },
          end: {
            line: 423,
            column: 13
          }
        },
        line: 414
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 420,
            column: 26
          },
          end: {
            line: 420,
            column: 27
          }
        },
        loc: {
          start: {
            line: 420,
            column: 32
          },
          end: {
            line: 420,
            column: 49
          }
        },
        line: 420
      },
      "44": {
        name: "CustomHead",
        decl: {
          start: {
            line: 431,
            column: 39
          },
          end: {
            line: 431,
            column: 49
          }
        },
        loc: {
          start: {
            line: 431,
            column: 65
          },
          end: {
            line: 433,
            column: 13
          }
        },
        line: 431
      },
      "45": {
        name: "CustomBody",
        decl: {
          start: {
            line: 434,
            column: 39
          },
          end: {
            line: 434,
            column: 49
          }
        },
        loc: {
          start: {
            line: 434,
            column: 55
          },
          end: {
            line: 449,
            column: 13
          }
        },
        line: 434
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 439,
            column: 37
          },
          end: {
            line: 439,
            column: 38
          }
        },
        loc: {
          start: {
            line: 439,
            column: 50
          },
          end: {
            line: 446,
            column: 19
          }
        },
        line: 439
      },
      "47": {
        name: "CustomHead",
        decl: {
          start: {
            line: 457,
            column: 39
          },
          end: {
            line: 457,
            column: 49
          }
        },
        loc: {
          start: {
            line: 457,
            column: 65
          },
          end: {
            line: 459,
            column: 13
          }
        },
        line: 457
      },
      "48": {
        name: "CustomHead",
        decl: {
          start: {
            line: 468,
            column: 39
          },
          end: {
            line: 468,
            column: 49
          }
        },
        loc: {
          start: {
            line: 468,
            column: 96
          },
          end: {
            line: 477,
            column: 13
          }
        },
        line: 468
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 474,
            column: 26
          },
          end: {
            line: 474,
            column: 27
          }
        },
        loc: {
          start: {
            line: 474,
            column: 32
          },
          end: {
            line: 474,
            column: 49
          }
        },
        line: 474
      },
      "50": {
        name: "CustomBody",
        decl: {
          start: {
            line: 478,
            column: 39
          },
          end: {
            line: 478,
            column: 49
          }
        },
        loc: {
          start: {
            line: 478,
            column: 55
          },
          end: {
            line: 493,
            column: 13
          }
        },
        line: 478
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 489,
            column: 32
          },
          end: {
            line: 489,
            column: 33
          }
        },
        loc: {
          start: {
            line: 489,
            column: 38
          },
          end: {
            line: 489,
            column: 95
          }
        },
        line: 489
      },
      "52": {
        name: "CustomHead",
        decl: {
          start: {
            line: 501,
            column: 39
          },
          end: {
            line: 501,
            column: 49
          }
        },
        loc: {
          start: {
            line: 501,
            column: 65
          },
          end: {
            line: 503,
            column: 13
          }
        },
        line: 501
      },
      "53": {
        name: "CustomBody",
        decl: {
          start: {
            line: 504,
            column: 39
          },
          end: {
            line: 504,
            column: 49
          }
        },
        loc: {
          start: {
            line: 504,
            column: 57
          },
          end: {
            line: 507,
            column: 13
          }
        },
        line: 504
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 529,
            column: 30
          },
          end: {
            line: 529,
            column: 31
          }
        },
        loc: {
          start: {
            line: 529,
            column: 41
          },
          end: {
            line: 529,
            column: 64
          }
        },
        line: 529
      },
      "55": {
        name: "CustomHead",
        decl: {
          start: {
            line: 537,
            column: 39
          },
          end: {
            line: 537,
            column: 49
          }
        },
        loc: {
          start: {
            line: 537,
            column: 65
          },
          end: {
            line: 539,
            column: 13
          }
        },
        line: 537
      },
      "56": {
        name: "CustomBody",
        decl: {
          start: {
            line: 540,
            column: 39
          },
          end: {
            line: 540,
            column: 49
          }
        },
        loc: {
          start: {
            line: 540,
            column: 68
          },
          end: {
            line: 552,
            column: 13
          }
        },
        line: 540
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 543,
            column: 27
          },
          end: {
            line: 543,
            column: 28
          }
        },
        loc: {
          start: {
            line: 543,
            column: 33
          },
          end: {
            line: 543,
            column: 95
          }
        },
        line: 543
      },
      "58": {
        name: "CustomHead",
        decl: {
          start: {
            line: 561,
            column: 39
          },
          end: {
            line: 561,
            column: 49
          }
        },
        loc: {
          start: {
            line: 561,
            column: 96
          },
          end: {
            line: 570,
            column: 13
          }
        },
        line: 561
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 567,
            column: 26
          },
          end: {
            line: 567,
            column: 27
          }
        },
        loc: {
          start: {
            line: 567,
            column: 32
          },
          end: {
            line: 567,
            column: 49
          }
        },
        line: 567
      },
      "60": {
        name: "CustomHead",
        decl: {
          start: {
            line: 578,
            column: 39
          },
          end: {
            line: 578,
            column: 49
          }
        },
        loc: {
          start: {
            line: 578,
            column: 65
          },
          end: {
            line: 580,
            column: 13
          }
        },
        line: 578
      },
      "61": {
        name: "CustomBody",
        decl: {
          start: {
            line: 581,
            column: 39
          },
          end: {
            line: 581,
            column: 49
          }
        },
        loc: {
          start: {
            line: 581,
            column: 55
          },
          end: {
            line: 585,
            column: 13
          }
        },
        line: 581
      },
      "62": {
        name: "CustomHead",
        decl: {
          start: {
            line: 593,
            column: 39
          },
          end: {
            line: 593,
            column: 49
          }
        },
        loc: {
          start: {
            line: 593,
            column: 65
          },
          end: {
            line: 595,
            column: 13
          }
        },
        line: 593
      },
      "63": {
        name: "CustomHead",
        decl: {
          start: {
            line: 604,
            column: 39
          },
          end: {
            line: 604,
            column: 49
          }
        },
        loc: {
          start: {
            line: 604,
            column: 96
          },
          end: {
            line: 613,
            column: 13
          }
        },
        line: 604
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 610,
            column: 26
          },
          end: {
            line: 610,
            column: 27
          }
        },
        loc: {
          start: {
            line: 610,
            column: 32
          },
          end: {
            line: 610,
            column: 49
          }
        },
        line: 610
      },
      "65": {
        name: "CustomBody",
        decl: {
          start: {
            line: 614,
            column: 39
          },
          end: {
            line: 614,
            column: 49
          }
        },
        loc: {
          start: {
            line: 614,
            column: 55
          },
          end: {
            line: 629,
            column: 13
          }
        },
        line: 614
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 625,
            column: 32
          },
          end: {
            line: 625,
            column: 33
          }
        },
        loc: {
          start: {
            line: 625,
            column: 38
          },
          end: {
            line: 625,
            column: 95
          }
        },
        line: 625
      },
      "67": {
        name: "CustomHead",
        decl: {
          start: {
            line: 637,
            column: 39
          },
          end: {
            line: 637,
            column: 49
          }
        },
        loc: {
          start: {
            line: 637,
            column: 65
          },
          end: {
            line: 639,
            column: 13
          }
        },
        line: 637
      },
      "68": {
        name: "CustomBody",
        decl: {
          start: {
            line: 640,
            column: 39
          },
          end: {
            line: 640,
            column: 49
          }
        },
        loc: {
          start: {
            line: 640,
            column: 57
          },
          end: {
            line: 643,
            column: 13
          }
        },
        line: 640
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 665,
            column: 30
          },
          end: {
            line: 665,
            column: 31
          }
        },
        loc: {
          start: {
            line: 665,
            column: 41
          },
          end: {
            line: 665,
            column: 64
          }
        },
        line: 665
      },
      "70": {
        name: "CustomHead",
        decl: {
          start: {
            line: 673,
            column: 39
          },
          end: {
            line: 673,
            column: 49
          }
        },
        loc: {
          start: {
            line: 673,
            column: 65
          },
          end: {
            line: 675,
            column: 13
          }
        },
        line: 673
      },
      "71": {
        name: "CustomBody",
        decl: {
          start: {
            line: 676,
            column: 39
          },
          end: {
            line: 676,
            column: 49
          }
        },
        loc: {
          start: {
            line: 676,
            column: 68
          },
          end: {
            line: 688,
            column: 13
          }
        },
        line: 676
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 679,
            column: 27
          },
          end: {
            line: 679,
            column: 28
          }
        },
        loc: {
          start: {
            line: 679,
            column: 33
          },
          end: {
            line: 679,
            column: 95
          }
        },
        line: 679
      },
      "73": {
        name: "CustomHead",
        decl: {
          start: {
            line: 697,
            column: 39
          },
          end: {
            line: 697,
            column: 49
          }
        },
        loc: {
          start: {
            line: 697,
            column: 96
          },
          end: {
            line: 706,
            column: 13
          }
        },
        line: 697
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 703,
            column: 26
          },
          end: {
            line: 703,
            column: 27
          }
        },
        loc: {
          start: {
            line: 703,
            column: 32
          },
          end: {
            line: 703,
            column: 49
          }
        },
        line: 703
      },
      "75": {
        name: "CustomHead",
        decl: {
          start: {
            line: 714,
            column: 39
          },
          end: {
            line: 714,
            column: 49
          }
        },
        loc: {
          start: {
            line: 714,
            column: 65
          },
          end: {
            line: 716,
            column: 13
          }
        },
        line: 714
      },
      "76": {
        name: "CustomBody",
        decl: {
          start: {
            line: 717,
            column: 39
          },
          end: {
            line: 717,
            column: 49
          }
        },
        loc: {
          start: {
            line: 717,
            column: 55
          },
          end: {
            line: 732,
            column: 13
          }
        },
        line: 717
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 722,
            column: 36
          },
          end: {
            line: 722,
            column: 37
          }
        },
        loc: {
          start: {
            line: 722,
            column: 51
          },
          end: {
            line: 729,
            column: 19
          }
        },
        line: 722
      },
      "78": {
        name: "CustomHead",
        decl: {
          start: {
            line: 740,
            column: 39
          },
          end: {
            line: 740,
            column: 49
          }
        },
        loc: {
          start: {
            line: 740,
            column: 65
          },
          end: {
            line: 742,
            column: 13
          }
        },
        line: 740
      },
      "79": {
        name: "CustomHead",
        decl: {
          start: {
            line: 751,
            column: 39
          },
          end: {
            line: 751,
            column: 49
          }
        },
        loc: {
          start: {
            line: 751,
            column: 96
          },
          end: {
            line: 760,
            column: 13
          }
        },
        line: 751
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 757,
            column: 26
          },
          end: {
            line: 757,
            column: 27
          }
        },
        loc: {
          start: {
            line: 757,
            column: 32
          },
          end: {
            line: 757,
            column: 49
          }
        },
        line: 757
      },
      "81": {
        name: "CustomBody",
        decl: {
          start: {
            line: 761,
            column: 39
          },
          end: {
            line: 761,
            column: 49
          }
        },
        loc: {
          start: {
            line: 761,
            column: 55
          },
          end: {
            line: 774,
            column: 13
          }
        },
        line: 761
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 771,
            column: 30
          },
          end: {
            line: 771,
            column: 31
          }
        },
        loc: {
          start: {
            line: 771,
            column: 36
          },
          end: {
            line: 771,
            column: 93
          }
        },
        line: 771
      },
      "83": {
        name: "CustomHead",
        decl: {
          start: {
            line: 782,
            column: 39
          },
          end: {
            line: 782,
            column: 49
          }
        },
        loc: {
          start: {
            line: 782,
            column: 65
          },
          end: {
            line: 784,
            column: 13
          }
        },
        line: 782
      },
      "84": {
        name: "CustomBody",
        decl: {
          start: {
            line: 785,
            column: 39
          },
          end: {
            line: 785,
            column: 49
          }
        },
        loc: {
          start: {
            line: 785,
            column: 57
          },
          end: {
            line: 788,
            column: 13
          }
        },
        line: 785
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 60,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 24
          },
          end: {
            line: 59,
            column: 81
          }
        }, {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 26
          }
        }],
        line: 58
      },
      "1": {
        loc: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 49
          }
        }, {
          start: {
            line: 134,
            column: 53
          },
          end: {
            line: 134,
            column: 56
          }
        }],
        line: 134
      },
      "2": {
        loc: {
          start: {
            line: 162,
            column: 25
          },
          end: {
            line: 162,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 25
          },
          end: {
            line: 162,
            column: 41
          }
        }, {
          start: {
            line: 162,
            column: 45
          },
          end: {
            line: 162,
            column: 52
          }
        }, {
          start: {
            line: 162,
            column: 56
          },
          end: {
            line: 162,
            column: 59
          }
        }],
        line: 162
      },
      "3": {
        loc: {
          start: {
            line: 165,
            column: 21
          },
          end: {
            line: 180,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 21
          },
          end: {
            line: 165,
            column: 32
          }
        }, {
          start: {
            line: 166,
            column: 22
          },
          end: {
            line: 179,
            column: 29
          }
        }],
        line: 165
      },
      "4": {
        loc: {
          start: {
            line: 221,
            column: 22
          },
          end: {
            line: 223,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 26
          },
          end: {
            line: 222,
            column: 84
          }
        }, {
          start: {
            line: 223,
            column: 26
          },
          end: {
            line: 223,
            column: 28
          }
        }],
        line: 221
      },
      "5": {
        loc: {
          start: {
            line: 280,
            column: 20
          },
          end: {
            line: 282,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 24
          },
          end: {
            line: 281,
            column: 81
          }
        }, {
          start: {
            line: 282,
            column: 24
          },
          end: {
            line: 282,
            column: 26
          }
        }],
        line: 280
      },
      "6": {
        loc: {
          start: {
            line: 339,
            column: 20
          },
          end: {
            line: 341,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 340,
            column: 24
          },
          end: {
            line: 340,
            column: 82
          }
        }, {
          start: {
            line: 341,
            column: 24
          },
          end: {
            line: 341,
            column: 26
          }
        }],
        line: 339
      },
      "7": {
        loc: {
          start: {
            line: 398,
            column: 20
          },
          end: {
            line: 400,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 399,
            column: 24
          },
          end: {
            line: 399,
            column: 81
          }
        }, {
          start: {
            line: 400,
            column: 24
          },
          end: {
            line: 400,
            column: 26
          }
        }],
        line: 398
      },
      "8": {
        loc: {
          start: {
            line: 443,
            column: 25
          },
          end: {
            line: 443,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 25
          },
          end: {
            line: 443,
            column: 52
          }
        }, {
          start: {
            line: 443,
            column: 56
          },
          end: {
            line: 443,
            column: 59
          }
        }],
        line: 443
      },
      "9": {
        loc: {
          start: {
            line: 485,
            column: 22
          },
          end: {
            line: 487,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 486,
            column: 26
          },
          end: {
            line: 486,
            column: 84
          }
        }, {
          start: {
            line: 487,
            column: 26
          },
          end: {
            line: 487,
            column: 28
          }
        }],
        line: 485
      },
      "10": {
        loc: {
          start: {
            line: 545,
            column: 20
          },
          end: {
            line: 547,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 546,
            column: 24
          },
          end: {
            line: 546,
            column: 81
          }
        }, {
          start: {
            line: 547,
            column: 24
          },
          end: {
            line: 547,
            column: 26
          }
        }],
        line: 545
      },
      "11": {
        loc: {
          start: {
            line: 621,
            column: 22
          },
          end: {
            line: 623,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 622,
            column: 26
          },
          end: {
            line: 622,
            column: 84
          }
        }, {
          start: {
            line: 623,
            column: 26
          },
          end: {
            line: 623,
            column: 28
          }
        }],
        line: 621
      },
      "12": {
        loc: {
          start: {
            line: 681,
            column: 20
          },
          end: {
            line: 683,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 682,
            column: 24
          },
          end: {
            line: 682,
            column: 81
          }
        }, {
          start: {
            line: 683,
            column: 24
          },
          end: {
            line: 683,
            column: 26
          }
        }],
        line: 681
      },
      "13": {
        loc: {
          start: {
            line: 726,
            column: 25
          },
          end: {
            line: 726,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 726,
            column: 25
          },
          end: {
            line: 726,
            column: 51
          }
        }, {
          start: {
            line: 726,
            column: 55
          },
          end: {
            line: 726,
            column: 58
          }
        }],
        line: 726
      },
      "14": {
        loc: {
          start: {
            line: 767,
            column: 20
          },
          end: {
            line: 769,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 768,
            column: 24
          },
          end: {
            line: 768,
            column: 82
          }
        }, {
          start: {
            line: 769,
            column: 24
          },
          end: {
            line: 769,
            column: 26
          }
        }],
        line: 767
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "17dcc7914692b8be87be1ee09ed4531026e85fb3"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pf7vaiw03 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1pf7vaiw03();

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }














cov_1pf7vaiw03().s[0]++;
const NetWorkTableConfig = (switchView, meshSyncResources, k8sConfig, connectionMetadataState) => {
  cov_1pf7vaiw03().f[0]++;
  const ping = (cov_1pf7vaiw03().s[1]++, (0,_hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP)());
  cov_1pf7vaiw03().s[2]++;
  return {
    Service: {
      name: 'Service',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 's'], ['spec.attribute', 's'], ['status.attribute', 'na'], ['spec.attribute', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1pf7vaiw03().f[1]++;
            cov_1pf7vaiw03().s[3]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref) {
            let column = Object.assign({}, _ref);
            cov_1pf7vaiw03().f[2]++;
            cov_1pf7vaiw03().s[4]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1pf7vaiw03().f[3]++;
            cov_1pf7vaiw03().s[5]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1pf7vaiw03().f[4]++;
                cov_1pf7vaiw03().s[6]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1pf7vaiw03().b[0][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1pf7vaiw03().b[0][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref2, sortColumn, columnMeta) {
            let {
              index
            } = _ref2,
                column = _objectWithoutProperties(_ref2, _excluded);

            cov_1pf7vaiw03().f[5]++;
            cov_1pf7vaiw03().s[7]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[6]++;
                cov_1pf7vaiw03().s[8]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Type',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref3) {
            let column = Object.assign({}, _ref3);
            cov_1pf7vaiw03().f[7]++;
            cov_1pf7vaiw03().s[9]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[8]++;
            let attribute = (cov_1pf7vaiw03().s[10]++, JSON.parse(val));
            let type = (cov_1pf7vaiw03().s[11]++, attribute?.type);
            cov_1pf7vaiw03().s[12]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: type
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Cluster IP',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref4) {
            let column = Object.assign({}, _ref4);
            cov_1pf7vaiw03().f[9]++;
            cov_1pf7vaiw03().s[13]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[10]++;
            let attribute = (cov_1pf7vaiw03().s[14]++, JSON.parse(val));
            let clusterIP = (cov_1pf7vaiw03().s[15]++, attribute?.clusterIP);
            cov_1pf7vaiw03().s[16]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: clusterIP
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'External IP',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref5) {
            let column = Object.assign({}, _ref5);
            cov_1pf7vaiw03().f[11]++;
            cov_1pf7vaiw03().s[17]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[12]++;
            let attribute = (cov_1pf7vaiw03().s[18]++, JSON.parse(val));
            let loadbalancer = (cov_1pf7vaiw03().s[19]++, attribute?.loadbalancer);
            let ingresses = (cov_1pf7vaiw03().s[20]++, loadbalancer?.ingress);
            cov_1pf7vaiw03().s[21]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: ingresses?.map((ingress, i) => {
                cov_1pf7vaiw03().f[13]++;
                cov_1pf7vaiw03().s[22]++;
                return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
                  children: [ingress.hostname, (cov_1pf7vaiw03().b[1][0]++, i < ingresses.length - 1) && (cov_1pf7vaiw03().b[1][1]++, ',')]
                });
              })
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Ports',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref6) {
            let column = Object.assign({}, _ref6);
            cov_1pf7vaiw03().f[14]++;
            cov_1pf7vaiw03().s[23]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val, tableMeta) {
            cov_1pf7vaiw03().f[15]++;
            let attribute = (cov_1pf7vaiw03().s[24]++, JSON.parse(val));
            let ports = (cov_1pf7vaiw03().s[25]++, attribute?.ports);
            const showViewAll = (cov_1pf7vaiw03().s[26]++, ports?.length > 1);
            cov_1pf7vaiw03().s[27]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)("div", {
                style: {
                  display: 'flex'
                },
                children: [ports?.slice(0, 1).map((p, i) => {
                  cov_1pf7vaiw03().f[16]++;
                  cov_1pf7vaiw03().s[28]++;
                  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)("div", {
                    children: [`${p.port}/${p.targetPort}:${p.protocol}`, (cov_1pf7vaiw03().b[2][0]++, ports.length > 1) && (cov_1pf7vaiw03().b[2][1]++, i === 0) && (cov_1pf7vaiw03().b[2][2]++, ',')]
                  }, i);
                }), (cov_1pf7vaiw03().b[3][0]++, showViewAll) && (cov_1pf7vaiw03().b[3][1]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("span", {
                  style: {
                    color: 'inherit',
                    textDecorationLine: 'underline',
                    cursor: 'pointer',
                    marginLeft: '0.5rem',
                    width: 'max-content'
                  },
                  onClick: () => {
                    cov_1pf7vaiw03().f[17]++;
                    cov_1pf7vaiw03().s[29]++;
                    return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
                  },
                  children: "View all"
                }))]
              })
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref7) {
            let column = Object.assign({}, _ref7);
            cov_1pf7vaiw03().f[18]++;
            cov_1pf7vaiw03().s[30]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref8, sortColumn, columnMeta) {
            let {
              index
            } = _ref8,
                column = _objectWithoutProperties(_ref8, _excluded2);

            cov_1pf7vaiw03().f[19]++;
            cov_1pf7vaiw03().s[31]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[20]++;
                cov_1pf7vaiw03().s[32]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[21]++;
            let context = (cov_1pf7vaiw03().s[33]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1pf7vaiw03().s[34]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
                title: context.name,
                iconSrc: connectionMetadataState ? (cov_1pf7vaiw03().b[4][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1pf7vaiw03().b[4][1]++, ''),
                handlePing: () => {
                  cov_1pf7vaiw03().f[22]++;
                  cov_1pf7vaiw03().s[35]++;
                  return ping(context.name, context.server, context.connection_id);
                }
              })
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref9) {
            let column = Object.assign({}, _ref9);
            cov_1pf7vaiw03().f[23]++;
            cov_1pf7vaiw03().s[36]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1pf7vaiw03().f[24]++;
            let time = (cov_1pf7vaiw03().s[37]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1pf7vaiw03().s[38]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    Endpoints: {
      name: 'Endpoints',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1pf7vaiw03().f[25]++;
            cov_1pf7vaiw03().s[39]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref10) {
            let column = Object.assign({}, _ref10);
            cov_1pf7vaiw03().f[26]++;
            cov_1pf7vaiw03().s[40]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1pf7vaiw03().f[27]++;
            cov_1pf7vaiw03().s[41]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1pf7vaiw03().f[28]++;
                cov_1pf7vaiw03().s[42]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1pf7vaiw03().b[5][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1pf7vaiw03().b[5][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref11, sortColumn, columnMeta) {
            let {
              index
            } = _ref11,
                column = _objectWithoutProperties(_ref11, _excluded3);

            cov_1pf7vaiw03().f[29]++;
            cov_1pf7vaiw03().s[43]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[30]++;
                cov_1pf7vaiw03().s[44]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref12) {
            let column = Object.assign({}, _ref12);
            cov_1pf7vaiw03().f[31]++;
            cov_1pf7vaiw03().s[45]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          customHeadRender: function CustomHead(_ref13, sortColumn, columnMeta) {
            let {
              index
            } = _ref13,
                column = _objectWithoutProperties(_ref13, _excluded4);

            cov_1pf7vaiw03().f[32]++;
            cov_1pf7vaiw03().s[46]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[33]++;
                cov_1pf7vaiw03().s[47]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[34]++;
            let context = (cov_1pf7vaiw03().s[48]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1pf7vaiw03().s[49]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_1pf7vaiw03().b[6][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1pf7vaiw03().b[6][1]++, ''),
              handlePing: () => {
                cov_1pf7vaiw03().f[35]++;
                cov_1pf7vaiw03().s[50]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref14) {
            let column = Object.assign({}, _ref14);
            cov_1pf7vaiw03().f[36]++;
            cov_1pf7vaiw03().s[51]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1pf7vaiw03().f[37]++;
            let time = (cov_1pf7vaiw03().s[52]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1pf7vaiw03().s[53]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    Ingress: {
      name: 'Ingress',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1pf7vaiw03().f[38]++;
            cov_1pf7vaiw03().s[54]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref15) {
            let column = Object.assign({}, _ref15);
            cov_1pf7vaiw03().f[39]++;
            cov_1pf7vaiw03().s[55]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1pf7vaiw03().f[40]++;
            cov_1pf7vaiw03().s[56]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1pf7vaiw03().f[41]++;
                cov_1pf7vaiw03().s[57]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1pf7vaiw03().b[7][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1pf7vaiw03().b[7][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref16, sortColumn, columnMeta) {
            let {
              index
            } = _ref16,
                column = _objectWithoutProperties(_ref16, _excluded5);

            cov_1pf7vaiw03().f[42]++;
            cov_1pf7vaiw03().s[58]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[43]++;
                cov_1pf7vaiw03().s[59]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Rules',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref17) {
            let column = Object.assign({}, _ref17);
            cov_1pf7vaiw03().f[44]++;
            cov_1pf7vaiw03().s[60]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[45]++;
            let attribute = (cov_1pf7vaiw03().s[61]++, JSON.parse(val));
            let ingressRules = (cov_1pf7vaiw03().s[62]++, attribute?.ingressRule);
            cov_1pf7vaiw03().s[63]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: ingressRules?.map((rule, i) => {
                cov_1pf7vaiw03().f[46]++;
                cov_1pf7vaiw03().s[64]++;
                return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
                  children: [`${rule.host}`, (cov_1pf7vaiw03().b[8][0]++, i < ingressRules.length - 1) && (cov_1pf7vaiw03().b[8][1]++, ',')]
                });
              })
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref18) {
            let column = Object.assign({}, _ref18);
            cov_1pf7vaiw03().f[47]++;
            cov_1pf7vaiw03().s[65]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref19, sortColumn, columnMeta) {
            let {
              index
            } = _ref19,
                column = _objectWithoutProperties(_ref19, _excluded6);

            cov_1pf7vaiw03().f[48]++;
            cov_1pf7vaiw03().s[66]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[49]++;
                cov_1pf7vaiw03().s[67]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[50]++;
            let context = (cov_1pf7vaiw03().s[68]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1pf7vaiw03().s[69]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
                title: context.name,
                iconSrc: connectionMetadataState ? (cov_1pf7vaiw03().b[9][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1pf7vaiw03().b[9][1]++, ''),
                handlePing: () => {
                  cov_1pf7vaiw03().f[51]++;
                  cov_1pf7vaiw03().s[70]++;
                  return ping(context.name, context.server, context.connection_id);
                }
              })
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref20) {
            let column = Object.assign({}, _ref20);
            cov_1pf7vaiw03().f[52]++;
            cov_1pf7vaiw03().s[71]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1pf7vaiw03().f[53]++;
            let time = (cov_1pf7vaiw03().s[72]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1pf7vaiw03().s[73]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    IngressClass: {
      name: 'IngressClass',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1pf7vaiw03().f[54]++;
            cov_1pf7vaiw03().s[74]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref21) {
            let column = Object.assign({}, _ref21);
            cov_1pf7vaiw03().f[55]++;
            cov_1pf7vaiw03().s[75]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1pf7vaiw03().f[56]++;
            cov_1pf7vaiw03().s[76]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1pf7vaiw03().f[57]++;
                cov_1pf7vaiw03().s[77]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1pf7vaiw03().b[10][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1pf7vaiw03().b[10][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref22, sortColumn, columnMeta) {
            let {
              index
            } = _ref22,
                column = _objectWithoutProperties(_ref22, _excluded7);

            cov_1pf7vaiw03().f[58]++;
            cov_1pf7vaiw03().s[78]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[59]++;
                cov_1pf7vaiw03().s[79]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Controller',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref23) {
            let column = Object.assign({}, _ref23);
            cov_1pf7vaiw03().f[60]++;
            cov_1pf7vaiw03().s[80]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[61]++;
            let attribute = (cov_1pf7vaiw03().s[81]++, JSON.parse(val));
            let controller = (cov_1pf7vaiw03().s[82]++, attribute?.controller);
            cov_1pf7vaiw03().s[83]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: controller
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref24) {
            let column = Object.assign({}, _ref24);
            cov_1pf7vaiw03().f[62]++;
            cov_1pf7vaiw03().s[84]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref25, sortColumn, columnMeta) {
            let {
              index
            } = _ref25,
                column = _objectWithoutProperties(_ref25, _excluded8);

            cov_1pf7vaiw03().f[63]++;
            cov_1pf7vaiw03().s[85]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[64]++;
                cov_1pf7vaiw03().s[86]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[65]++;
            let context = (cov_1pf7vaiw03().s[87]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1pf7vaiw03().s[88]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
                title: context.name,
                iconSrc: connectionMetadataState ? (cov_1pf7vaiw03().b[11][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1pf7vaiw03().b[11][1]++, ''),
                handlePing: () => {
                  cov_1pf7vaiw03().f[66]++;
                  cov_1pf7vaiw03().s[89]++;
                  return ping(context.name, context.server, context.connection_id);
                }
              })
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref26) {
            let column = Object.assign({}, _ref26);
            cov_1pf7vaiw03().f[67]++;
            cov_1pf7vaiw03().s[90]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1pf7vaiw03().f[68]++;
            let time = (cov_1pf7vaiw03().s[91]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1pf7vaiw03().s[92]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    NetworkPolicy: {
      name: 'NetworkPolicy',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1pf7vaiw03().f[69]++;
            cov_1pf7vaiw03().s[93]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref27) {
            let column = Object.assign({}, _ref27);
            cov_1pf7vaiw03().f[70]++;
            cov_1pf7vaiw03().s[94]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1pf7vaiw03().f[71]++;
            cov_1pf7vaiw03().s[95]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1pf7vaiw03().f[72]++;
                cov_1pf7vaiw03().s[96]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1pf7vaiw03().b[12][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1pf7vaiw03().b[12][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref28, sortColumn, columnMeta) {
            let {
              index
            } = _ref28,
                column = _objectWithoutProperties(_ref28, _excluded9);

            cov_1pf7vaiw03().f[73]++;
            cov_1pf7vaiw03().s[97]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[74]++;
                cov_1pf7vaiw03().s[98]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Ports',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref29) {
            let column = Object.assign({}, _ref29);
            cov_1pf7vaiw03().f[75]++;
            cov_1pf7vaiw03().s[99]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[76]++;
            let attribute = (cov_1pf7vaiw03().s[100]++, JSON.parse(val));
            let policyTypes = (cov_1pf7vaiw03().s[101]++, attribute?.policyTypes);
            cov_1pf7vaiw03().s[102]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: policyTypes?.map((policy, i) => {
                cov_1pf7vaiw03().f[77]++;
                cov_1pf7vaiw03().s[103]++;
                return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
                  children: [`${policy}`, (cov_1pf7vaiw03().b[13][0]++, i < policyTypes.length - 1) && (cov_1pf7vaiw03().b[13][1]++, ',')]
                });
              })
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref30) {
            let column = Object.assign({}, _ref30);
            cov_1pf7vaiw03().f[78]++;
            cov_1pf7vaiw03().s[104]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref31, sortColumn, columnMeta) {
            let {
              index
            } = _ref31,
                column = _objectWithoutProperties(_ref31, _excluded10);

            cov_1pf7vaiw03().f[79]++;
            cov_1pf7vaiw03().s[105]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1pf7vaiw03().f[80]++;
                cov_1pf7vaiw03().s[106]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1pf7vaiw03().f[81]++;
            let context = (cov_1pf7vaiw03().s[107]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1pf7vaiw03().s[108]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_1pf7vaiw03().b[14][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1pf7vaiw03().b[14][1]++, ''),
              handlePing: () => {
                cov_1pf7vaiw03().f[82]++;
                cov_1pf7vaiw03().s[109]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref32) {
            let column = Object.assign({}, _ref32);
            cov_1pf7vaiw03().f[83]++;
            cov_1pf7vaiw03().s[110]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1pf7vaiw03().f[84]++;
            let time = (cov_1pf7vaiw03().s[111]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1pf7vaiw03().s[112]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    }
  };
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 76965:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "L": () => (/* binding */ NodeTableConfig)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59077);
/* harmony import */ var _utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7806);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96467);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88767);
/* harmony import */ var _connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16845);
/* harmony import */ var _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22921);
/* harmony import */ var _sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63471);
/* harmony import */ var _utils_Enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(46811);
/* harmony import */ var _components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(38409);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__]);
([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
const _excluded = ["index"],
      _excluded2 = ["index"];

function cov_25cfr72yzl() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/nodes/config.js";
  var hash = "462c1993a2c6af3e5a4a1a65cd4f70dfa3e1cf94";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/nodes/config.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 201,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "2": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 200,
          column: 4
        }
      },
      "3": {
        start: {
          line: 40,
          column: 39
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "4": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 60
        }
      },
      "5": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "6": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 54,
          column: 93
        }
      },
      "7": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 80,
          column: 14
        }
      },
      "8": {
        start: {
          line: 78,
          column: 30
        },
        end: {
          line: 78,
          column: 47
        }
      },
      "9": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 60
        }
      },
      "10": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 43
        }
      },
      "11": {
        start: {
          line: 94,
          column: 27
        },
        end: {
          line: 94,
          column: 46
        }
      },
      "12": {
        start: {
          line: 95,
          column: 22
        },
        end: {
          line: 95,
          column: 82
        }
      },
      "13": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 30
        }
      },
      "14": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 60
        }
      },
      "15": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 43
        }
      },
      "16": {
        start: {
          line: 110,
          column: 27
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "17": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 111,
          column: 94
        }
      },
      "18": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 33
        }
      },
      "19": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 130,
          column: 14
        }
      },
      "20": {
        start: {
          line: 128,
          column: 30
        },
        end: {
          line: 128,
          column: 47
        }
      },
      "21": {
        start: {
          line: 133,
          column: 26
        },
        end: {
          line: 133,
          column: 68
        }
      },
      "22": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 147,
          column: 14
        }
      },
      "23": {
        start: {
          line: 144,
          column: 36
        },
        end: {
          line: 144,
          column: 93
        }
      },
      "24": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 60
        }
      },
      "25": {
        start: {
          line: 160,
          column: 28
        },
        end: {
          line: 160,
          column: 43
        }
      },
      "26": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 54
        }
      },
      "27": {
        start: {
          line: 163,
          column: 14
        },
        end: {
          line: 163,
          column: 88
        }
      },
      "28": {
        start: {
          line: 163,
          column: 43
        },
        end: {
          line: 163,
          column: 72
        }
      },
      "29": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 37
        }
      },
      "30": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 60
        }
      },
      "31": {
        start: {
          line: 177,
          column: 28
        },
        end: {
          line: 177,
          column: 43
        }
      },
      "32": {
        start: {
          line: 178,
          column: 28
        },
        end: {
          line: 178,
          column: 54
        }
      },
      "33": {
        start: {
          line: 179,
          column: 29
        },
        end: {
          line: 180,
          column: 95
        }
      },
      "34": {
        start: {
          line: 179,
          column: 58
        },
        end: {
          line: 179,
          column: 87
        }
      },
      "35": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 37
        }
      },
      "36": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 60
        }
      },
      "37": {
        start: {
          line: 194,
          column: 23
        },
        end: {
          line: 194,
          column: 37
        }
      },
      "38": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 31
          },
          end: {
            line: 14,
            column: 32
          }
        },
        loc: {
          start: {
            line: 19,
            column: 5
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 40,
            column: 29
          }
        },
        loc: {
          start: {
            line: 40,
            column: 39
          },
          end: {
            line: 40,
            column: 62
          }
        },
        line: 40
      },
      "2": {
        name: "CustomHead",
        decl: {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 47
          }
        },
        loc: {
          start: {
            line: 48,
            column: 63
          },
          end: {
            line: 50,
            column: 11
          }
        },
        line: 48
      },
      "3": {
        name: "CustomBody",
        decl: {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 47
          }
        },
        loc: {
          start: {
            line: 51,
            column: 66
          },
          end: {
            line: 63,
            column: 11
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 26
          }
        },
        loc: {
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 54,
            column: 93
          }
        },
        line: 54
      },
      "5": {
        name: "CustomHead",
        decl: {
          start: {
            line: 72,
            column: 37
          },
          end: {
            line: 72,
            column: 47
          }
        },
        loc: {
          start: {
            line: 72,
            column: 94
          },
          end: {
            line: 81,
            column: 11
          }
        },
        line: 72
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 78,
            column: 24
          },
          end: {
            line: 78,
            column: 25
          }
        },
        loc: {
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 47
          }
        },
        line: 78
      },
      "7": {
        name: "CustomHead",
        decl: {
          start: {
            line: 89,
            column: 37
          },
          end: {
            line: 89,
            column: 47
          }
        },
        loc: {
          start: {
            line: 89,
            column: 63
          },
          end: {
            line: 91,
            column: 11
          }
        },
        line: 89
      },
      "8": {
        name: "CustomBody",
        decl: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 47
          }
        },
        loc: {
          start: {
            line: 92,
            column: 53
          },
          end: {
            line: 97,
            column: 11
          }
        },
        line: 92
      },
      "9": {
        name: "CustomHead",
        decl: {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 47
          }
        },
        loc: {
          start: {
            line: 105,
            column: 63
          },
          end: {
            line: 107,
            column: 11
          }
        },
        line: 105
      },
      "10": {
        name: "CustomBody",
        decl: {
          start: {
            line: 108,
            column: 37
          },
          end: {
            line: 108,
            column: 47
          }
        },
        loc: {
          start: {
            line: 108,
            column: 53
          },
          end: {
            line: 113,
            column: 11
          }
        },
        line: 108
      },
      "11": {
        name: "CustomHead",
        decl: {
          start: {
            line: 122,
            column: 37
          },
          end: {
            line: 122,
            column: 47
          }
        },
        loc: {
          start: {
            line: 122,
            column: 94
          },
          end: {
            line: 131,
            column: 11
          }
        },
        line: 122
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 128,
            column: 24
          },
          end: {
            line: 128,
            column: 25
          }
        },
        loc: {
          start: {
            line: 128,
            column: 30
          },
          end: {
            line: 128,
            column: 47
          }
        },
        line: 128
      },
      "13": {
        name: "CustomBody",
        decl: {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 132,
            column: 47
          }
        },
        loc: {
          start: {
            line: 132,
            column: 53
          },
          end: {
            line: 148,
            column: 11
          }
        },
        line: 132
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 144,
            column: 30
          },
          end: {
            line: 144,
            column: 31
          }
        },
        loc: {
          start: {
            line: 144,
            column: 36
          },
          end: {
            line: 144,
            column: 93
          }
        },
        line: 144
      },
      "15": {
        name: "CustomHead",
        decl: {
          start: {
            line: 156,
            column: 37
          },
          end: {
            line: 156,
            column: 47
          }
        },
        loc: {
          start: {
            line: 156,
            column: 63
          },
          end: {
            line: 158,
            column: 11
          }
        },
        line: 156
      },
      "16": {
        name: "CustomBody",
        decl: {
          start: {
            line: 159,
            column: 37
          },
          end: {
            line: 159,
            column: 47
          }
        },
        loc: {
          start: {
            line: 159,
            column: 53
          },
          end: {
            line: 165,
            column: 11
          }
        },
        line: 159
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 163,
            column: 30
          },
          end: {
            line: 163,
            column: 31
          }
        },
        loc: {
          start: {
            line: 163,
            column: 43
          },
          end: {
            line: 163,
            column: 72
          }
        },
        line: 163
      },
      "18": {
        name: "CustomHead",
        decl: {
          start: {
            line: 173,
            column: 37
          },
          end: {
            line: 173,
            column: 47
          }
        },
        loc: {
          start: {
            line: 173,
            column: 63
          },
          end: {
            line: 175,
            column: 11
          }
        },
        line: 173
      },
      "19": {
        name: "CustomBody",
        decl: {
          start: {
            line: 176,
            column: 37
          },
          end: {
            line: 176,
            column: 47
          }
        },
        loc: {
          start: {
            line: 176,
            column: 53
          },
          end: {
            line: 182,
            column: 11
          }
        },
        line: 176
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 179,
            column: 45
          },
          end: {
            line: 179,
            column: 46
          }
        },
        loc: {
          start: {
            line: 179,
            column: 58
          },
          end: {
            line: 179,
            column: 87
          }
        },
        line: 179
      },
      "21": {
        name: "CustomHead",
        decl: {
          start: {
            line: 190,
            column: 37
          },
          end: {
            line: 190,
            column: 47
          }
        },
        loc: {
          start: {
            line: 190,
            column: 63
          },
          end: {
            line: 192,
            column: 11
          }
        },
        line: 190
      },
      "22": {
        name: "CustomBody",
        decl: {
          start: {
            line: 193,
            column: 37
          },
          end: {
            line: 193,
            column: 47
          }
        },
        loc: {
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 196,
            column: 11
          }
        },
        line: 193
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 58,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 22
          },
          end: {
            line: 57,
            column: 79
          }
        }, {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 58,
            column: 24
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 142,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 24
          },
          end: {
            line: 141,
            column: 82
          }
        }, {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 142,
            column: 26
          }
        }],
        line: 140
      },
      "2": {
        loc: {
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 161,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 161,
            column: 48
          }
        }, {
          start: {
            line: 161,
            column: 52
          },
          end: {
            line: 161,
            column: 54
          }
        }],
        line: 161
      },
      "3": {
        loc: {
          start: {
            line: 163,
            column: 14
          },
          end: {
            line: 163,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 14
          },
          end: {
            line: 163,
            column: 82
          }
        }, {
          start: {
            line: 163,
            column: 86
          },
          end: {
            line: 163,
            column: 88
          }
        }],
        line: 163
      },
      "4": {
        loc: {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 48
          }
        }, {
          start: {
            line: 178,
            column: 52
          },
          end: {
            line: 178,
            column: 54
          }
        }],
        line: 178
      },
      "5": {
        loc: {
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 180,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 180,
            column: 23
          }
        }, {
          start: {
            line: 180,
            column: 27
          },
          end: {
            line: 180,
            column: 95
          }
        }],
        line: 179
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "462c1993a2c6af3e5a4a1a65cd4f70dfa3e1cf94"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25cfr72yzl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_25cfr72yzl();

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













cov_25cfr72yzl().s[0]++;
const NodeTableConfig = (switchView, meshSyncResources, k8sConfig, connectionMetadataState) => {
  cov_25cfr72yzl().f[0]++;
  const ping = (cov_25cfr72yzl().s[1]++, (0,_hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP)());
  cov_25cfr72yzl().s[2]++;
  return {
    name: 'Node',
    colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['status.attribute', 'm'], ['status.attribute', 'm'], ['cluster_id', 'xs'], ['status.attribute', 'm'], ['status.attribute', 'm'], ['metadata.creationTimestamp', 'l']],
    columns: [{
      name: 'id',
      label: 'ID',
      options: {
        display: false,
        customBodyRender: value => {
          cov_25cfr72yzl().f[1]++;
          cov_25cfr72yzl().s[3]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
            id: value
          });
        }
      }
    }, {
      name: 'metadata.name',
      label: 'Name',
      options: {
        sort: false,
        customHeadRender: function CustomHead(_ref) {
          let column = Object.assign({}, _ref);
          cov_25cfr72yzl().f[2]++;
          cov_25cfr72yzl().s[4]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
            columnData: column
          });
        },
        customBodyRender: function CustomBody(value, tableMeta) {
          cov_25cfr72yzl().f[3]++;
          cov_25cfr72yzl().s[5]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
            onClick: () => {
              cov_25cfr72yzl().f[4]++;
              cov_25cfr72yzl().s[6]++;
              return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
            },
            data: meshSyncResources[tableMeta.rowIndex] ? (cov_25cfr72yzl().b[0][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_25cfr72yzl().b[0][1]++, {}),
            value: value
          });
        }
      }
    }, {
      name: 'apiVersion',
      label: 'API version',
      options: {
        sort: true,
        sortThirdClickReset: true,
        customHeadRender: function CustomHead(_ref2, sortColumn, columnMeta) {
          let {
            index
          } = _ref2,
              column = _objectWithoutProperties(_ref2, _excluded);

          cov_25cfr72yzl().f[5]++;
          cov_25cfr72yzl().s[7]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
            index: index,
            columnData: column,
            columnMeta: columnMeta,
            onSort: () => {
              cov_25cfr72yzl().f[6]++;
              cov_25cfr72yzl().s[8]++;
              return sortColumn(index);
            }
          });
        }
      }
    }, {
      name: 'status.attribute',
      label: 'CPU',
      options: {
        sort: false,
        customHeadRender: function CustomHead(_ref3) {
          let column = Object.assign({}, _ref3);
          cov_25cfr72yzl().f[7]++;
          cov_25cfr72yzl().s[9]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
            columnData: column
          });
        },
        customBodyRender: function CustomBody(val) {
          cov_25cfr72yzl().f[8]++;
          let attribute = (cov_25cfr72yzl().s[10]++, JSON.parse(val));
          let capacity = (cov_25cfr72yzl().s[11]++, attribute?.capacity);
          let cpu = (cov_25cfr72yzl().s[12]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .getResourceStr */ .Y9)(_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .resourceParsers.cpu */ .bs.cpu(capacity?.cpu), 'cpu'));
          cov_25cfr72yzl().s[13]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
            children: cpu
          });
        }
      }
    }, {
      name: 'status.attribute',
      label: 'Memory',
      options: {
        sort: false,
        customHeadRender: function CustomHead(_ref4) {
          let column = Object.assign({}, _ref4);
          cov_25cfr72yzl().f[9]++;
          cov_25cfr72yzl().s[14]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
            columnData: column
          });
        },
        customBodyRender: function CustomBody(val) {
          cov_25cfr72yzl().f[10]++;
          let attribute = (cov_25cfr72yzl().s[15]++, JSON.parse(val));
          let capacity = (cov_25cfr72yzl().s[16]++, attribute?.capacity);
          let memory = (cov_25cfr72yzl().s[17]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .getResourceStr */ .Y9)(_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .resourceParsers.memory */ .bs.memory(capacity?.memory), 'memory'));
          cov_25cfr72yzl().s[18]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
            children: memory
          });
        }
      }
    }, {
      name: 'cluster_id',
      label: 'Cluster',
      options: {
        sort: true,
        sortThirdClickReset: true,
        customHeadRender: function CustomHead(_ref5, sortColumn, columnMeta) {
          let {
            index
          } = _ref5,
              column = _objectWithoutProperties(_ref5, _excluded2);

          cov_25cfr72yzl().f[11]++;
          cov_25cfr72yzl().s[19]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
            index: index,
            columnData: column,
            columnMeta: columnMeta,
            onSort: () => {
              cov_25cfr72yzl().f[12]++;
              cov_25cfr72yzl().s[20]++;
              return sortColumn(index);
            }
          });
        },
        customBodyRender: function CustomBody(val) {
          cov_25cfr72yzl().f[13]++;
          let context = (cov_25cfr72yzl().s[21]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
          cov_25cfr72yzl().s[22]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
            children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_25cfr72yzl().b[1][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_25cfr72yzl().b[1][1]++, ''),
              handlePing: () => {
                cov_25cfr72yzl().f[14]++;
                cov_25cfr72yzl().s[23]++;
                return ping(context.name, context.server, context.connection_id);
              }
            })
          });
        }
      }
    }, {
      name: 'status.attribute',
      label: 'Internal IP',
      options: {
        sort: false,
        customHeadRender: function CustomHead(_ref6) {
          let column = Object.assign({}, _ref6);
          cov_25cfr72yzl().f[15]++;
          cov_25cfr72yzl().s[24]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
            columnData: column
          });
        },
        customBodyRender: function CustomBody(val) {
          cov_25cfr72yzl().f[16]++;
          let attribute = (cov_25cfr72yzl().s[25]++, JSON.parse(val));
          let addresses = (cov_25cfr72yzl().s[26]++, (cov_25cfr72yzl().b[2][0]++, attribute?.addresses) || (cov_25cfr72yzl().b[2][1]++, []));
          let internalIP = (cov_25cfr72yzl().s[27]++, (cov_25cfr72yzl().b[3][0]++, addresses?.find(address => {
            cov_25cfr72yzl().f[17]++;
            cov_25cfr72yzl().s[28]++;
            return address.type === 'InternalIP';
          })?.address) || (cov_25cfr72yzl().b[3][1]++, ''));
          cov_25cfr72yzl().s[29]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
            children: internalIP
          });
        }
      }
    }, {
      name: 'status.attribute',
      label: 'External IP',
      options: {
        sort: false,
        customHeadRender: function CustomHead(_ref7) {
          let column = Object.assign({}, _ref7);
          cov_25cfr72yzl().f[18]++;
          cov_25cfr72yzl().s[30]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
            columnData: column
          });
        },
        customBodyRender: function CustomBody(val) {
          cov_25cfr72yzl().f[19]++;
          let attribute = (cov_25cfr72yzl().s[31]++, JSON.parse(val));
          let addresses = (cov_25cfr72yzl().s[32]++, (cov_25cfr72yzl().b[4][0]++, attribute?.addresses) || (cov_25cfr72yzl().b[4][1]++, []));
          let externalIP = (cov_25cfr72yzl().s[33]++, (cov_25cfr72yzl().b[5][0]++, addresses?.find(address => {
            cov_25cfr72yzl().f[20]++;
            cov_25cfr72yzl().s[34]++;
            return address.type === 'ExternalIP';
          })?.address) || (cov_25cfr72yzl().b[5][1]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("span", {
            style: {
              display: 'flex',
              justifyContent: 'center'
            },
            children: "-"
          })));
          cov_25cfr72yzl().s[35]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
            children: externalIP
          });
        }
      }
    }, {
      name: 'metadata.creationTimestamp',
      label: 'Age',
      options: {
        sort: false,
        customHeadRender: function CustomHead(_ref8) {
          let column = Object.assign({}, _ref8);
          cov_25cfr72yzl().f[21]++;
          cov_25cfr72yzl().s[36]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
            columnData: column
          });
        },
        customBodyRender: function CustomBody(value) {
          cov_25cfr72yzl().f[22]++;
          let time = (cov_25cfr72yzl().s[37]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
          cov_25cfr72yzl().s[38]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
            children: time
          });
        }
      }
    }]
  };
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 59701:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _assets_icons_technology_kubernetes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69222);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(93113);
/* harmony import */ var _resources_table__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(87893);
/* harmony import */ var _tabpanel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(93429);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_4__, _resources_table__WEBPACK_IMPORTED_MODULE_5__]);
([_utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_4__, _resources_table__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_2naz1lw8ps() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/resources-sub-menu.js";
  var hash = "5c82a3afa54321e3c88257cfb0e1da7dc0f8a9a2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/resources-sub-menu.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 108,
          column: 2
        }
      },
      "1": {
        start: {
          line: 13,
          column: 27
        },
        end: {
          line: 108,
          column: 1
        }
      },
      "2": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 190,
          column: 1
        }
      },
      "3": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "4": {
        start: {
          line: 121,
          column: 2
        },
        end: {
          line: 123,
          column: 3
        }
      },
      "5": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 73
        }
      },
      "6": {
        start: {
          line: 125,
          column: 15
        },
        end: {
          line: 125,
          column: 50
        }
      },
      "7": {
        start: {
          line: 127,
          column: 35
        },
        end: {
          line: 129,
          column: 3
        }
      },
      "8": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 71
        }
      },
      "9": {
        start: {
          line: 128,
          column: 40
        },
        end: {
          line: 128,
          column: 69
        }
      },
      "10": {
        start: {
          line: 131,
          column: 30
        },
        end: {
          line: 133,
          column: 3
        }
      },
      "11": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "12": {
        start: {
          line: 135,
          column: 2
        },
        end: {
          line: 189,
          column: 4
        }
      },
      "13": {
        start: {
          line: 144,
          column: 37
        },
        end: {
          line: 144,
          column: 89
        }
      },
      "14": {
        start: {
          line: 152,
          column: 18
        },
        end: {
          line: 167,
          column: 28
        }
      },
      "15": {
        start: {
          line: 174,
          column: 10
        },
        end: {
          line: 185,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 16
          }
        },
        loc: {
          start: {
            line: 13,
            column: 27
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 110,
            column: 25
          },
          end: {
            line: 110,
            column: 26
          }
        },
        loc: {
          start: {
            line: 110,
            column: 36
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 110
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 127,
            column: 36
          }
        },
        loc: {
          start: {
            line: 127,
            column: 57
          },
          end: {
            line: 129,
            column: 3
          }
        },
        line: 127
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 128,
            column: 26
          },
          end: {
            line: 128,
            column: 27
          }
        },
        loc: {
          start: {
            line: 128,
            column: 40
          },
          end: {
            line: 128,
            column: 69
          }
        },
        line: 128
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 131,
            column: 30
          },
          end: {
            line: 131,
            column: 31
          }
        },
        loc: {
          start: {
            line: 131,
            column: 41
          },
          end: {
            line: 133,
            column: 3
          }
        },
        line: 131
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 144,
            column: 26
          },
          end: {
            line: 144,
            column: 27
          }
        },
        loc: {
          start: {
            line: 144,
            column: 37
          },
          end: {
            line: 144,
            column: 89
          }
        },
        line: 144
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 151,
            column: 26
          },
          end: {
            line: 151,
            column: 27
          }
        },
        loc: {
          start: {
            line: 152,
            column: 18
          },
          end: {
            line: 167,
            column: 28
          }
        },
        line: 152
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 173,
            column: 18
          },
          end: {
            line: 173,
            column: 19
          }
        },
        loc: {
          start: {
            line: 174,
            column: 10
          },
          end: {
            line: 185,
            column: 21
          }
        },
        line: 174
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 24,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 45
          },
          end: {
            line: 24,
            column: 54
          }
        }, {
          start: {
            line: 24,
            column: 57
          },
          end: {
            line: 24,
            column: 78
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 55
          },
          end: {
            line: 30,
            column: 64
          }
        }, {
          start: {
            line: 30,
            column: 67
          },
          end: {
            line: 30,
            column: 88
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 121,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5c82a3afa54321e3c88257cfb0e1da7dc0f8a9a2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2naz1lw8ps = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2naz1lw8ps();













cov_2naz1lw8ps().s[0]++;

const styles = theme => {
  cov_2naz1lw8ps().f[0]++;
  cov_2naz1lw8ps().s[1]++;
  return {
    wrapperClss: {
      flexGrow: 1,
      maxWidth: '100%',
      height: 'auto'
    },
    tab: {
      minWidth: 40,
      paddingLeft: 0,
      paddingRight: 0,
      '&.Mui-selected': {
        color: theme.palette.type === 'dark' ? (cov_2naz1lw8ps().b[0][0]++, '#00B39F') : (cov_2naz1lw8ps().b[0][1]++, theme.palette.primary)
      }
    },
    tabs: {
      width: '100%',
      '& .MuiTabs-indicator': {
        backgroundColor: theme.palette.type === 'dark' ? (cov_2naz1lw8ps().b[1][0]++, '#00B39F') : (cov_2naz1lw8ps().b[1][1]++, theme.palette.primary)
      }
    },
    icon: {
      display: 'inline',
      verticalAlign: 'text-top',
      width: theme.spacing(1.75),
      marginLeft: theme.spacing(0.5)
    },
    iconText: {
      display: 'flex',
      flexWrap: 'no-wrap',
      justifyContent: 'center',
      alignItems: 'center',
      '& svg': {
        verticalAlign: 'middle',
        marginRight: '.5rem'
      }
    },
    backToPlay: {
      margin: theme.spacing(2)
    },
    link: {
      cursor: 'pointer'
    },
    container: {
      display: 'flex',
      justifyContent: 'center',
      marginTop: theme.spacing(2)
    },
    paper: {
      maxWidth: '90%',
      margin: 'auto',
      overflow: 'hidden'
    },
    topToolbar: {
      marginBottom: '2rem',
      display: 'flex',
      justifyContent: 'space-between',
      paddingLeft: '1rem',
      maxWidth: '90%'
    },
    dashboardSection: {
      backgroundColor: theme.palette.secondary.elevatedComponents,
      padding: theme.spacing(2),
      borderRadius: 4,
      height: '100%'
    },
    cardHeader: {
      fontSize: theme.spacing(2)
    },
    card: {
      height: '100%',
      marginTop: theme.spacing(2)
    },
    cardContent: {
      height: '100%'
    },
    boxWrapper: {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'end',
      flexDirection: 'row',
      flexWrap: 'wrap',
      height: '60vh',
      borderRadius: 0,
      color: 'white',
      ['@media (max-width: 455px)']: {
        width: '100%'
      },
      zIndex: 5
    },
    box: {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      flexDirection: 'column',
      width: 300,
      height: 300,
      backgroundColor: theme.palette.secondary.dark,
      border: '0px solid #000',
      boxShadow: theme.shadows[5],
      margin: theme.spacing(2),
      cursor: 'pointer'
    }
  };
};

cov_2naz1lw8ps().s[2]++;

const ResourcesSubMenu = props => {
  cov_2naz1lw8ps().f[1]++;
  const {
    classes,
    updateProgress,
    k8sConfig,
    resource,
    selectedK8sContexts,
    selectedResource,
    handleChangeSelectedResource
  } = (cov_2naz1lw8ps().s[3]++, props);
  cov_2naz1lw8ps().s[4]++;

  if (!selectedResource) {
    cov_2naz1lw8ps().b[2][0]++;
    cov_2naz1lw8ps().s[5]++;
    handleChangeSelectedResource(Object.keys(resource.tableConfig())[0]);
  } else {
    cov_2naz1lw8ps().b[2][1]++;
  }

  const TABS = (cov_2naz1lw8ps().s[6]++, Object.keys(resource.tableConfig()));
  cov_2naz1lw8ps().s[7]++;

  const getResourceCategoryIndex = resourceCategory => {
    cov_2naz1lw8ps().f[2]++;
    cov_2naz1lw8ps().s[8]++;
    return TABS.findIndex(resource => {
      cov_2naz1lw8ps().f[3]++;
      cov_2naz1lw8ps().s[9]++;
      return resource === resourceCategory;
    });
  };

  cov_2naz1lw8ps().s[10]++;

  const getResourceCategory = index => {
    cov_2naz1lw8ps().f[4]++;
    cov_2naz1lw8ps().s[11]++;
    return TABS[index];
  };

  cov_2naz1lw8ps().s[12]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
      className: classes.wrapperClss,
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Paper, {
        className: classes.wrapperClss,
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx("div", {
          className: classes.subMenuTab,
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Box, {
            sx: {
              margin: '0 auto',
              width: '100%',
              maxWidth: {
                xs: 800,
                sm: 880,
                md: 1200
              }
            },
            children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Tabs, {
              value: getResourceCategoryIndex(selectedResource),
              className: classes.tabs,
              onChange: (_e, v) => {
                cov_2naz1lw8ps().f[5]++;
                cov_2naz1lw8ps().s[13]++;
                return handleChangeSelectedResource(getResourceCategory(v));
              },
              variant: "scrollable",
              scrollButtons: "on",
              indicatorColor: "primary",
              textColor: "primary",
              centered: true,
              children: TABS.map((key, index) => {
                cov_2naz1lw8ps().f[6]++;
                cov_2naz1lw8ps().s[14]++;
                return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Tooltip, {
                  title: `${resource.tableConfig()[key].name}`,
                  placement: "top",
                  children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Tab, {
                    value: index,
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
                      className: classes.iconText,
                      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(_assets_icons_technology_kubernetes__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
                        className: classes.iconText,
                        width: "22px",
                        height: "22px"
                      }), resource.tableConfig()[key].name]
                    })
                  }, index)
                }, index);
              })
            })
          })
        })
      }), TABS.map((key, index) => {
        cov_2naz1lw8ps().f[7]++;
        cov_2naz1lw8ps().s[15]++;
        return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(_tabpanel__WEBPACK_IMPORTED_MODULE_6__/* .TabPanel */ .x, {
          value: selectedResource,
          index: key,
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx(_resources_table__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
            workloadType: key,
            updateProgress: updateProgress,
            classes: classes,
            k8sConfig: k8sConfig,
            resourceConfig: resource.tableConfig,
            submenu: resource.submenu,
            selectedK8sContexts: selectedK8sContexts
          }, index)
        }, index);
      })]
    })
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.withStyles)(styles, {
  withTheme: true
})((0,next_router__WEBPACK_IMPORTED_MODULE_3__.withRouter)((0,_utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_4__/* .withNotify */ .n)(ResourcesSubMenu))));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 87893:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_data_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47533);
/* harmony import */ var _utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(93113);
/* harmony import */ var _lib_event_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(42880);
/* harmony import */ var _khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7352);
/* harmony import */ var _khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _assets_styles_general_tool_styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8716);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(88767);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(96467);
/* harmony import */ var _utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7806);
/* harmony import */ var _utils_responsive_column__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(80661);
/* harmony import */ var _utils_dimension__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(37842);
/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(51104);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(6022);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _components_SistentWrapper__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(75516);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_data_fetch__WEBPACK_IMPORTED_MODULE_1__, _utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_2__, _view__WEBPACK_IMPORTED_MODULE_6__, _config__WEBPACK_IMPORTED_MODULE_7__, _utils_utils__WEBPACK_IMPORTED_MODULE_11__]);
([_lib_data_fetch__WEBPACK_IMPORTED_MODULE_1__, _utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_2__, _view__WEBPACK_IMPORTED_MODULE_6__, _config__WEBPACK_IMPORTED_MODULE_7__, _utils_utils__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_28vkd9zmux() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/resources-table.js";
  var hash = "9b36a7b32697627a1e28ebfff3d46a8135f1e97b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/resources-table.js",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "1": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 244,
          column: 1
        }
      },
      "2": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "3": {
        start: {
          line: 34,
          column: 52
        },
        end: {
          line: 34,
          column: 64
        }
      },
      "4": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 35,
          column: 47
        }
      },
      "5": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "6": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "7": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 38,
          column: 44
        }
      },
      "8": {
        start: {
          line: 39,
          column: 30
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "9": {
        start: {
          line: 40,
          column: 36
        },
        end: {
          line: 40,
          column: 48
        }
      },
      "10": {
        start: {
          line: 41,
          column: 50
        },
        end: {
          line: 41,
          column: 62
        }
      },
      "11": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "12": {
        start: {
          line: 43,
          column: 50
        },
        end: {
          line: 43,
          column: 65
        }
      },
      "13": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "14": {
        start: {
          line: 45,
          column: 34
        },
        end: {
          line: 45,
          column: 94
        }
      },
      "15": {
        start: {
          line: 45,
          column: 57
        },
        end: {
          line: 45,
          column: 93
        }
      },
      "16": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "17": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "18": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 18
        }
      },
      "19": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 56,
          column: 87
        }
      },
      "20": {
        start: {
          line: 58,
          column: 21
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "21": {
        start: {
          line: 62,
          column: 21
        },
        end: {
          line: 62,
          column: 32
        }
      },
      "22": {
        start: {
          line: 64,
          column: 21
        },
        end: {
          line: 64,
          column: 38
        }
      },
      "23": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "24": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 21
        }
      },
      "25": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "26": {
        start: {
          line: 68,
          column: 17
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "27": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 35
        }
      },
      "28": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 69,
          column: 35
        }
      },
      "29": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "30": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 51
        }
      },
      "31": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 32
        }
      },
      "32": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 40
        }
      },
      "33": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 41
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 26
        }
      },
      "35": {
        start: {
          line: 91,
          column: 34
        },
        end: {
          line: 91,
          column: 63
        }
      },
      "36": {
        start: {
          line: 93,
          column: 2
        },
        end: {
          line: 98,
          column: 42
        }
      },
      "37": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 36
        }
      },
      "38": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "39": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 62
        }
      },
      "40": {
        start: {
          line: 100,
          column: 50
        },
        end: {
          line: 108,
          column: 4
        }
      },
      "41": {
        start: {
          line: 101,
          column: 19
        },
        end: {
          line: 101,
          column: 68
        }
      },
      "42": {
        start: {
          line: 103,
          column: 30
        },
        end: {
          line: 103,
          column: 32
        }
      },
      "43": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 106,
          column: 7
        }
      },
      "44": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 55
        }
      },
      "45": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 29
        }
      },
      "46": {
        start: {
          line: 110,
          column: 18
        },
        end: {
          line: 166,
          column: 3
        }
      },
      "47": {
        start: {
          line: 111,
          column: 11
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "48": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 132,
          column: 65
        }
      },
      "49": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 136,
          column: 92
        }
      },
      "50": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 137,
          column: 99
        }
      },
      "51": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "52": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "53": {
        start: {
          line: 141,
          column: 10
        },
        end: {
          line: 141,
          column: 39
        }
      },
      "54": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "55": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 48
        }
      },
      "56": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 18
        }
      },
      "57": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 59
        }
      },
      "58": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 18
        }
      },
      "59": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "60": {
        start: {
          line: 152,
          column: 14
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "61": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 44
        }
      },
      "62": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 45
        }
      },
      "63": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "64": {
        start: {
          line: 159,
          column: 14
        },
        end: {
          line: 159,
          column: 34
        }
      },
      "65": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 18
        }
      },
      "66": {
        start: {
          line: 168,
          column: 22
        },
        end: {
          line: 175,
          column: 3
        }
      },
      "67": {
        start: {
          line: 168,
          column: 34
        },
        end: {
          line: 175,
          column: 3
        }
      },
      "68": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 44
        }
      },
      "69": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 174,
          column: 7
        }
      },
      "70": {
        start: {
          line: 176,
          column: 2
        },
        end: {
          line: 243,
          column: 4
        }
      },
      "71": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 244,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 46
          },
          end: {
            line: 45,
            column: 47
          }
        },
        loc: {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 93
          }
        },
        line: 45
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 47,
            column: 22
          }
        },
        loc: {
          start: {
            line: 47,
            column: 41
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 66,
            column: 32
          }
        },
        loc: {
          start: {
            line: 66,
            column: 70
          },
          end: {
            line: 89,
            column: 3
          }
        },
        line: 66
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 80,
            column: 7
          }
        },
        loc: {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 86,
            column: 7
          }
        },
        line: 80
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        loc: {
          start: {
            line: 93,
            column: 18
          },
          end: {
            line: 98,
            column: 3
          }
        },
        line: 93
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 59
          },
          end: {
            line: 100,
            column: 60
          }
        },
        loc: {
          start: {
            line: 100,
            column: 65
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 100
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 104,
            column: 32
          },
          end: {
            line: 104,
            column: 33
          }
        },
        loc: {
          start: {
            line: 104,
            column: 41
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 104
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 11
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 20
          }
        },
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 132,
            column: 65
          }
        },
        line: 131
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 135,
            column: 21
          },
          end: {
            line: 135,
            column: 22
          }
        },
        loc: {
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 163,
            column: 7
          }
        },
        line: 135
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 168,
            column: 22
          },
          end: {
            line: 168,
            column: 23
          }
        },
        loc: {
          start: {
            line: 168,
            column: 34
          },
          end: {
            line: 175,
            column: 3
          }
        },
        line: 168
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 168,
            column: 34
          },
          end: {
            line: 168,
            column: 35
          }
        },
        loc: {
          start: {
            line: 168,
            column: 45
          },
          end: {
            line: 175,
            column: 3
          }
        },
        line: 168
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 213,
            column: 28
          },
          end: {
            line: 213,
            column: 29
          }
        },
        loc: {
          start: {
            line: 213,
            column: 39
          },
          end: {
            line: 215,
            column: 19
          }
        },
        line: 213
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 56,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 6
          },
          end: {
            line: 55,
            column: 7
          }
        }, {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 56,
            column: 87
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "2": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 29
          },
          end: {
            line: 81,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 29
          },
          end: {
            line: 81,
            column: 43
          }
        }, {
          start: {
            line: 81,
            column: 47
          },
          end: {
            line: 81,
            column: 49
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 25
          }
        }, {
          start: {
            line: 82,
            column: 29
          },
          end: {
            line: 82,
            column: 30
          }
        }],
        line: 82
      },
      "5": {
        loc: {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 83,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 83,
            column: 33
          }
        }, {
          start: {
            line: 83,
            column: 37
          },
          end: {
            line: 83,
            column: 38
          }
        }],
        line: 83
      },
      "6": {
        loc: {
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 84,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 84,
            column: 34
          }
        }, {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 84,
            column: 39
          }
        }],
        line: 84
      },
      "7": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "8": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 132,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 40
          }
        }, {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 65
          }
        }],
        line: 131
      },
      "9": {
        loc: {
          start: {
            line: 136,
            column: 25
          },
          end: {
            line: 136,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 51
          },
          end: {
            line: 136,
            column: 87
          }
        }, {
          start: {
            line: 136,
            column: 90
          },
          end: {
            line: 136,
            column: 92
          }
        }],
        line: 136
      },
      "10": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "11": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 144,
            column: 10
          },
          end: {
            line: 146,
            column: 18
          }
        }, {
          start: {
            line: 147,
            column: 10
          },
          end: {
            line: 149,
            column: 18
          }
        }, {
          start: {
            line: 150,
            column: 10
          },
          end: {
            line: 161,
            column: 18
          }
        }],
        line: 143
      },
      "12": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "13": {
        loc: {
          start: {
            line: 152,
            column: 14
          },
          end: {
            line: 156,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 14
          },
          end: {
            line: 156,
            column: 15
          }
        }, {
          start: {
            line: 154,
            column: 21
          },
          end: {
            line: 156,
            column: 15
          }
        }],
        line: 152
      },
      "14": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "15": {
        loc: {
          start: {
            line: 178,
            column: 7
          },
          end: {
            line: 241,
            column: 7
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 196,
            column: 16
          }
        }, {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 240,
            column: 14
          }
        }],
        line: 178
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9b36a7b32697627a1e28ebfff3d46a8135f1e97b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28vkd9zmux = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_28vkd9zmux();


















const ACTION_TYPES = (cov_28vkd9zmux().s[0]++, {
  FETCH_MESHSYNC_RESOURCES: {
    name: 'FETCH_MESHSYNC_RESOURCES',
    error_msg: 'Failed to fetch meshsync resources'
  }
});
cov_28vkd9zmux().s[1]++;

const ResourcesTable = props => {
  cov_28vkd9zmux().f[0]++;
  const {
    classes,
    updateProgress,
    k8sConfig,
    resourceConfig,
    submenu,
    workloadType,
    selectedK8sContexts
  } = (cov_28vkd9zmux().s[2]++, props);
  const [meshSyncResources, setMeshSyncResources] = (cov_28vkd9zmux().s[3]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]));
  const [loading, setLoading] = (cov_28vkd9zmux().s[4]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false));
  const [page, setPage] = (cov_28vkd9zmux().s[5]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0));
  const [count, setCount] = (cov_28vkd9zmux().s[6]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0));
  const [pageSize, setPageSize] = (cov_28vkd9zmux().s[7]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)());
  const [search, setSearch] = (cov_28vkd9zmux().s[8]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(''));
  const [sortOrder, setSortOrder] = (cov_28vkd9zmux().s[9]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(''));
  const [selectedResource, setSelectedResource] = (cov_28vkd9zmux().s[10]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}));
  const [view, setView] = (cov_28vkd9zmux().s[11]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(_config__WEBPACK_IMPORTED_MODULE_7__/* .ALL_VIEW */ .s$));
  const [isSearchExpanded, setIsSearchExpanded] = (cov_28vkd9zmux().s[12]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false));
  const {
    width
  } = (cov_28vkd9zmux().s[13]++, (0,_utils_dimension__WEBPACK_IMPORTED_MODULE_10__/* .useWindowDimensions */ .d)());
  const connectionMetadataState = (cov_28vkd9zmux().s[14]++, (0,react_redux__WEBPACK_IMPORTED_MODULE_12__.useSelector)(state => {
    cov_28vkd9zmux().f[1]++;
    cov_28vkd9zmux().s[15]++;
    return state.get('connectionMetadataState');
  }));
  cov_28vkd9zmux().s[16]++;

  const switchView = (view, resource) => {
    cov_28vkd9zmux().f[2]++;
    cov_28vkd9zmux().s[17]++;
    setSelectedResource(resource);
    cov_28vkd9zmux().s[18]++;
    setView(view);
  };

  const tableConfig = (cov_28vkd9zmux().s[19]++, submenu ? (cov_28vkd9zmux().b[0][0]++, resourceConfig(switchView, meshSyncResources, k8sConfig, connectionMetadataState)[workloadType]) : (cov_28vkd9zmux().b[0][1]++, resourceConfig(switchView, meshSyncResources, k8sConfig, connectionMetadataState)));
  const clusterIds = (cov_28vkd9zmux().s[20]++, encodeURIComponent(JSON.stringify((0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_8__/* .getK8sClusterIdsFromCtxId */ .F3)(selectedK8sContexts, k8sConfig))));
  const StyleClass = (cov_28vkd9zmux().s[21]++, (0,_assets_styles_general_tool_styles__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)());
  const {
    notify
  } = (cov_28vkd9zmux().s[22]++, (0,_utils_hooks_useNotification__WEBPACK_IMPORTED_MODULE_2__/* .useNotification */ .l)());
  cov_28vkd9zmux().s[23]++;

  const getMeshsyncResources = (page, pageSize, search, sortOrder) => {
    cov_28vkd9zmux().f[3]++;
    cov_28vkd9zmux().s[24]++;
    setLoading(true);
    cov_28vkd9zmux().s[25]++;

    if (!search) {
      cov_28vkd9zmux().b[1][0]++;
      cov_28vkd9zmux().s[26]++;
      search = '';
    } else {
      cov_28vkd9zmux().b[1][1]++;
    }

    cov_28vkd9zmux().s[27]++;

    if (!sortOrder) {
      cov_28vkd9zmux().b[2][0]++;
      cov_28vkd9zmux().s[28]++;
      sortOrder = '';
    } else {
      cov_28vkd9zmux().b[2][1]++;
    }

    cov_28vkd9zmux().s[29]++;
    (0,_lib_data_fetch__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(`/api/system/meshsync/resources?kind=${tableConfig.name}&status=true&spec=true&annotations=true&labels=true&clusterIds=${clusterIds}&page=${page}&pagesize=${pageSize}&search=${encodeURIComponent(search)}&order=${encodeURIComponent(sortOrder)}`, {
      credentials: 'include',
      method: 'GET'
    }, res => {
      cov_28vkd9zmux().f[4]++;
      cov_28vkd9zmux().s[30]++;
      setMeshSyncResources((cov_28vkd9zmux().b[3][0]++, res?.resources) || (cov_28vkd9zmux().b[3][1]++, []));
      cov_28vkd9zmux().s[31]++;
      setPage((cov_28vkd9zmux().b[4][0]++, res?.page) || (cov_28vkd9zmux().b[4][1]++, 0));
      cov_28vkd9zmux().s[32]++;
      setCount((cov_28vkd9zmux().b[5][0]++, res?.total_count) || (cov_28vkd9zmux().b[5][1]++, 0));
      cov_28vkd9zmux().s[33]++;
      setPageSize((cov_28vkd9zmux().b[6][0]++, res?.page_size) || (cov_28vkd9zmux().b[6][1]++, 0));
      cov_28vkd9zmux().s[34]++;
      setLoading(false);
    }, handleError(ACTION_TYPES.FETCH_MESHSYNC_RESOURCES));
  };

  const [tableCols, updateCols] = (cov_28vkd9zmux().s[35]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(tableConfig.columns));
  cov_28vkd9zmux().s[36]++;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    cov_28vkd9zmux().f[5]++;
    cov_28vkd9zmux().s[37]++;
    updateCols(tableConfig.columns);
    cov_28vkd9zmux().s[38]++;

    if (!loading) {
      cov_28vkd9zmux().b[7][0]++;
      cov_28vkd9zmux().s[39]++;
      getMeshsyncResources(page, pageSize, search, sortOrder);
    } else {
      cov_28vkd9zmux().b[7][1]++;
    }
  }, [page, pageSize, search, sortOrder]);
  const [columnVisibility, setColumnVisibility] = (cov_28vkd9zmux().s[40]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {
    cov_28vkd9zmux().f[6]++;
    let showCols = (cov_28vkd9zmux().s[41]++, (0,_utils_responsive_column__WEBPACK_IMPORTED_MODULE_9__/* .updateVisibleColumns */ .D)(tableConfig.colViews, width)); // Initialize column visibility based on the original columns' visibility

    const initialVisibility = (cov_28vkd9zmux().s[42]++, {});
    cov_28vkd9zmux().s[43]++;
    tableConfig.columns.forEach(col => {
      cov_28vkd9zmux().f[7]++;
      cov_28vkd9zmux().s[44]++;
      initialVisibility[col.name] = showCols[col.name];
    });
    cov_28vkd9zmux().s[45]++;
    return initialVisibility;
  }));
  const options = (cov_28vkd9zmux().s[46]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    cov_28vkd9zmux().f[8]++;
    cov_28vkd9zmux().s[47]++;
    return {
      filter: false,
      viewColumns: false,
      search: false,
      responsive: 'standard',
      serverSide: true,
      selectableRows: 'none',
      count,
      rowsPerPage: pageSize,
      fixedHeader: true,
      page,
      print: false,
      download: false,
      textLabels: {
        selectedRows: {
          text: `${tableConfig.name}(s) selected`
        }
      },
      enableNestedDataAccess: '.',
      onCellClick: (_, meta) => {
        cov_28vkd9zmux().f[9]++;
        cov_28vkd9zmux().s[48]++;
        return (cov_28vkd9zmux().b[8][0]++, meta.columnName !== 'cluster_id') && (cov_28vkd9zmux().b[8][1]++, switchView(_config__WEBPACK_IMPORTED_MODULE_7__/* .SINGLE_VIEW */ .IU, meshSyncResources[meta.rowIndex]));
      },
      expandableRowsOnClick: true,
      onTableChange: (action, tableState) => {
        cov_28vkd9zmux().f[10]++;
        const sortInfo = (cov_28vkd9zmux().s[49]++, tableState.announceText ? (cov_28vkd9zmux().b[9][0]++, tableState.announceText.split(' : ')) : (cov_28vkd9zmux().b[9][1]++, []));
        const columnName = (cov_28vkd9zmux().s[50]++, (0,_utils_utils__WEBPACK_IMPORTED_MODULE_11__/* .camelcaseToSnakecase */ .Di)(tableConfig.columns[tableState.activeColumn]?.name));
        let order = (cov_28vkd9zmux().s[51]++, '');
        cov_28vkd9zmux().s[52]++;

        if (tableState.activeColumn) {
          cov_28vkd9zmux().b[10][0]++;
          cov_28vkd9zmux().s[53]++;
          order = `${columnName} desc`;
        } else {
          cov_28vkd9zmux().b[10][1]++;
        }

        cov_28vkd9zmux().s[54]++;

        switch (action) {
          case 'changePage':
            cov_28vkd9zmux().b[11][0]++;
            cov_28vkd9zmux().s[55]++;
            setPage(tableState.page.toString());
            cov_28vkd9zmux().s[56]++;
            break;

          case 'changeRowsPerPage':
            cov_28vkd9zmux().b[11][1]++;
            cov_28vkd9zmux().s[57]++;
            setPageSize(tableState.rowsPerPage.toString());
            cov_28vkd9zmux().s[58]++;
            break;

          case 'sort':
            cov_28vkd9zmux().b[11][2]++;
            cov_28vkd9zmux().s[59]++;

            if (sortInfo.length == 2) {
              cov_28vkd9zmux().b[12][0]++;
              cov_28vkd9zmux().s[60]++;

              if (sortInfo[1] === 'ascending') {
                cov_28vkd9zmux().b[13][0]++;
                cov_28vkd9zmux().s[61]++;
                order = `${columnName} asc`;
              } else {
                cov_28vkd9zmux().b[13][1]++;
                cov_28vkd9zmux().s[62]++;
                order = `${columnName} desc`;
              }
            } else {
              cov_28vkd9zmux().b[12][1]++;
            }

            cov_28vkd9zmux().s[63]++;

            if (order !== sortOrder) {
              cov_28vkd9zmux().b[14][0]++;
              cov_28vkd9zmux().s[64]++;
              setSortOrder(order);
            } else {
              cov_28vkd9zmux().b[14][1]++;
            }

            cov_28vkd9zmux().s[65]++;
            break;
        }
      }
    };
  }, [page, pageSize]));
  cov_28vkd9zmux().s[66]++;

  const handleError = action => {
    cov_28vkd9zmux().f[11]++;
    cov_28vkd9zmux().s[67]++;
    return error => {
      cov_28vkd9zmux().f[12]++;
      cov_28vkd9zmux().s[68]++;
      updateProgress({
        showProgress: false
      });
      cov_28vkd9zmux().s[69]++;
      notify({
        message: `${action.error_msg}: ${error}`,
        event_type: _lib_event_types__WEBPACK_IMPORTED_MODULE_3__/* .EVENT_TYPES.ERROR */ .E_.ERROR,
        details: error.toString()
      });
    };
  };

  cov_28vkd9zmux().s[70]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.Fragment, {
    children: view !== _config__WEBPACK_IMPORTED_MODULE_7__/* .ALL_VIEW */ .s$ ? (cov_28vkd9zmux().b[15][0]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_14__.Slide, {
      in: view !== _config__WEBPACK_IMPORTED_MODULE_7__/* .ALL_VIEW */ .s$,
      timeout: 400,
      direction: 'left',
      exit: true,
      enter: true,
      mountOnEnter: true,
      unmountOnExit: true,
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx("div", {
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_view__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, {
          type: `${tableConfig.name}`,
          setView: setView,
          resource: selectedResource,
          classes: classes
        })
      })
    })) : (cov_28vkd9zmux().b[15][1]++, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
        className: StyleClass.toolWrapper,
        style: {
          marginBottom: '5px',
          marginTop: '1rem'
        },
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx("div", {
          className: classes.createButton
        }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_components_SistentWrapper__WEBPACK_IMPORTED_MODULE_13__/* .UsesSistent */ .k, {
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsxs)("div", {
            className: classes.searchAndView,
            style: {
              display: 'flex',
              borderRadius: '0.5rem 0.5rem 0 0'
            },
            children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_4__.SearchBar, {
              onSearch: value => {
                cov_28vkd9zmux().f[13]++;
                cov_28vkd9zmux().s[71]++;
                setSearch(value);
              },
              expanded: isSearchExpanded,
              setExpanded: setIsSearchExpanded,
              placeholder: `Search ${tableConfig.name}...`
            }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_4__.CustomColumnVisibilityControl, {
              id: "ref",
              columns: tableConfig.columns,
              customToolsProps: {
                columnVisibility,
                setColumnVisibility
              }
            })]
          })
        })]
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_components_SistentWrapper__WEBPACK_IMPORTED_MODULE_13__/* .UsesSistent */ .k, {
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__.jsx(_khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_4__.ResponsiveDataTable, {
          data: meshSyncResources,
          columns: tableConfig.columns,
          options: options,
          className: classes.muiRow,
          tableCols: tableCols,
          updateCols: updateCols,
          columnVisibility: columnVisibility
        })
      })]
    }))
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ResourcesTable);
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 55833:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "H": () => (/* binding */ SecurityTypesConfig)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59077);
/* harmony import */ var _utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7806);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96467);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88767);
/* harmony import */ var _connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16845);
/* harmony import */ var _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22921);
/* harmony import */ var _sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63471);
/* harmony import */ var _utils_Enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(46811);
/* harmony import */ var _components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(38409);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__]);
([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
const _excluded = ["index"],
      _excluded2 = ["index"],
      _excluded3 = ["index"],
      _excluded4 = ["index"],
      _excluded5 = ["index"],
      _excluded6 = ["index"],
      _excluded7 = ["index"],
      _excluded8 = ["index"],
      _excluded9 = ["index"],
      _excluded10 = ["index"];

function cov_vci43w0k9() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/security/config.js";
  var hash = "5f1d3a20db36a43f6f6d5cf7111378b8b28e9568";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/security/config.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 35
        },
        end: {
          line: 587,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "2": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 586,
          column: 4
        }
      },
      "3": {
        start: {
          line: 35,
          column: 41
        },
        end: {
          line: 35,
          column: 64
        }
      },
      "4": {
        start: {
          line: 44,
          column: 14
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "5": {
        start: {
          line: 47,
          column: 14
        },
        end: {
          line: 57,
          column: 16
        }
      },
      "6": {
        start: {
          line: 49,
          column: 33
        },
        end: {
          line: 49,
          column: 95
        }
      },
      "7": {
        start: {
          line: 68,
          column: 14
        },
        end: {
          line: 75,
          column: 16
        }
      },
      "8": {
        start: {
          line: 73,
          column: 32
        },
        end: {
          line: 73,
          column: 49
        }
      },
      "9": {
        start: {
          line: 86,
          column: 14
        },
        end: {
          line: 93,
          column: 16
        }
      },
      "10": {
        start: {
          line: 91,
          column: 32
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "11": {
        start: {
          line: 96,
          column: 28
        },
        end: {
          line: 96,
          column: 70
        }
      },
      "12": {
        start: {
          line: 97,
          column: 14
        },
        end: {
          line: 107,
          column: 16
        }
      },
      "13": {
        start: {
          line: 105,
          column: 36
        },
        end: {
          line: 105,
          column: 93
        }
      },
      "14": {
        start: {
          line: 117,
          column: 14
        },
        end: {
          line: 117,
          column: 62
        }
      },
      "15": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 39
        }
      },
      "16": {
        start: {
          line: 121,
          column: 14
        },
        end: {
          line: 121,
          column: 33
        }
      },
      "17": {
        start: {
          line: 142,
          column: 41
        },
        end: {
          line: 142,
          column: 64
        }
      },
      "18": {
        start: {
          line: 151,
          column: 14
        },
        end: {
          line: 151,
          column: 62
        }
      },
      "19": {
        start: {
          line: 154,
          column: 14
        },
        end: {
          line: 164,
          column: 16
        }
      },
      "20": {
        start: {
          line: 156,
          column: 33
        },
        end: {
          line: 156,
          column: 95
        }
      },
      "21": {
        start: {
          line: 175,
          column: 14
        },
        end: {
          line: 182,
          column: 16
        }
      },
      "22": {
        start: {
          line: 180,
          column: 32
        },
        end: {
          line: 180,
          column: 49
        }
      },
      "23": {
        start: {
          line: 192,
          column: 14
        },
        end: {
          line: 192,
          column: 62
        }
      },
      "24": {
        start: {
          line: 195,
          column: 14
        },
        end: {
          line: 213,
          column: 16
        }
      },
      "25": {
        start: {
          line: 205,
          column: 37
        },
        end: {
          line: 205,
          column: 99
        }
      },
      "26": {
        start: {
          line: 224,
          column: 14
        },
        end: {
          line: 231,
          column: 16
        }
      },
      "27": {
        start: {
          line: 229,
          column: 32
        },
        end: {
          line: 229,
          column: 49
        }
      },
      "28": {
        start: {
          line: 234,
          column: 28
        },
        end: {
          line: 234,
          column: 70
        }
      },
      "29": {
        start: {
          line: 235,
          column: 14
        },
        end: {
          line: 245,
          column: 16
        }
      },
      "30": {
        start: {
          line: 243,
          column: 36
        },
        end: {
          line: 243,
          column: 93
        }
      },
      "31": {
        start: {
          line: 255,
          column: 14
        },
        end: {
          line: 255,
          column: 62
        }
      },
      "32": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 258,
          column: 39
        }
      },
      "33": {
        start: {
          line: 259,
          column: 14
        },
        end: {
          line: 259,
          column: 33
        }
      },
      "34": {
        start: {
          line: 280,
          column: 41
        },
        end: {
          line: 280,
          column: 64
        }
      },
      "35": {
        start: {
          line: 289,
          column: 14
        },
        end: {
          line: 289,
          column: 62
        }
      },
      "36": {
        start: {
          line: 292,
          column: 14
        },
        end: {
          line: 302,
          column: 16
        }
      },
      "37": {
        start: {
          line: 294,
          column: 33
        },
        end: {
          line: 294,
          column: 95
        }
      },
      "38": {
        start: {
          line: 313,
          column: 14
        },
        end: {
          line: 320,
          column: 16
        }
      },
      "39": {
        start: {
          line: 318,
          column: 32
        },
        end: {
          line: 318,
          column: 49
        }
      },
      "40": {
        start: {
          line: 331,
          column: 14
        },
        end: {
          line: 338,
          column: 16
        }
      },
      "41": {
        start: {
          line: 336,
          column: 32
        },
        end: {
          line: 336,
          column: 49
        }
      },
      "42": {
        start: {
          line: 341,
          column: 28
        },
        end: {
          line: 341,
          column: 70
        }
      },
      "43": {
        start: {
          line: 342,
          column: 14
        },
        end: {
          line: 352,
          column: 16
        }
      },
      "44": {
        start: {
          line: 350,
          column: 36
        },
        end: {
          line: 350,
          column: 93
        }
      },
      "45": {
        start: {
          line: 362,
          column: 14
        },
        end: {
          line: 362,
          column: 62
        }
      },
      "46": {
        start: {
          line: 365,
          column: 25
        },
        end: {
          line: 365,
          column: 39
        }
      },
      "47": {
        start: {
          line: 366,
          column: 14
        },
        end: {
          line: 366,
          column: 33
        }
      },
      "48": {
        start: {
          line: 387,
          column: 41
        },
        end: {
          line: 387,
          column: 64
        }
      },
      "49": {
        start: {
          line: 396,
          column: 14
        },
        end: {
          line: 396,
          column: 62
        }
      },
      "50": {
        start: {
          line: 399,
          column: 14
        },
        end: {
          line: 409,
          column: 16
        }
      },
      "51": {
        start: {
          line: 401,
          column: 33
        },
        end: {
          line: 401,
          column: 95
        }
      },
      "52": {
        start: {
          line: 420,
          column: 14
        },
        end: {
          line: 427,
          column: 16
        }
      },
      "53": {
        start: {
          line: 425,
          column: 32
        },
        end: {
          line: 425,
          column: 49
        }
      },
      "54": {
        start: {
          line: 438,
          column: 14
        },
        end: {
          line: 445,
          column: 16
        }
      },
      "55": {
        start: {
          line: 443,
          column: 32
        },
        end: {
          line: 443,
          column: 49
        }
      },
      "56": {
        start: {
          line: 448,
          column: 28
        },
        end: {
          line: 448,
          column: 70
        }
      },
      "57": {
        start: {
          line: 449,
          column: 14
        },
        end: {
          line: 459,
          column: 16
        }
      },
      "58": {
        start: {
          line: 457,
          column: 36
        },
        end: {
          line: 457,
          column: 93
        }
      },
      "59": {
        start: {
          line: 469,
          column: 14
        },
        end: {
          line: 469,
          column: 62
        }
      },
      "60": {
        start: {
          line: 472,
          column: 25
        },
        end: {
          line: 472,
          column: 39
        }
      },
      "61": {
        start: {
          line: 473,
          column: 14
        },
        end: {
          line: 473,
          column: 33
        }
      },
      "62": {
        start: {
          line: 494,
          column: 41
        },
        end: {
          line: 494,
          column: 64
        }
      },
      "63": {
        start: {
          line: 503,
          column: 14
        },
        end: {
          line: 503,
          column: 62
        }
      },
      "64": {
        start: {
          line: 506,
          column: 14
        },
        end: {
          line: 516,
          column: 16
        }
      },
      "65": {
        start: {
          line: 508,
          column: 33
        },
        end: {
          line: 508,
          column: 95
        }
      },
      "66": {
        start: {
          line: 527,
          column: 14
        },
        end: {
          line: 534,
          column: 16
        }
      },
      "67": {
        start: {
          line: 532,
          column: 32
        },
        end: {
          line: 532,
          column: 49
        }
      },
      "68": {
        start: {
          line: 545,
          column: 14
        },
        end: {
          line: 552,
          column: 16
        }
      },
      "69": {
        start: {
          line: 550,
          column: 32
        },
        end: {
          line: 550,
          column: 49
        }
      },
      "70": {
        start: {
          line: 555,
          column: 28
        },
        end: {
          line: 555,
          column: 70
        }
      },
      "71": {
        start: {
          line: 556,
          column: 14
        },
        end: {
          line: 566,
          column: 16
        }
      },
      "72": {
        start: {
          line: 564,
          column: 36
        },
        end: {
          line: 564,
          column: 93
        }
      },
      "73": {
        start: {
          line: 576,
          column: 14
        },
        end: {
          line: 576,
          column: 62
        }
      },
      "74": {
        start: {
          line: 579,
          column: 25
        },
        end: {
          line: 579,
          column: 39
        }
      },
      "75": {
        start: {
          line: 580,
          column: 14
        },
        end: {
          line: 580,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 35
          },
          end: {
            line: 12,
            column: 36
          }
        },
        loc: {
          start: {
            line: 17,
            column: 5
          },
          end: {
            line: 587,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 35,
            column: 31
          }
        },
        loc: {
          start: {
            line: 35,
            column: 41
          },
          end: {
            line: 35,
            column: 64
          }
        },
        line: 35
      },
      "2": {
        name: "CustomHead",
        decl: {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 43,
            column: 49
          }
        },
        loc: {
          start: {
            line: 43,
            column: 65
          },
          end: {
            line: 45,
            column: 13
          }
        },
        line: 43
      },
      "3": {
        name: "CustomBody",
        decl: {
          start: {
            line: 46,
            column: 39
          },
          end: {
            line: 46,
            column: 49
          }
        },
        loc: {
          start: {
            line: 46,
            column: 68
          },
          end: {
            line: 58,
            column: 13
          }
        },
        line: 46
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 49,
            column: 28
          }
        },
        loc: {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 95
          }
        },
        line: 49
      },
      "5": {
        name: "CustomHead",
        decl: {
          start: {
            line: 67,
            column: 39
          },
          end: {
            line: 67,
            column: 49
          }
        },
        loc: {
          start: {
            line: 67,
            column: 96
          },
          end: {
            line: 76,
            column: 13
          }
        },
        line: 67
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 73,
            column: 26
          },
          end: {
            line: 73,
            column: 27
          }
        },
        loc: {
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 73,
            column: 49
          }
        },
        line: 73
      },
      "7": {
        name: "CustomHead",
        decl: {
          start: {
            line: 85,
            column: 39
          },
          end: {
            line: 85,
            column: 49
          }
        },
        loc: {
          start: {
            line: 85,
            column: 96
          },
          end: {
            line: 94,
            column: 13
          }
        },
        line: 85
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 26
          },
          end: {
            line: 91,
            column: 27
          }
        },
        loc: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 49
          }
        },
        line: 91
      },
      "9": {
        name: "CustomBody",
        decl: {
          start: {
            line: 95,
            column: 39
          },
          end: {
            line: 95,
            column: 49
          }
        },
        loc: {
          start: {
            line: 95,
            column: 55
          },
          end: {
            line: 108,
            column: 13
          }
        },
        line: 95
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 105,
            column: 31
          }
        },
        loc: {
          start: {
            line: 105,
            column: 36
          },
          end: {
            line: 105,
            column: 93
          }
        },
        line: 105
      },
      "11": {
        name: "CustomHead",
        decl: {
          start: {
            line: 116,
            column: 39
          },
          end: {
            line: 116,
            column: 49
          }
        },
        loc: {
          start: {
            line: 116,
            column: 65
          },
          end: {
            line: 118,
            column: 13
          }
        },
        line: 116
      },
      "12": {
        name: "CustomBody",
        decl: {
          start: {
            line: 119,
            column: 39
          },
          end: {
            line: 119,
            column: 49
          }
        },
        loc: {
          start: {
            line: 119,
            column: 57
          },
          end: {
            line: 122,
            column: 13
          }
        },
        line: 119
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 142,
            column: 30
          },
          end: {
            line: 142,
            column: 31
          }
        },
        loc: {
          start: {
            line: 142,
            column: 41
          },
          end: {
            line: 142,
            column: 64
          }
        },
        line: 142
      },
      "14": {
        name: "CustomHead",
        decl: {
          start: {
            line: 150,
            column: 39
          },
          end: {
            line: 150,
            column: 49
          }
        },
        loc: {
          start: {
            line: 150,
            column: 65
          },
          end: {
            line: 152,
            column: 13
          }
        },
        line: 150
      },
      "15": {
        name: "CustomBody",
        decl: {
          start: {
            line: 153,
            column: 39
          },
          end: {
            line: 153,
            column: 49
          }
        },
        loc: {
          start: {
            line: 153,
            column: 68
          },
          end: {
            line: 165,
            column: 13
          }
        },
        line: 153
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 156,
            column: 27
          },
          end: {
            line: 156,
            column: 28
          }
        },
        loc: {
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 95
          }
        },
        line: 156
      },
      "17": {
        name: "CustomHead",
        decl: {
          start: {
            line: 174,
            column: 39
          },
          end: {
            line: 174,
            column: 49
          }
        },
        loc: {
          start: {
            line: 174,
            column: 96
          },
          end: {
            line: 183,
            column: 13
          }
        },
        line: 174
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 180,
            column: 26
          },
          end: {
            line: 180,
            column: 27
          }
        },
        loc: {
          start: {
            line: 180,
            column: 32
          },
          end: {
            line: 180,
            column: 49
          }
        },
        line: 180
      },
      "19": {
        name: "CustomHead",
        decl: {
          start: {
            line: 191,
            column: 39
          },
          end: {
            line: 191,
            column: 49
          }
        },
        loc: {
          start: {
            line: 191,
            column: 65
          },
          end: {
            line: 193,
            column: 13
          }
        },
        line: 191
      },
      "20": {
        name: "CustomBody",
        decl: {
          start: {
            line: 194,
            column: 39
          },
          end: {
            line: 194,
            column: 49
          }
        },
        loc: {
          start: {
            line: 194,
            column: 68
          },
          end: {
            line: 214,
            column: 13
          }
        },
        line: 194
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 205,
            column: 31
          },
          end: {
            line: 205,
            column: 32
          }
        },
        loc: {
          start: {
            line: 205,
            column: 37
          },
          end: {
            line: 205,
            column: 99
          }
        },
        line: 205
      },
      "22": {
        name: "CustomHead",
        decl: {
          start: {
            line: 223,
            column: 39
          },
          end: {
            line: 223,
            column: 49
          }
        },
        loc: {
          start: {
            line: 223,
            column: 96
          },
          end: {
            line: 232,
            column: 13
          }
        },
        line: 223
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 27
          }
        },
        loc: {
          start: {
            line: 229,
            column: 32
          },
          end: {
            line: 229,
            column: 49
          }
        },
        line: 229
      },
      "24": {
        name: "CustomBody",
        decl: {
          start: {
            line: 233,
            column: 39
          },
          end: {
            line: 233,
            column: 49
          }
        },
        loc: {
          start: {
            line: 233,
            column: 55
          },
          end: {
            line: 246,
            column: 13
          }
        },
        line: 233
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 243,
            column: 30
          },
          end: {
            line: 243,
            column: 31
          }
        },
        loc: {
          start: {
            line: 243,
            column: 36
          },
          end: {
            line: 243,
            column: 93
          }
        },
        line: 243
      },
      "26": {
        name: "CustomHead",
        decl: {
          start: {
            line: 254,
            column: 39
          },
          end: {
            line: 254,
            column: 49
          }
        },
        loc: {
          start: {
            line: 254,
            column: 65
          },
          end: {
            line: 256,
            column: 13
          }
        },
        line: 254
      },
      "27": {
        name: "CustomBody",
        decl: {
          start: {
            line: 257,
            column: 39
          },
          end: {
            line: 257,
            column: 49
          }
        },
        loc: {
          start: {
            line: 257,
            column: 57
          },
          end: {
            line: 260,
            column: 13
          }
        },
        line: 257
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 280,
            column: 30
          },
          end: {
            line: 280,
            column: 31
          }
        },
        loc: {
          start: {
            line: 280,
            column: 41
          },
          end: {
            line: 280,
            column: 64
          }
        },
        line: 280
      },
      "29": {
        name: "CustomHead",
        decl: {
          start: {
            line: 288,
            column: 39
          },
          end: {
            line: 288,
            column: 49
          }
        },
        loc: {
          start: {
            line: 288,
            column: 65
          },
          end: {
            line: 290,
            column: 13
          }
        },
        line: 288
      },
      "30": {
        name: "CustomBody",
        decl: {
          start: {
            line: 291,
            column: 39
          },
          end: {
            line: 291,
            column: 49
          }
        },
        loc: {
          start: {
            line: 291,
            column: 68
          },
          end: {
            line: 303,
            column: 13
          }
        },
        line: 291
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 294,
            column: 27
          },
          end: {
            line: 294,
            column: 28
          }
        },
        loc: {
          start: {
            line: 294,
            column: 33
          },
          end: {
            line: 294,
            column: 95
          }
        },
        line: 294
      },
      "32": {
        name: "CustomHead",
        decl: {
          start: {
            line: 312,
            column: 39
          },
          end: {
            line: 312,
            column: 49
          }
        },
        loc: {
          start: {
            line: 312,
            column: 96
          },
          end: {
            line: 321,
            column: 13
          }
        },
        line: 312
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 318,
            column: 26
          },
          end: {
            line: 318,
            column: 27
          }
        },
        loc: {
          start: {
            line: 318,
            column: 32
          },
          end: {
            line: 318,
            column: 49
          }
        },
        line: 318
      },
      "34": {
        name: "CustomHead",
        decl: {
          start: {
            line: 330,
            column: 39
          },
          end: {
            line: 330,
            column: 49
          }
        },
        loc: {
          start: {
            line: 330,
            column: 96
          },
          end: {
            line: 339,
            column: 13
          }
        },
        line: 330
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 336,
            column: 26
          },
          end: {
            line: 336,
            column: 27
          }
        },
        loc: {
          start: {
            line: 336,
            column: 32
          },
          end: {
            line: 336,
            column: 49
          }
        },
        line: 336
      },
      "36": {
        name: "CustomBody",
        decl: {
          start: {
            line: 340,
            column: 39
          },
          end: {
            line: 340,
            column: 49
          }
        },
        loc: {
          start: {
            line: 340,
            column: 55
          },
          end: {
            line: 353,
            column: 13
          }
        },
        line: 340
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 350,
            column: 30
          },
          end: {
            line: 350,
            column: 31
          }
        },
        loc: {
          start: {
            line: 350,
            column: 36
          },
          end: {
            line: 350,
            column: 93
          }
        },
        line: 350
      },
      "38": {
        name: "CustomHead",
        decl: {
          start: {
            line: 361,
            column: 39
          },
          end: {
            line: 361,
            column: 49
          }
        },
        loc: {
          start: {
            line: 361,
            column: 65
          },
          end: {
            line: 363,
            column: 13
          }
        },
        line: 361
      },
      "39": {
        name: "CustomBody",
        decl: {
          start: {
            line: 364,
            column: 39
          },
          end: {
            line: 364,
            column: 49
          }
        },
        loc: {
          start: {
            line: 364,
            column: 57
          },
          end: {
            line: 367,
            column: 13
          }
        },
        line: 364
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 387,
            column: 30
          },
          end: {
            line: 387,
            column: 31
          }
        },
        loc: {
          start: {
            line: 387,
            column: 41
          },
          end: {
            line: 387,
            column: 64
          }
        },
        line: 387
      },
      "41": {
        name: "CustomHead",
        decl: {
          start: {
            line: 395,
            column: 39
          },
          end: {
            line: 395,
            column: 49
          }
        },
        loc: {
          start: {
            line: 395,
            column: 65
          },
          end: {
            line: 397,
            column: 13
          }
        },
        line: 395
      },
      "42": {
        name: "CustomBody",
        decl: {
          start: {
            line: 398,
            column: 39
          },
          end: {
            line: 398,
            column: 49
          }
        },
        loc: {
          start: {
            line: 398,
            column: 68
          },
          end: {
            line: 410,
            column: 13
          }
        },
        line: 398
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 401,
            column: 27
          },
          end: {
            line: 401,
            column: 28
          }
        },
        loc: {
          start: {
            line: 401,
            column: 33
          },
          end: {
            line: 401,
            column: 95
          }
        },
        line: 401
      },
      "44": {
        name: "CustomHead",
        decl: {
          start: {
            line: 419,
            column: 39
          },
          end: {
            line: 419,
            column: 49
          }
        },
        loc: {
          start: {
            line: 419,
            column: 96
          },
          end: {
            line: 428,
            column: 13
          }
        },
        line: 419
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 425,
            column: 26
          },
          end: {
            line: 425,
            column: 27
          }
        },
        loc: {
          start: {
            line: 425,
            column: 32
          },
          end: {
            line: 425,
            column: 49
          }
        },
        line: 425
      },
      "46": {
        name: "CustomHead",
        decl: {
          start: {
            line: 437,
            column: 39
          },
          end: {
            line: 437,
            column: 49
          }
        },
        loc: {
          start: {
            line: 437,
            column: 96
          },
          end: {
            line: 446,
            column: 13
          }
        },
        line: 437
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 443,
            column: 26
          },
          end: {
            line: 443,
            column: 27
          }
        },
        loc: {
          start: {
            line: 443,
            column: 32
          },
          end: {
            line: 443,
            column: 49
          }
        },
        line: 443
      },
      "48": {
        name: "CustomBody",
        decl: {
          start: {
            line: 447,
            column: 39
          },
          end: {
            line: 447,
            column: 49
          }
        },
        loc: {
          start: {
            line: 447,
            column: 55
          },
          end: {
            line: 460,
            column: 13
          }
        },
        line: 447
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 457,
            column: 30
          },
          end: {
            line: 457,
            column: 31
          }
        },
        loc: {
          start: {
            line: 457,
            column: 36
          },
          end: {
            line: 457,
            column: 93
          }
        },
        line: 457
      },
      "50": {
        name: "CustomHead",
        decl: {
          start: {
            line: 468,
            column: 39
          },
          end: {
            line: 468,
            column: 49
          }
        },
        loc: {
          start: {
            line: 468,
            column: 65
          },
          end: {
            line: 470,
            column: 13
          }
        },
        line: 468
      },
      "51": {
        name: "CustomBody",
        decl: {
          start: {
            line: 471,
            column: 39
          },
          end: {
            line: 471,
            column: 49
          }
        },
        loc: {
          start: {
            line: 471,
            column: 57
          },
          end: {
            line: 474,
            column: 13
          }
        },
        line: 471
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 494,
            column: 30
          },
          end: {
            line: 494,
            column: 31
          }
        },
        loc: {
          start: {
            line: 494,
            column: 41
          },
          end: {
            line: 494,
            column: 64
          }
        },
        line: 494
      },
      "53": {
        name: "CustomHead",
        decl: {
          start: {
            line: 502,
            column: 39
          },
          end: {
            line: 502,
            column: 49
          }
        },
        loc: {
          start: {
            line: 502,
            column: 65
          },
          end: {
            line: 504,
            column: 13
          }
        },
        line: 502
      },
      "54": {
        name: "CustomBody",
        decl: {
          start: {
            line: 505,
            column: 39
          },
          end: {
            line: 505,
            column: 49
          }
        },
        loc: {
          start: {
            line: 505,
            column: 68
          },
          end: {
            line: 517,
            column: 13
          }
        },
        line: 505
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 508,
            column: 27
          },
          end: {
            line: 508,
            column: 28
          }
        },
        loc: {
          start: {
            line: 508,
            column: 33
          },
          end: {
            line: 508,
            column: 95
          }
        },
        line: 508
      },
      "56": {
        name: "CustomHead",
        decl: {
          start: {
            line: 526,
            column: 39
          },
          end: {
            line: 526,
            column: 49
          }
        },
        loc: {
          start: {
            line: 526,
            column: 96
          },
          end: {
            line: 535,
            column: 13
          }
        },
        line: 526
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 532,
            column: 26
          },
          end: {
            line: 532,
            column: 27
          }
        },
        loc: {
          start: {
            line: 532,
            column: 32
          },
          end: {
            line: 532,
            column: 49
          }
        },
        line: 532
      },
      "58": {
        name: "CustomHead",
        decl: {
          start: {
            line: 544,
            column: 39
          },
          end: {
            line: 544,
            column: 49
          }
        },
        loc: {
          start: {
            line: 544,
            column: 96
          },
          end: {
            line: 553,
            column: 13
          }
        },
        line: 544
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 550,
            column: 26
          },
          end: {
            line: 550,
            column: 27
          }
        },
        loc: {
          start: {
            line: 550,
            column: 32
          },
          end: {
            line: 550,
            column: 49
          }
        },
        line: 550
      },
      "60": {
        name: "CustomBody",
        decl: {
          start: {
            line: 554,
            column: 39
          },
          end: {
            line: 554,
            column: 49
          }
        },
        loc: {
          start: {
            line: 554,
            column: 55
          },
          end: {
            line: 567,
            column: 13
          }
        },
        line: 554
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 564,
            column: 30
          },
          end: {
            line: 564,
            column: 31
          }
        },
        loc: {
          start: {
            line: 564,
            column: 36
          },
          end: {
            line: 564,
            column: 93
          }
        },
        line: 564
      },
      "62": {
        name: "CustomHead",
        decl: {
          start: {
            line: 575,
            column: 39
          },
          end: {
            line: 575,
            column: 49
          }
        },
        loc: {
          start: {
            line: 575,
            column: 65
          },
          end: {
            line: 577,
            column: 13
          }
        },
        line: 575
      },
      "63": {
        name: "CustomBody",
        decl: {
          start: {
            line: 578,
            column: 39
          },
          end: {
            line: 578,
            column: 49
          }
        },
        loc: {
          start: {
            line: 578,
            column: 57
          },
          end: {
            line: 581,
            column: 13
          }
        },
        line: 578
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 53,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 81
          }
        }, {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 26
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 103,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 82
          }
        }, {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 26
          }
        }],
        line: 101
      },
      "2": {
        loc: {
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 160,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 159,
            column: 81
          }
        }, {
          start: {
            line: 160,
            column: 24
          },
          end: {
            line: 160,
            column: 26
          }
        }],
        line: 158
      },
      "3": {
        loc: {
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 211,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 208,
            column: 26
          }
        }, {
          start: {
            line: 210,
            column: 20
          },
          end: {
            line: 210,
            column: 64
          }
        }],
        line: 197
      },
      "4": {
        loc: {
          start: {
            line: 239,
            column: 20
          },
          end: {
            line: 241,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 24
          },
          end: {
            line: 240,
            column: 82
          }
        }, {
          start: {
            line: 241,
            column: 24
          },
          end: {
            line: 241,
            column: 26
          }
        }],
        line: 239
      },
      "5": {
        loc: {
          start: {
            line: 296,
            column: 20
          },
          end: {
            line: 298,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 297,
            column: 24
          },
          end: {
            line: 297,
            column: 81
          }
        }, {
          start: {
            line: 298,
            column: 24
          },
          end: {
            line: 298,
            column: 26
          }
        }],
        line: 296
      },
      "6": {
        loc: {
          start: {
            line: 346,
            column: 20
          },
          end: {
            line: 348,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 347,
            column: 24
          },
          end: {
            line: 347,
            column: 82
          }
        }, {
          start: {
            line: 348,
            column: 24
          },
          end: {
            line: 348,
            column: 26
          }
        }],
        line: 346
      },
      "7": {
        loc: {
          start: {
            line: 403,
            column: 20
          },
          end: {
            line: 405,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 24
          },
          end: {
            line: 404,
            column: 81
          }
        }, {
          start: {
            line: 405,
            column: 24
          },
          end: {
            line: 405,
            column: 26
          }
        }],
        line: 403
      },
      "8": {
        loc: {
          start: {
            line: 453,
            column: 20
          },
          end: {
            line: 455,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 454,
            column: 24
          },
          end: {
            line: 454,
            column: 82
          }
        }, {
          start: {
            line: 455,
            column: 24
          },
          end: {
            line: 455,
            column: 26
          }
        }],
        line: 453
      },
      "9": {
        loc: {
          start: {
            line: 510,
            column: 20
          },
          end: {
            line: 512,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 511,
            column: 24
          },
          end: {
            line: 511,
            column: 81
          }
        }, {
          start: {
            line: 512,
            column: 24
          },
          end: {
            line: 512,
            column: 26
          }
        }],
        line: 510
      },
      "10": {
        loc: {
          start: {
            line: 560,
            column: 20
          },
          end: {
            line: 562,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 561,
            column: 24
          },
          end: {
            line: 561,
            column: 82
          }
        }, {
          start: {
            line: 562,
            column: 24
          },
          end: {
            line: 562,
            column: 26
          }
        }],
        line: 560
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5f1d3a20db36a43f6f6d5cf7111378b8b28e9568"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vci43w0k9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_vci43w0k9();

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













cov_vci43w0k9().s[0]++;
const SecurityTypesConfig = (switchView, meshSyncResources, k8sConfig, connectionMetadataState) => {
  cov_vci43w0k9().f[0]++;
  const ping = (cov_vci43w0k9().s[1]++, (0,_hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP)());
  cov_vci43w0k9().s[2]++;
  return {
    ServiceAccount: {
      name: 'ServiceAccount',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_vci43w0k9().f[1]++;
            cov_vci43w0k9().s[3]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref) {
            let column = Object.assign({}, _ref);
            cov_vci43w0k9().f[2]++;
            cov_vci43w0k9().s[4]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vci43w0k9().f[3]++;
            cov_vci43w0k9().s[5]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_vci43w0k9().f[4]++;
                cov_vci43w0k9().s[6]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_vci43w0k9().b[0][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_vci43w0k9().b[0][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref2, sortColumn, columnMeta) {
            let {
              index
            } = _ref2,
                column = _objectWithoutProperties(_ref2, _excluded);

            cov_vci43w0k9().f[5]++;
            cov_vci43w0k9().s[7]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[6]++;
                cov_vci43w0k9().s[8]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref3, sortColumn, columnMeta) {
            let {
              index
            } = _ref3,
                column = _objectWithoutProperties(_ref3, _excluded2);

            cov_vci43w0k9().f[7]++;
            cov_vci43w0k9().s[9]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[8]++;
                cov_vci43w0k9().s[10]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vci43w0k9().f[9]++;
            let context = (cov_vci43w0k9().s[11]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_vci43w0k9().s[12]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_vci43w0k9().b[1][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_vci43w0k9().b[1][1]++, ''),
              handlePing: () => {
                cov_vci43w0k9().f[10]++;
                cov_vci43w0k9().s[13]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref4) {
            let column = Object.assign({}, _ref4);
            cov_vci43w0k9().f[11]++;
            cov_vci43w0k9().s[14]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_vci43w0k9().f[12]++;
            let time = (cov_vci43w0k9().s[15]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_vci43w0k9().s[16]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    ClusterRole: {
      name: 'ClusterRole',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_vci43w0k9().f[13]++;
            cov_vci43w0k9().s[17]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref5) {
            let column = Object.assign({}, _ref5);
            cov_vci43w0k9().f[14]++;
            cov_vci43w0k9().s[18]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vci43w0k9().f[15]++;
            cov_vci43w0k9().s[19]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_vci43w0k9().f[16]++;
                cov_vci43w0k9().s[20]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_vci43w0k9().b[2][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_vci43w0k9().b[2][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref6, sortColumn, columnMeta) {
            let {
              index
            } = _ref6,
                column = _objectWithoutProperties(_ref6, _excluded3);

            cov_vci43w0k9().f[17]++;
            cov_vci43w0k9().s[21]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[18]++;
                cov_vci43w0k9().s[22]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref7) {
            let column = Object.assign({}, _ref7);
            cov_vci43w0k9().f[19]++;
            cov_vci43w0k9().s[23]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vci43w0k9().f[20]++;
            cov_vci43w0k9().s[24]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: value ? (cov_vci43w0k9().b[3][0]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
                style: {
                  color: 'inherit',
                  textDecorationLine: 'underline',
                  cursor: 'pointer',
                  marginBottom: '0.5rem'
                },
                onClick: () => {
                  cov_vci43w0k9().f[21]++;
                  cov_vci43w0k9().s[25]++;
                  return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
                },
                children: value
              })) : (cov_vci43w0k9().b[3][1]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
                style: {
                  textAlign: 'center'
                },
                children: "-"
              }))
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref8, sortColumn, columnMeta) {
            let {
              index
            } = _ref8,
                column = _objectWithoutProperties(_ref8, _excluded4);

            cov_vci43w0k9().f[22]++;
            cov_vci43w0k9().s[26]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[23]++;
                cov_vci43w0k9().s[27]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vci43w0k9().f[24]++;
            let context = (cov_vci43w0k9().s[28]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_vci43w0k9().s[29]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_vci43w0k9().b[4][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_vci43w0k9().b[4][1]++, ''),
              handlePing: () => {
                cov_vci43w0k9().f[25]++;
                cov_vci43w0k9().s[30]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref9) {
            let column = Object.assign({}, _ref9);
            cov_vci43w0k9().f[26]++;
            cov_vci43w0k9().s[31]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_vci43w0k9().f[27]++;
            let time = (cov_vci43w0k9().s[32]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_vci43w0k9().s[33]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    Role: {
      name: 'Role',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_vci43w0k9().f[28]++;
            cov_vci43w0k9().s[34]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref10) {
            let column = Object.assign({}, _ref10);
            cov_vci43w0k9().f[29]++;
            cov_vci43w0k9().s[35]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vci43w0k9().f[30]++;
            cov_vci43w0k9().s[36]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_vci43w0k9().f[31]++;
                cov_vci43w0k9().s[37]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_vci43w0k9().b[5][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_vci43w0k9().b[5][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref11, sortColumn, columnMeta) {
            let {
              index
            } = _ref11,
                column = _objectWithoutProperties(_ref11, _excluded5);

            cov_vci43w0k9().f[32]++;
            cov_vci43w0k9().s[38]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[33]++;
                cov_vci43w0k9().s[39]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref12, sortColumn, columnMeta) {
            let {
              index
            } = _ref12,
                column = _objectWithoutProperties(_ref12, _excluded6);

            cov_vci43w0k9().f[34]++;
            cov_vci43w0k9().s[40]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[35]++;
                cov_vci43w0k9().s[41]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vci43w0k9().f[36]++;
            let context = (cov_vci43w0k9().s[42]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_vci43w0k9().s[43]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_vci43w0k9().b[6][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_vci43w0k9().b[6][1]++, ''),
              handlePing: () => {
                cov_vci43w0k9().f[37]++;
                cov_vci43w0k9().s[44]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref13) {
            let column = Object.assign({}, _ref13);
            cov_vci43w0k9().f[38]++;
            cov_vci43w0k9().s[45]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_vci43w0k9().f[39]++;
            let time = (cov_vci43w0k9().s[46]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_vci43w0k9().s[47]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    ClusterRoleBinding: {
      name: 'ClusterRoleBinding',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_vci43w0k9().f[40]++;
            cov_vci43w0k9().s[48]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref14) {
            let column = Object.assign({}, _ref14);
            cov_vci43w0k9().f[41]++;
            cov_vci43w0k9().s[49]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vci43w0k9().f[42]++;
            cov_vci43w0k9().s[50]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_vci43w0k9().f[43]++;
                cov_vci43w0k9().s[51]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_vci43w0k9().b[7][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_vci43w0k9().b[7][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref15, sortColumn, columnMeta) {
            let {
              index
            } = _ref15,
                column = _objectWithoutProperties(_ref15, _excluded7);

            cov_vci43w0k9().f[44]++;
            cov_vci43w0k9().s[52]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[45]++;
                cov_vci43w0k9().s[53]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref16, sortColumn, columnMeta) {
            let {
              index
            } = _ref16,
                column = _objectWithoutProperties(_ref16, _excluded8);

            cov_vci43w0k9().f[46]++;
            cov_vci43w0k9().s[54]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[47]++;
                cov_vci43w0k9().s[55]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vci43w0k9().f[48]++;
            let context = (cov_vci43w0k9().s[56]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_vci43w0k9().s[57]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_vci43w0k9().b[8][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_vci43w0k9().b[8][1]++, ''),
              handlePing: () => {
                cov_vci43w0k9().f[49]++;
                cov_vci43w0k9().s[58]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref17) {
            let column = Object.assign({}, _ref17);
            cov_vci43w0k9().f[50]++;
            cov_vci43w0k9().s[59]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_vci43w0k9().f[51]++;
            let time = (cov_vci43w0k9().s[60]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_vci43w0k9().s[61]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    RoleBinding: {
      name: 'RoleBinding',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_vci43w0k9().f[52]++;
            cov_vci43w0k9().s[62]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref18) {
            let column = Object.assign({}, _ref18);
            cov_vci43w0k9().f[53]++;
            cov_vci43w0k9().s[63]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vci43w0k9().f[54]++;
            cov_vci43w0k9().s[64]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_vci43w0k9().f[55]++;
                cov_vci43w0k9().s[65]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_vci43w0k9().b[9][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_vci43w0k9().b[9][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref19, sortColumn, columnMeta) {
            let {
              index
            } = _ref19,
                column = _objectWithoutProperties(_ref19, _excluded9);

            cov_vci43w0k9().f[56]++;
            cov_vci43w0k9().s[66]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[57]++;
                cov_vci43w0k9().s[67]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref20, sortColumn, columnMeta) {
            let {
              index
            } = _ref20,
                column = _objectWithoutProperties(_ref20, _excluded10);

            cov_vci43w0k9().f[58]++;
            cov_vci43w0k9().s[68]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vci43w0k9().f[59]++;
                cov_vci43w0k9().s[69]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vci43w0k9().f[60]++;
            let context = (cov_vci43w0k9().s[70]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_vci43w0k9().s[71]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_vci43w0k9().b[10][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_vci43w0k9().b[10][1]++, ''),
              handlePing: () => {
                cov_vci43w0k9().f[61]++;
                cov_vci43w0k9().s[72]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref21) {
            let column = Object.assign({}, _ref21);
            cov_vci43w0k9().f[62]++;
            cov_vci43w0k9().s[73]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_vci43w0k9().f[63]++;
            let time = (cov_vci43w0k9().s[74]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_vci43w0k9().s[75]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    }
  };
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 63471:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "V": () => (/* binding */ DefaultTableCell),
/* harmony export */   "k": () => (/* binding */ SortableTableCell)
/* harmony export */ });
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);
function cov_1sjphletaa() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/sortable-table-cell.js";
  var hash = "d22e57d41734326fdc2f966caa3cceac2a593932";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/sortable-table-cell.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 33
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "1": {
        start: {
          line: 4,
          column: 2
        },
        end: {
          line: 27,
          column: 4
        }
      },
      "2": {
        start: {
          line: 30,
          column: 32
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "3": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 50,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 33
          },
          end: {
            line: 3,
            column: 34
          }
        },
        loc: {
          start: {
            line: 3,
            column: 95
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 67
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 11
          },
          end: {
            line: 19,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 16,
            column: 22
          }
        }, {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 14
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 41
          }
        }, {
          start: {
            line: 23,
            column: 45
          },
          end: {
            line: 23,
            column: 50
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 46,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 43,
            column: 22
          }
        }, {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 14
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 39,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 38
          },
          end: {
            line: 39,
            column: 45
          }
        }, {
          start: {
            line: 39,
            column: 48
          },
          end: {
            line: 39,
            column: 50
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d22e57d41734326fdc2f966caa3cceac2a593932"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sjphletaa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1sjphletaa();



cov_1sjphletaa().s[0]++;
const SortableTableCell = ({
  index,
  columnData,
  columnMeta,
  onSort,
  icon,
  tooltip
}) => {
  cov_1sjphletaa().f[0]++;
  cov_1sjphletaa().s[1]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.TableCell, {
    onClick: onSort,
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Grid, {
      style: {
        display: 'flex'
      },
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Grid, {
        style: {
          display: 'flex',
          alignItems: 'center'
        },
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Typography, {
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("b", {
            children: columnData.label
          })
        }), icon ? (cov_1sjphletaa().b[0][0]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Tooltip, {
          title: tooltip,
          placement: "top",
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Typography, {
            style: {
              display: 'flex',
              marginLeft: '2px'
            },
            variant: "span",
            children: icon
          })
        })) : (cov_1sjphletaa().b[0][1]++, '')]
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.TableSortLabel, {
        active: columnMeta.name === columnData.name,
        direction: (cov_1sjphletaa().b[1][0]++, columnMeta.direction) || (cov_1sjphletaa().b[1][1]++, 'asc')
      })]
    })
  }, index);
};
cov_1sjphletaa().s[2]++;
const DefaultTableCell = ({
  columnData,
  icon,
  tooltip
}) => {
  cov_1sjphletaa().f[1]++;
  cov_1sjphletaa().s[3]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.TableCell, {
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Grid, {
      style: {
        display: 'flex'
      },
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Grid, {
        style: {
          display: 'flex',
          alignItems: 'center'
        },
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Typography, {
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("b", {
            children: columnData.label
          })
        }), icon ? (cov_1sjphletaa().b[2][0]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Tooltip, {
          title: tooltip ? (cov_1sjphletaa().b[3][0]++, tooltip) : (cov_1sjphletaa().b[3][1]++, ''),
          placement: "top",
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Typography, {
            style: {
              display: 'flex',
              marginLeft: '5px'
            },
            variant: "span",
            children: icon
          })
        })) : (cov_1sjphletaa().b[2][1]++, '')]
      })
    })
  });
};

/***/ }),

/***/ 38928:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "h": () => (/* binding */ StorageTableConfig)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59077);
/* harmony import */ var _utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7806);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96467);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88767);
/* harmony import */ var _connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16845);
/* harmony import */ var _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22921);
/* harmony import */ var _sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63471);
/* harmony import */ var _utils_Enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(46811);
/* harmony import */ var _components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(38409);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__]);
([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
const _excluded = ["index"],
      _excluded2 = ["index"],
      _excluded3 = ["index"],
      _excluded4 = ["index"],
      _excluded5 = ["index"],
      _excluded6 = ["index"];

function cov_vbovrm2xg() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/storage/config.js";
  var hash = "6c85864279e878a5e3fcdef95b63d3c88251421b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/storage/config.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 454,
          column: 1
        }
      },
      "1": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "2": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 453,
          column: 4
        }
      },
      "3": {
        start: {
          line: 39,
          column: 41
        },
        end: {
          line: 39,
          column: 64
        }
      },
      "4": {
        start: {
          line: 48,
          column: 14
        },
        end: {
          line: 48,
          column: 62
        }
      },
      "5": {
        start: {
          line: 51,
          column: 14
        },
        end: {
          line: 61,
          column: 16
        }
      },
      "6": {
        start: {
          line: 53,
          column: 33
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "7": {
        start: {
          line: 72,
          column: 14
        },
        end: {
          line: 79,
          column: 16
        }
      },
      "8": {
        start: {
          line: 77,
          column: 32
        },
        end: {
          line: 77,
          column: 49
        }
      },
      "9": {
        start: {
          line: 89,
          column: 14
        },
        end: {
          line: 89,
          column: 62
        }
      },
      "10": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 45
        }
      },
      "11": {
        start: {
          line: 93,
          column: 37
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "12": {
        start: {
          line: 94,
          column: 14
        },
        end: {
          line: 94,
          column: 45
        }
      },
      "13": {
        start: {
          line: 104,
          column: 14
        },
        end: {
          line: 104,
          column: 62
        }
      },
      "14": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 107,
          column: 45
        }
      },
      "15": {
        start: {
          line: 108,
          column: 29
        },
        end: {
          line: 108,
          column: 48
        }
      },
      "16": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 45
        }
      },
      "17": {
        start: {
          line: 110,
          column: 14
        },
        end: {
          line: 110,
          column: 36
        }
      },
      "18": {
        start: {
          line: 120,
          column: 14
        },
        end: {
          line: 120,
          column: 62
        }
      },
      "19": {
        start: {
          line: 123,
          column: 30
        },
        end: {
          line: 123,
          column: 45
        }
      },
      "20": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 124,
          column: 42
        }
      },
      "21": {
        start: {
          line: 125,
          column: 14
        },
        end: {
          line: 125,
          column: 34
        }
      },
      "22": {
        start: {
          line: 136,
          column: 14
        },
        end: {
          line: 143,
          column: 16
        }
      },
      "23": {
        start: {
          line: 141,
          column: 32
        },
        end: {
          line: 141,
          column: 49
        }
      },
      "24": {
        start: {
          line: 146,
          column: 28
        },
        end: {
          line: 146,
          column: 70
        }
      },
      "25": {
        start: {
          line: 147,
          column: 14
        },
        end: {
          line: 159,
          column: 16
        }
      },
      "26": {
        start: {
          line: 156,
          column: 38
        },
        end: {
          line: 156,
          column: 95
        }
      },
      "27": {
        start: {
          line: 169,
          column: 14
        },
        end: {
          line: 169,
          column: 62
        }
      },
      "28": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 172,
          column: 39
        }
      },
      "29": {
        start: {
          line: 173,
          column: 14
        },
        end: {
          line: 173,
          column: 33
        }
      },
      "30": {
        start: {
          line: 197,
          column: 41
        },
        end: {
          line: 197,
          column: 64
        }
      },
      "31": {
        start: {
          line: 206,
          column: 14
        },
        end: {
          line: 206,
          column: 62
        }
      },
      "32": {
        start: {
          line: 209,
          column: 14
        },
        end: {
          line: 219,
          column: 16
        }
      },
      "33": {
        start: {
          line: 211,
          column: 33
        },
        end: {
          line: 211,
          column: 95
        }
      },
      "34": {
        start: {
          line: 230,
          column: 14
        },
        end: {
          line: 237,
          column: 16
        }
      },
      "35": {
        start: {
          line: 235,
          column: 32
        },
        end: {
          line: 235,
          column: 49
        }
      },
      "36": {
        start: {
          line: 247,
          column: 14
        },
        end: {
          line: 247,
          column: 62
        }
      },
      "37": {
        start: {
          line: 250,
          column: 30
        },
        end: {
          line: 250,
          column: 45
        }
      },
      "38": {
        start: {
          line: 251,
          column: 37
        },
        end: {
          line: 251,
          column: 64
        }
      },
      "39": {
        start: {
          line: 252,
          column: 14
        },
        end: {
          line: 252,
          column: 45
        }
      },
      "40": {
        start: {
          line: 262,
          column: 14
        },
        end: {
          line: 262,
          column: 62
        }
      },
      "41": {
        start: {
          line: 265,
          column: 30
        },
        end: {
          line: 265,
          column: 45
        }
      },
      "42": {
        start: {
          line: 266,
          column: 30
        },
        end: {
          line: 266,
          column: 50
        }
      },
      "43": {
        start: {
          line: 267,
          column: 29
        },
        end: {
          line: 267,
          column: 48
        }
      },
      "44": {
        start: {
          line: 268,
          column: 28
        },
        end: {
          line: 268,
          column: 45
        }
      },
      "45": {
        start: {
          line: 269,
          column: 14
        },
        end: {
          line: 269,
          column: 36
        }
      },
      "46": {
        start: {
          line: 279,
          column: 14
        },
        end: {
          line: 279,
          column: 62
        }
      },
      "47": {
        start: {
          line: 282,
          column: 30
        },
        end: {
          line: 282,
          column: 45
        }
      },
      "48": {
        start: {
          line: 283,
          column: 26
        },
        end: {
          line: 283,
          column: 42
        }
      },
      "49": {
        start: {
          line: 284,
          column: 14
        },
        end: {
          line: 284,
          column: 34
        }
      },
      "50": {
        start: {
          line: 294,
          column: 14
        },
        end: {
          line: 294,
          column: 62
        }
      },
      "51": {
        start: {
          line: 305,
          column: 14
        },
        end: {
          line: 312,
          column: 16
        }
      },
      "52": {
        start: {
          line: 310,
          column: 32
        },
        end: {
          line: 310,
          column: 49
        }
      },
      "53": {
        start: {
          line: 315,
          column: 28
        },
        end: {
          line: 315,
          column: 70
        }
      },
      "54": {
        start: {
          line: 316,
          column: 14
        },
        end: {
          line: 326,
          column: 16
        }
      },
      "55": {
        start: {
          line: 324,
          column: 36
        },
        end: {
          line: 324,
          column: 93
        }
      },
      "56": {
        start: {
          line: 336,
          column: 14
        },
        end: {
          line: 336,
          column: 62
        }
      },
      "57": {
        start: {
          line: 339,
          column: 25
        },
        end: {
          line: 339,
          column: 39
        }
      },
      "58": {
        start: {
          line: 340,
          column: 14
        },
        end: {
          line: 340,
          column: 33
        }
      },
      "59": {
        start: {
          line: 361,
          column: 41
        },
        end: {
          line: 361,
          column: 64
        }
      },
      "60": {
        start: {
          line: 370,
          column: 14
        },
        end: {
          line: 370,
          column: 62
        }
      },
      "61": {
        start: {
          line: 373,
          column: 14
        },
        end: {
          line: 383,
          column: 16
        }
      },
      "62": {
        start: {
          line: 375,
          column: 33
        },
        end: {
          line: 375,
          column: 95
        }
      },
      "63": {
        start: {
          line: 394,
          column: 14
        },
        end: {
          line: 401,
          column: 16
        }
      },
      "64": {
        start: {
          line: 399,
          column: 32
        },
        end: {
          line: 399,
          column: 49
        }
      },
      "65": {
        start: {
          line: 412,
          column: 14
        },
        end: {
          line: 419,
          column: 16
        }
      },
      "66": {
        start: {
          line: 417,
          column: 32
        },
        end: {
          line: 417,
          column: 49
        }
      },
      "67": {
        start: {
          line: 422,
          column: 28
        },
        end: {
          line: 422,
          column: 70
        }
      },
      "68": {
        start: {
          line: 423,
          column: 14
        },
        end: {
          line: 433,
          column: 16
        }
      },
      "69": {
        start: {
          line: 431,
          column: 36
        },
        end: {
          line: 431,
          column: 93
        }
      },
      "70": {
        start: {
          line: 443,
          column: 14
        },
        end: {
          line: 443,
          column: 62
        }
      },
      "71": {
        start: {
          line: 446,
          column: 25
        },
        end: {
          line: 446,
          column: 39
        }
      },
      "72": {
        start: {
          line: 447,
          column: 14
        },
        end: {
          line: 447,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 35
          }
        },
        loc: {
          start: {
            line: 18,
            column: 5
          },
          end: {
            line: 454,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 39,
            column: 31
          }
        },
        loc: {
          start: {
            line: 39,
            column: 41
          },
          end: {
            line: 39,
            column: 64
          }
        },
        line: 39
      },
      "2": {
        name: "CustomHead",
        decl: {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 47,
            column: 49
          }
        },
        loc: {
          start: {
            line: 47,
            column: 65
          },
          end: {
            line: 49,
            column: 13
          }
        },
        line: 47
      },
      "3": {
        name: "CustomBody",
        decl: {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 50,
            column: 49
          }
        },
        loc: {
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 62,
            column: 13
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 27
          },
          end: {
            line: 53,
            column: 28
          }
        },
        loc: {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 53,
            column: 95
          }
        },
        line: 53
      },
      "5": {
        name: "CustomHead",
        decl: {
          start: {
            line: 71,
            column: 39
          },
          end: {
            line: 71,
            column: 49
          }
        },
        loc: {
          start: {
            line: 71,
            column: 96
          },
          end: {
            line: 80,
            column: 13
          }
        },
        line: 71
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 26
          },
          end: {
            line: 77,
            column: 27
          }
        },
        loc: {
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 49
          }
        },
        line: 77
      },
      "7": {
        name: "CustomHead",
        decl: {
          start: {
            line: 88,
            column: 39
          },
          end: {
            line: 88,
            column: 49
          }
        },
        loc: {
          start: {
            line: 88,
            column: 65
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 88
      },
      "8": {
        name: "CustomBody",
        decl: {
          start: {
            line: 91,
            column: 39
          },
          end: {
            line: 91,
            column: 49
          }
        },
        loc: {
          start: {
            line: 91,
            column: 55
          },
          end: {
            line: 95,
            column: 13
          }
        },
        line: 91
      },
      "9": {
        name: "CustomHead",
        decl: {
          start: {
            line: 103,
            column: 39
          },
          end: {
            line: 103,
            column: 49
          }
        },
        loc: {
          start: {
            line: 103,
            column: 65
          },
          end: {
            line: 105,
            column: 13
          }
        },
        line: 103
      },
      "10": {
        name: "CustomBody",
        decl: {
          start: {
            line: 106,
            column: 39
          },
          end: {
            line: 106,
            column: 49
          }
        },
        loc: {
          start: {
            line: 106,
            column: 55
          },
          end: {
            line: 111,
            column: 13
          }
        },
        line: 106
      },
      "11": {
        name: "CustomHead",
        decl: {
          start: {
            line: 119,
            column: 39
          },
          end: {
            line: 119,
            column: 49
          }
        },
        loc: {
          start: {
            line: 119,
            column: 65
          },
          end: {
            line: 121,
            column: 13
          }
        },
        line: 119
      },
      "12": {
        name: "CustomBody",
        decl: {
          start: {
            line: 122,
            column: 39
          },
          end: {
            line: 122,
            column: 49
          }
        },
        loc: {
          start: {
            line: 122,
            column: 55
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 122
      },
      "13": {
        name: "CustomHead",
        decl: {
          start: {
            line: 135,
            column: 39
          },
          end: {
            line: 135,
            column: 49
          }
        },
        loc: {
          start: {
            line: 135,
            column: 96
          },
          end: {
            line: 144,
            column: 13
          }
        },
        line: 135
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 141,
            column: 26
          },
          end: {
            line: 141,
            column: 27
          }
        },
        loc: {
          start: {
            line: 141,
            column: 32
          },
          end: {
            line: 141,
            column: 49
          }
        },
        line: 141
      },
      "15": {
        name: "CustomBody",
        decl: {
          start: {
            line: 145,
            column: 39
          },
          end: {
            line: 145,
            column: 49
          }
        },
        loc: {
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 160,
            column: 13
          }
        },
        line: 145
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 156,
            column: 33
          }
        },
        loc: {
          start: {
            line: 156,
            column: 38
          },
          end: {
            line: 156,
            column: 95
          }
        },
        line: 156
      },
      "17": {
        name: "CustomHead",
        decl: {
          start: {
            line: 168,
            column: 39
          },
          end: {
            line: 168,
            column: 49
          }
        },
        loc: {
          start: {
            line: 168,
            column: 65
          },
          end: {
            line: 170,
            column: 13
          }
        },
        line: 168
      },
      "18": {
        name: "CustomBody",
        decl: {
          start: {
            line: 171,
            column: 39
          },
          end: {
            line: 171,
            column: 49
          }
        },
        loc: {
          start: {
            line: 171,
            column: 57
          },
          end: {
            line: 174,
            column: 13
          }
        },
        line: 171
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 197,
            column: 30
          },
          end: {
            line: 197,
            column: 31
          }
        },
        loc: {
          start: {
            line: 197,
            column: 41
          },
          end: {
            line: 197,
            column: 64
          }
        },
        line: 197
      },
      "20": {
        name: "CustomHead",
        decl: {
          start: {
            line: 205,
            column: 39
          },
          end: {
            line: 205,
            column: 49
          }
        },
        loc: {
          start: {
            line: 205,
            column: 65
          },
          end: {
            line: 207,
            column: 13
          }
        },
        line: 205
      },
      "21": {
        name: "CustomBody",
        decl: {
          start: {
            line: 208,
            column: 39
          },
          end: {
            line: 208,
            column: 49
          }
        },
        loc: {
          start: {
            line: 208,
            column: 68
          },
          end: {
            line: 220,
            column: 13
          }
        },
        line: 208
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 211,
            column: 28
          }
        },
        loc: {
          start: {
            line: 211,
            column: 33
          },
          end: {
            line: 211,
            column: 95
          }
        },
        line: 211
      },
      "23": {
        name: "CustomHead",
        decl: {
          start: {
            line: 229,
            column: 39
          },
          end: {
            line: 229,
            column: 49
          }
        },
        loc: {
          start: {
            line: 229,
            column: 96
          },
          end: {
            line: 238,
            column: 13
          }
        },
        line: 229
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 235,
            column: 26
          },
          end: {
            line: 235,
            column: 27
          }
        },
        loc: {
          start: {
            line: 235,
            column: 32
          },
          end: {
            line: 235,
            column: 49
          }
        },
        line: 235
      },
      "25": {
        name: "CustomHead",
        decl: {
          start: {
            line: 246,
            column: 39
          },
          end: {
            line: 246,
            column: 49
          }
        },
        loc: {
          start: {
            line: 246,
            column: 65
          },
          end: {
            line: 248,
            column: 13
          }
        },
        line: 246
      },
      "26": {
        name: "CustomBody",
        decl: {
          start: {
            line: 249,
            column: 39
          },
          end: {
            line: 249,
            column: 49
          }
        },
        loc: {
          start: {
            line: 249,
            column: 55
          },
          end: {
            line: 253,
            column: 13
          }
        },
        line: 249
      },
      "27": {
        name: "CustomHead",
        decl: {
          start: {
            line: 261,
            column: 39
          },
          end: {
            line: 261,
            column: 49
          }
        },
        loc: {
          start: {
            line: 261,
            column: 65
          },
          end: {
            line: 263,
            column: 13
          }
        },
        line: 261
      },
      "28": {
        name: "CustomBody",
        decl: {
          start: {
            line: 264,
            column: 39
          },
          end: {
            line: 264,
            column: 49
          }
        },
        loc: {
          start: {
            line: 264,
            column: 55
          },
          end: {
            line: 270,
            column: 13
          }
        },
        line: 264
      },
      "29": {
        name: "CustomHead",
        decl: {
          start: {
            line: 278,
            column: 39
          },
          end: {
            line: 278,
            column: 49
          }
        },
        loc: {
          start: {
            line: 278,
            column: 65
          },
          end: {
            line: 280,
            column: 13
          }
        },
        line: 278
      },
      "30": {
        name: "CustomBody",
        decl: {
          start: {
            line: 281,
            column: 39
          },
          end: {
            line: 281,
            column: 49
          }
        },
        loc: {
          start: {
            line: 281,
            column: 55
          },
          end: {
            line: 285,
            column: 13
          }
        },
        line: 281
      },
      "31": {
        name: "CustomHead",
        decl: {
          start: {
            line: 293,
            column: 39
          },
          end: {
            line: 293,
            column: 49
          }
        },
        loc: {
          start: {
            line: 293,
            column: 65
          },
          end: {
            line: 295,
            column: 13
          }
        },
        line: 293
      },
      "32": {
        name: "CustomHead",
        decl: {
          start: {
            line: 304,
            column: 39
          },
          end: {
            line: 304,
            column: 49
          }
        },
        loc: {
          start: {
            line: 304,
            column: 96
          },
          end: {
            line: 313,
            column: 13
          }
        },
        line: 304
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 310,
            column: 26
          },
          end: {
            line: 310,
            column: 27
          }
        },
        loc: {
          start: {
            line: 310,
            column: 32
          },
          end: {
            line: 310,
            column: 49
          }
        },
        line: 310
      },
      "34": {
        name: "CustomBody",
        decl: {
          start: {
            line: 314,
            column: 39
          },
          end: {
            line: 314,
            column: 49
          }
        },
        loc: {
          start: {
            line: 314,
            column: 55
          },
          end: {
            line: 327,
            column: 13
          }
        },
        line: 314
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 324,
            column: 30
          },
          end: {
            line: 324,
            column: 31
          }
        },
        loc: {
          start: {
            line: 324,
            column: 36
          },
          end: {
            line: 324,
            column: 93
          }
        },
        line: 324
      },
      "36": {
        name: "CustomHead",
        decl: {
          start: {
            line: 335,
            column: 39
          },
          end: {
            line: 335,
            column: 49
          }
        },
        loc: {
          start: {
            line: 335,
            column: 65
          },
          end: {
            line: 337,
            column: 13
          }
        },
        line: 335
      },
      "37": {
        name: "CustomBody",
        decl: {
          start: {
            line: 338,
            column: 39
          },
          end: {
            line: 338,
            column: 49
          }
        },
        loc: {
          start: {
            line: 338,
            column: 57
          },
          end: {
            line: 341,
            column: 13
          }
        },
        line: 338
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 361,
            column: 30
          },
          end: {
            line: 361,
            column: 31
          }
        },
        loc: {
          start: {
            line: 361,
            column: 41
          },
          end: {
            line: 361,
            column: 64
          }
        },
        line: 361
      },
      "39": {
        name: "CustomHead",
        decl: {
          start: {
            line: 369,
            column: 39
          },
          end: {
            line: 369,
            column: 49
          }
        },
        loc: {
          start: {
            line: 369,
            column: 65
          },
          end: {
            line: 371,
            column: 13
          }
        },
        line: 369
      },
      "40": {
        name: "CustomBody",
        decl: {
          start: {
            line: 372,
            column: 39
          },
          end: {
            line: 372,
            column: 49
          }
        },
        loc: {
          start: {
            line: 372,
            column: 68
          },
          end: {
            line: 384,
            column: 13
          }
        },
        line: 372
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 375,
            column: 27
          },
          end: {
            line: 375,
            column: 28
          }
        },
        loc: {
          start: {
            line: 375,
            column: 33
          },
          end: {
            line: 375,
            column: 95
          }
        },
        line: 375
      },
      "42": {
        name: "CustomHead",
        decl: {
          start: {
            line: 393,
            column: 39
          },
          end: {
            line: 393,
            column: 49
          }
        },
        loc: {
          start: {
            line: 393,
            column: 96
          },
          end: {
            line: 402,
            column: 13
          }
        },
        line: 393
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 399,
            column: 26
          },
          end: {
            line: 399,
            column: 27
          }
        },
        loc: {
          start: {
            line: 399,
            column: 32
          },
          end: {
            line: 399,
            column: 49
          }
        },
        line: 399
      },
      "44": {
        name: "CustomHead",
        decl: {
          start: {
            line: 411,
            column: 39
          },
          end: {
            line: 411,
            column: 49
          }
        },
        loc: {
          start: {
            line: 411,
            column: 96
          },
          end: {
            line: 420,
            column: 13
          }
        },
        line: 411
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 417,
            column: 26
          },
          end: {
            line: 417,
            column: 27
          }
        },
        loc: {
          start: {
            line: 417,
            column: 32
          },
          end: {
            line: 417,
            column: 49
          }
        },
        line: 417
      },
      "46": {
        name: "CustomBody",
        decl: {
          start: {
            line: 421,
            column: 39
          },
          end: {
            line: 421,
            column: 49
          }
        },
        loc: {
          start: {
            line: 421,
            column: 55
          },
          end: {
            line: 434,
            column: 13
          }
        },
        line: 421
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 431,
            column: 30
          },
          end: {
            line: 431,
            column: 31
          }
        },
        loc: {
          start: {
            line: 431,
            column: 36
          },
          end: {
            line: 431,
            column: 93
          }
        },
        line: 431
      },
      "48": {
        name: "CustomHead",
        decl: {
          start: {
            line: 442,
            column: 39
          },
          end: {
            line: 442,
            column: 49
          }
        },
        loc: {
          start: {
            line: 442,
            column: 65
          },
          end: {
            line: 444,
            column: 13
          }
        },
        line: 442
      },
      "49": {
        name: "CustomBody",
        decl: {
          start: {
            line: 445,
            column: 39
          },
          end: {
            line: 445,
            column: 49
          }
        },
        loc: {
          start: {
            line: 445,
            column: 57
          },
          end: {
            line: 448,
            column: 13
          }
        },
        line: 445
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 57,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 24
          },
          end: {
            line: 56,
            column: 81
          }
        }, {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 26
          }
        }],
        line: 55
      },
      "1": {
        loc: {
          start: {
            line: 152,
            column: 22
          },
          end: {
            line: 154,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 84
          }
        }, {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 28
          }
        }],
        line: 152
      },
      "2": {
        loc: {
          start: {
            line: 213,
            column: 20
          },
          end: {
            line: 215,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 24
          },
          end: {
            line: 214,
            column: 81
          }
        }, {
          start: {
            line: 215,
            column: 24
          },
          end: {
            line: 215,
            column: 26
          }
        }],
        line: 213
      },
      "3": {
        loc: {
          start: {
            line: 320,
            column: 20
          },
          end: {
            line: 322,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 321,
            column: 24
          },
          end: {
            line: 321,
            column: 82
          }
        }, {
          start: {
            line: 322,
            column: 24
          },
          end: {
            line: 322,
            column: 26
          }
        }],
        line: 320
      },
      "4": {
        loc: {
          start: {
            line: 377,
            column: 20
          },
          end: {
            line: 379,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 378,
            column: 24
          },
          end: {
            line: 378,
            column: 81
          }
        }, {
          start: {
            line: 379,
            column: 24
          },
          end: {
            line: 379,
            column: 26
          }
        }],
        line: 377
      },
      "5": {
        loc: {
          start: {
            line: 427,
            column: 20
          },
          end: {
            line: 429,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 428,
            column: 24
          },
          end: {
            line: 428,
            column: 82
          }
        }, {
          start: {
            line: 429,
            column: 24
          },
          end: {
            line: 429,
            column: 26
          }
        }],
        line: 427
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6c85864279e878a5e3fcdef95b63d3c88251421b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vbovrm2xg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_vbovrm2xg();

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













cov_vbovrm2xg().s[0]++;
const StorageTableConfig = (switchView, meshSyncResources, k8sConfig, connectionMetadataState) => {
  cov_vbovrm2xg().f[0]++;
  const ping = (cov_vbovrm2xg().s[1]++, (0,_hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP)());
  cov_vbovrm2xg().s[2]++;
  return {
    PersistentVolume: {
      name: 'PersistentVolume',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 's'], ['spec.attribute', 's'], ['status.attribute', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_vbovrm2xg().f[1]++;
            cov_vbovrm2xg().s[3]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref) {
            let column = Object.assign({}, _ref);
            cov_vbovrm2xg().f[2]++;
            cov_vbovrm2xg().s[4]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vbovrm2xg().f[3]++;
            cov_vbovrm2xg().s[5]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_vbovrm2xg().f[4]++;
                cov_vbovrm2xg().s[6]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_vbovrm2xg().b[0][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_vbovrm2xg().b[0][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref2, sortColumn, columnMeta) {
            let {
              index
            } = _ref2,
                column = _objectWithoutProperties(_ref2, _excluded);

            cov_vbovrm2xg().f[5]++;
            cov_vbovrm2xg().s[7]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vbovrm2xg().f[6]++;
                cov_vbovrm2xg().s[8]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Storage Class',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref3) {
            let column = Object.assign({}, _ref3);
            cov_vbovrm2xg().f[7]++;
            cov_vbovrm2xg().s[9]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[8]++;
            let attribute = (cov_vbovrm2xg().s[10]++, JSON.parse(val));
            let storageClassName = (cov_vbovrm2xg().s[11]++, attribute?.StorageClassName);
            cov_vbovrm2xg().s[12]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: storageClassName
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Capacity',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref4) {
            let column = Object.assign({}, _ref4);
            cov_vbovrm2xg().f[9]++;
            cov_vbovrm2xg().s[13]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[10]++;
            let attribute = (cov_vbovrm2xg().s[14]++, JSON.parse(val));
            let capacity = (cov_vbovrm2xg().s[15]++, attribute?.capacity);
            let storage = (cov_vbovrm2xg().s[16]++, capacity?.storage);
            cov_vbovrm2xg().s[17]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: storage
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Status',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref5) {
            let column = Object.assign({}, _ref5);
            cov_vbovrm2xg().f[11]++;
            cov_vbovrm2xg().s[18]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[12]++;
            let attribute = (cov_vbovrm2xg().s[19]++, JSON.parse(val));
            let phase = (cov_vbovrm2xg().s[20]++, attribute?.phase);
            cov_vbovrm2xg().s[21]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: phase
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref6, sortColumn, columnMeta) {
            let {
              index
            } = _ref6,
                column = _objectWithoutProperties(_ref6, _excluded2);

            cov_vbovrm2xg().f[13]++;
            cov_vbovrm2xg().s[22]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vbovrm2xg().f[14]++;
                cov_vbovrm2xg().s[23]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[15]++;
            let context = (cov_vbovrm2xg().s[24]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_vbovrm2xg().s[25]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
                title: context.name,
                iconSrc: connectionMetadataState ? (cov_vbovrm2xg().b[1][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_vbovrm2xg().b[1][1]++, ''),
                handlePing: () => {
                  cov_vbovrm2xg().f[16]++;
                  cov_vbovrm2xg().s[26]++;
                  return ping(context.name, context.server, context.connection_id);
                }
              })
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref7) {
            let column = Object.assign({}, _ref7);
            cov_vbovrm2xg().f[17]++;
            cov_vbovrm2xg().s[27]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_vbovrm2xg().f[18]++;
            let time = (cov_vbovrm2xg().s[28]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_vbovrm2xg().s[29]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    PersistentVolumeClaim: {
      name: 'PersistentVolumeClaim',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 's'], ['spec.attribute', 's'], ['status.attribute', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_vbovrm2xg().f[19]++;
            cov_vbovrm2xg().s[30]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref8) {
            let column = Object.assign({}, _ref8);
            cov_vbovrm2xg().f[20]++;
            cov_vbovrm2xg().s[31]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vbovrm2xg().f[21]++;
            cov_vbovrm2xg().s[32]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_vbovrm2xg().f[22]++;
                cov_vbovrm2xg().s[33]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_vbovrm2xg().b[2][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_vbovrm2xg().b[2][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref9, sortColumn, columnMeta) {
            let {
              index
            } = _ref9,
                column = _objectWithoutProperties(_ref9, _excluded3);

            cov_vbovrm2xg().f[23]++;
            cov_vbovrm2xg().s[34]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vbovrm2xg().f[24]++;
                cov_vbovrm2xg().s[35]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Storage Class',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref10) {
            let column = Object.assign({}, _ref10);
            cov_vbovrm2xg().f[25]++;
            cov_vbovrm2xg().s[36]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[26]++;
            let attribute = (cov_vbovrm2xg().s[37]++, JSON.parse(val));
            let storageClassName = (cov_vbovrm2xg().s[38]++, attribute?.StorageClassName);
            cov_vbovrm2xg().s[39]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: storageClassName
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Size',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref11) {
            let column = Object.assign({}, _ref11);
            cov_vbovrm2xg().f[27]++;
            cov_vbovrm2xg().s[40]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[28]++;
            let attribute = (cov_vbovrm2xg().s[41]++, JSON.parse(val));
            let resources = (cov_vbovrm2xg().s[42]++, attribute?.resources);
            let requests = (cov_vbovrm2xg().s[43]++, resources?.requests);
            let storage = (cov_vbovrm2xg().s[44]++, requests?.storage);
            cov_vbovrm2xg().s[45]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: storage
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Status',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref12) {
            let column = Object.assign({}, _ref12);
            cov_vbovrm2xg().f[29]++;
            cov_vbovrm2xg().s[46]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[30]++;
            let attribute = (cov_vbovrm2xg().s[47]++, JSON.parse(val));
            let phase = (cov_vbovrm2xg().s[48]++, attribute?.phase);
            cov_vbovrm2xg().s[49]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: phase
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref13) {
            let column = Object.assign({}, _ref13);
            cov_vbovrm2xg().f[31]++;
            cov_vbovrm2xg().s[50]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref14, sortColumn, columnMeta) {
            let {
              index
            } = _ref14,
                column = _objectWithoutProperties(_ref14, _excluded4);

            cov_vbovrm2xg().f[32]++;
            cov_vbovrm2xg().s[51]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vbovrm2xg().f[33]++;
                cov_vbovrm2xg().s[52]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[34]++;
            let context = (cov_vbovrm2xg().s[53]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_vbovrm2xg().s[54]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_vbovrm2xg().b[3][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_vbovrm2xg().b[3][1]++, ''),
              handlePing: () => {
                cov_vbovrm2xg().f[35]++;
                cov_vbovrm2xg().s[55]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref15) {
            let column = Object.assign({}, _ref15);
            cov_vbovrm2xg().f[36]++;
            cov_vbovrm2xg().s[56]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_vbovrm2xg().f[37]++;
            let time = (cov_vbovrm2xg().s[57]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_vbovrm2xg().s[58]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    StorageClass: {
      name: 'StorageClass',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_vbovrm2xg().f[38]++;
            cov_vbovrm2xg().s[59]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_9__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref16) {
            let column = Object.assign({}, _ref16);
            cov_vbovrm2xg().f[39]++;
            cov_vbovrm2xg().s[60]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_vbovrm2xg().f[40]++;
            cov_vbovrm2xg().s[61]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_vbovrm2xg().f[41]++;
                cov_vbovrm2xg().s[62]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_vbovrm2xg().b[4][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_vbovrm2xg().b[4][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref17, sortColumn, columnMeta) {
            let {
              index
            } = _ref17,
                column = _objectWithoutProperties(_ref17, _excluded5);

            cov_vbovrm2xg().f[42]++;
            cov_vbovrm2xg().s[63]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vbovrm2xg().f[43]++;
                cov_vbovrm2xg().s[64]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref18, sortColumn, columnMeta) {
            let {
              index
            } = _ref18,
                column = _objectWithoutProperties(_ref18, _excluded6);

            cov_vbovrm2xg().f[44]++;
            cov_vbovrm2xg().s[65]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_vbovrm2xg().f[45]++;
                cov_vbovrm2xg().s[66]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_vbovrm2xg().f[46]++;
            let context = (cov_vbovrm2xg().s[67]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_vbovrm2xg().s[68]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_vbovrm2xg().b[5][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_8__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_vbovrm2xg().b[5][1]++, ''),
              handlePing: () => {
                cov_vbovrm2xg().f[47]++;
                cov_vbovrm2xg().s[69]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref19) {
            let column = Object.assign({}, _ref19);
            cov_vbovrm2xg().f[48]++;
            cov_vbovrm2xg().s[70]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_7__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_vbovrm2xg().f[49]++;
            let time = (cov_vbovrm2xg().s[71]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_vbovrm2xg().s[72]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: time
            });
          }
        }
      }]
    }
  };
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 40181:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ WorkloadTableConfig)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59077);
/* harmony import */ var _utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7806);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(96467);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88767);
/* harmony import */ var _connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(16845);
/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(51104);
/* harmony import */ var _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(22921);
/* harmony import */ var _sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(63471);
/* harmony import */ var _utils_Enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(46811);
/* harmony import */ var _components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(38409);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _utils_utils__WEBPACK_IMPORTED_MODULE_6__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_7__]);
([_config__WEBPACK_IMPORTED_MODULE_3__, _view__WEBPACK_IMPORTED_MODULE_4__, _utils_utils__WEBPACK_IMPORTED_MODULE_6__, _hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
const _excluded = ["index"],
      _excluded2 = ["index"],
      _excluded3 = ["index"],
      _excluded4 = ["index"],
      _excluded5 = ["index"],
      _excluded6 = ["index"],
      _excluded7 = ["index"],
      _excluded8 = ["index"],
      _excluded9 = ["index"],
      _excluded10 = ["index"],
      _excluded11 = ["index"],
      _excluded12 = ["index"],
      _excluded13 = ["index"],
      _excluded14 = ["index"],
      _excluded15 = ["index"];

function cov_1t50fij7pk() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/resources/workloads/config.js";
  var hash = "80bfbad71d221b69fca002c36b4f4c329dae4525";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/resources/workloads/config.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 35
        },
        end: {
          line: 1221,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "2": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 1220,
          column: 4
        }
      },
      "3": {
        start: {
          line: 42,
          column: 41
        },
        end: {
          line: 42,
          column: 64
        }
      },
      "4": {
        start: {
          line: 51,
          column: 14
        },
        end: {
          line: 51,
          column: 62
        }
      },
      "5": {
        start: {
          line: 54,
          column: 14
        },
        end: {
          line: 64,
          column: 16
        }
      },
      "6": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 56,
          column: 95
        }
      },
      "7": {
        start: {
          line: 74,
          column: 33
        },
        end: {
          line: 74,
          column: 80
        }
      },
      "8": {
        start: {
          line: 75,
          column: 39
        },
        end: {
          line: 75,
          column: 73
        }
      },
      "9": {
        start: {
          line: 77,
          column: 14
        },
        end: {
          line: 77,
          column: 62
        }
      },
      "10": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 66
        }
      },
      "11": {
        start: {
          line: 87,
          column: 39
        },
        end: {
          line: 87,
          column: 72
        }
      },
      "12": {
        start: {
          line: 89,
          column: 14
        },
        end: {
          line: 89,
          column: 62
        }
      },
      "13": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 45
        }
      },
      "14": {
        start: {
          line: 93,
          column: 26
        },
        end: {
          line: 93,
          column: 42
        }
      },
      "15": {
        start: {
          line: 94,
          column: 14
        },
        end: {
          line: 94,
          column: 34
        }
      },
      "16": {
        start: {
          line: 104,
          column: 14
        },
        end: {
          line: 104,
          column: 62
        }
      },
      "17": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 107,
          column: 45
        }
      },
      "18": {
        start: {
          line: 108,
          column: 27
        },
        end: {
          line: 108,
          column: 44
        }
      },
      "19": {
        start: {
          line: 109,
          column: 14
        },
        end: {
          line: 109,
          column: 35
        }
      },
      "20": {
        start: {
          line: 119,
          column: 14
        },
        end: {
          line: 119,
          column: 62
        }
      },
      "21": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 122,
          column: 45
        }
      },
      "22": {
        start: {
          line: 123,
          column: 26
        },
        end: {
          line: 123,
          column: 42
        }
      },
      "23": {
        start: {
          line: 124,
          column: 14
        },
        end: {
          line: 124,
          column: 34
        }
      },
      "24": {
        start: {
          line: 134,
          column: 14
        },
        end: {
          line: 134,
          column: 62
        }
      },
      "25": {
        start: {
          line: 144,
          column: 14
        },
        end: {
          line: 144,
          column: 62
        }
      },
      "26": {
        start: {
          line: 147,
          column: 30
        },
        end: {
          line: 147,
          column: 45
        }
      },
      "27": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 148,
          column: 48
        }
      },
      "28": {
        start: {
          line: 149,
          column: 14
        },
        end: {
          line: 153,
          column: 16
        }
      },
      "29": {
        start: {
          line: 164,
          column: 14
        },
        end: {
          line: 171,
          column: 16
        }
      },
      "30": {
        start: {
          line: 169,
          column: 32
        },
        end: {
          line: 169,
          column: 49
        }
      },
      "31": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 174,
          column: 70
        }
      },
      "32": {
        start: {
          line: 175,
          column: 14
        },
        end: {
          line: 188,
          column: 16
        }
      },
      "33": {
        start: {
          line: 185,
          column: 38
        },
        end: {
          line: 185,
          column: 95
        }
      },
      "34": {
        start: {
          line: 198,
          column: 14
        },
        end: {
          line: 198,
          column: 62
        }
      },
      "35": {
        start: {
          line: 201,
          column: 25
        },
        end: {
          line: 201,
          column: 39
        }
      },
      "36": {
        start: {
          line: 202,
          column: 14
        },
        end: {
          line: 202,
          column: 33
        }
      },
      "37": {
        start: {
          line: 226,
          column: 41
        },
        end: {
          line: 226,
          column: 64
        }
      },
      "38": {
        start: {
          line: 235,
          column: 14
        },
        end: {
          line: 235,
          column: 62
        }
      },
      "39": {
        start: {
          line: 238,
          column: 14
        },
        end: {
          line: 248,
          column: 16
        }
      },
      "40": {
        start: {
          line: 240,
          column: 33
        },
        end: {
          line: 240,
          column: 95
        }
      },
      "41": {
        start: {
          line: 259,
          column: 14
        },
        end: {
          line: 266,
          column: 16
        }
      },
      "42": {
        start: {
          line: 264,
          column: 32
        },
        end: {
          line: 264,
          column: 49
        }
      },
      "43": {
        start: {
          line: 276,
          column: 14
        },
        end: {
          line: 276,
          column: 62
        }
      },
      "44": {
        start: {
          line: 279,
          column: 30
        },
        end: {
          line: 279,
          column: 45
        }
      },
      "45": {
        start: {
          line: 280,
          column: 29
        },
        end: {
          line: 280,
          column: 48
        }
      },
      "46": {
        start: {
          line: 281,
          column: 14
        },
        end: {
          line: 281,
          column: 37
        }
      },
      "47": {
        start: {
          line: 291,
          column: 14
        },
        end: {
          line: 291,
          column: 62
        }
      },
      "48": {
        start: {
          line: 294,
          column: 30
        },
        end: {
          line: 294,
          column: 45
        }
      },
      "49": {
        start: {
          line: 295,
          column: 29
        },
        end: {
          line: 295,
          column: 48
        }
      },
      "50": {
        start: {
          line: 296,
          column: 25
        },
        end: {
          line: 296,
          column: 38
        }
      },
      "51": {
        start: {
          line: 297,
          column: 34
        },
        end: {
          line: 297,
          column: 52
        }
      },
      "52": {
        start: {
          line: 298,
          column: 14
        },
        end: {
          line: 298,
          column: 42
        }
      },
      "53": {
        start: {
          line: 308,
          column: 14
        },
        end: {
          line: 308,
          column: 62
        }
      },
      "54": {
        start: {
          line: 319,
          column: 14
        },
        end: {
          line: 326,
          column: 16
        }
      },
      "55": {
        start: {
          line: 324,
          column: 32
        },
        end: {
          line: 324,
          column: 49
        }
      },
      "56": {
        start: {
          line: 329,
          column: 28
        },
        end: {
          line: 329,
          column: 70
        }
      },
      "57": {
        start: {
          line: 330,
          column: 14
        },
        end: {
          line: 345,
          column: 16
        }
      },
      "58": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 340,
          column: 45
        }
      },
      "59": {
        start: {
          line: 341,
          column: 22
        },
        end: {
          line: 341,
          column: 80
        }
      },
      "60": {
        start: {
          line: 355,
          column: 14
        },
        end: {
          line: 355,
          column: 62
        }
      },
      "61": {
        start: {
          line: 358,
          column: 25
        },
        end: {
          line: 358,
          column: 39
        }
      },
      "62": {
        start: {
          line: 359,
          column: 14
        },
        end: {
          line: 359,
          column: 33
        }
      },
      "63": {
        start: {
          line: 382,
          column: 41
        },
        end: {
          line: 382,
          column: 64
        }
      },
      "64": {
        start: {
          line: 391,
          column: 14
        },
        end: {
          line: 391,
          column: 62
        }
      },
      "65": {
        start: {
          line: 394,
          column: 14
        },
        end: {
          line: 404,
          column: 16
        }
      },
      "66": {
        start: {
          line: 396,
          column: 33
        },
        end: {
          line: 396,
          column: 95
        }
      },
      "67": {
        start: {
          line: 415,
          column: 14
        },
        end: {
          line: 422,
          column: 16
        }
      },
      "68": {
        start: {
          line: 420,
          column: 32
        },
        end: {
          line: 420,
          column: 49
        }
      },
      "69": {
        start: {
          line: 432,
          column: 14
        },
        end: {
          line: 432,
          column: 62
        }
      },
      "70": {
        start: {
          line: 435,
          column: 30
        },
        end: {
          line: 435,
          column: 45
        }
      },
      "71": {
        start: {
          line: 436,
          column: 29
        },
        end: {
          line: 436,
          column: 48
        }
      },
      "72": {
        start: {
          line: 437,
          column: 25
        },
        end: {
          line: 437,
          column: 38
        }
      },
      "73": {
        start: {
          line: 438,
          column: 33
        },
        end: {
          line: 438,
          column: 50
        }
      },
      "74": {
        start: {
          line: 439,
          column: 14
        },
        end: {
          line: 439,
          column: 57
        }
      },
      "75": {
        start: {
          line: 449,
          column: 14
        },
        end: {
          line: 449,
          column: 62
        }
      },
      "76": {
        start: {
          line: 460,
          column: 14
        },
        end: {
          line: 467,
          column: 16
        }
      },
      "77": {
        start: {
          line: 465,
          column: 32
        },
        end: {
          line: 465,
          column: 49
        }
      },
      "78": {
        start: {
          line: 470,
          column: 28
        },
        end: {
          line: 470,
          column: 70
        }
      },
      "79": {
        start: {
          line: 471,
          column: 14
        },
        end: {
          line: 481,
          column: 16
        }
      },
      "80": {
        start: {
          line: 479,
          column: 36
        },
        end: {
          line: 479,
          column: 93
        }
      },
      "81": {
        start: {
          line: 491,
          column: 14
        },
        end: {
          line: 491,
          column: 62
        }
      },
      "82": {
        start: {
          line: 494,
          column: 25
        },
        end: {
          line: 494,
          column: 39
        }
      },
      "83": {
        start: {
          line: 495,
          column: 14
        },
        end: {
          line: 495,
          column: 33
        }
      },
      "84": {
        start: {
          line: 518,
          column: 41
        },
        end: {
          line: 518,
          column: 64
        }
      },
      "85": {
        start: {
          line: 527,
          column: 14
        },
        end: {
          line: 527,
          column: 62
        }
      },
      "86": {
        start: {
          line: 530,
          column: 14
        },
        end: {
          line: 540,
          column: 16
        }
      },
      "87": {
        start: {
          line: 532,
          column: 33
        },
        end: {
          line: 532,
          column: 95
        }
      },
      "88": {
        start: {
          line: 551,
          column: 14
        },
        end: {
          line: 558,
          column: 16
        }
      },
      "89": {
        start: {
          line: 556,
          column: 32
        },
        end: {
          line: 556,
          column: 49
        }
      },
      "90": {
        start: {
          line: 568,
          column: 14
        },
        end: {
          line: 568,
          column: 62
        }
      },
      "91": {
        start: {
          line: 571,
          column: 30
        },
        end: {
          line: 571,
          column: 45
        }
      },
      "92": {
        start: {
          line: 572,
          column: 29
        },
        end: {
          line: 572,
          column: 48
        }
      },
      "93": {
        start: {
          line: 573,
          column: 14
        },
        end: {
          line: 573,
          column: 37
        }
      },
      "94": {
        start: {
          line: 583,
          column: 14
        },
        end: {
          line: 583,
          column: 62
        }
      },
      "95": {
        start: {
          line: 594,
          column: 14
        },
        end: {
          line: 601,
          column: 16
        }
      },
      "96": {
        start: {
          line: 599,
          column: 32
        },
        end: {
          line: 599,
          column: 49
        }
      },
      "97": {
        start: {
          line: 604,
          column: 28
        },
        end: {
          line: 604,
          column: 70
        }
      },
      "98": {
        start: {
          line: 605,
          column: 14
        },
        end: {
          line: 615,
          column: 16
        }
      },
      "99": {
        start: {
          line: 613,
          column: 36
        },
        end: {
          line: 613,
          column: 93
        }
      },
      "100": {
        start: {
          line: 625,
          column: 14
        },
        end: {
          line: 625,
          column: 62
        }
      },
      "101": {
        start: {
          line: 628,
          column: 25
        },
        end: {
          line: 628,
          column: 39
        }
      },
      "102": {
        start: {
          line: 629,
          column: 14
        },
        end: {
          line: 629,
          column: 33
        }
      },
      "103": {
        start: {
          line: 654,
          column: 41
        },
        end: {
          line: 654,
          column: 64
        }
      },
      "104": {
        start: {
          line: 663,
          column: 14
        },
        end: {
          line: 663,
          column: 62
        }
      },
      "105": {
        start: {
          line: 666,
          column: 14
        },
        end: {
          line: 676,
          column: 16
        }
      },
      "106": {
        start: {
          line: 668,
          column: 33
        },
        end: {
          line: 668,
          column: 95
        }
      },
      "107": {
        start: {
          line: 687,
          column: 14
        },
        end: {
          line: 694,
          column: 16
        }
      },
      "108": {
        start: {
          line: 692,
          column: 32
        },
        end: {
          line: 692,
          column: 49
        }
      },
      "109": {
        start: {
          line: 704,
          column: 14
        },
        end: {
          line: 704,
          column: 62
        }
      },
      "110": {
        start: {
          line: 707,
          column: 30
        },
        end: {
          line: 707,
          column: 45
        }
      },
      "111": {
        start: {
          line: 708,
          column: 29
        },
        end: {
          line: 708,
          column: 48
        }
      },
      "112": {
        start: {
          line: 709,
          column: 14
        },
        end: {
          line: 709,
          column: 37
        }
      },
      "113": {
        start: {
          line: 719,
          column: 14
        },
        end: {
          line: 719,
          column: 62
        }
      },
      "114": {
        start: {
          line: 722,
          column: 30
        },
        end: {
          line: 722,
          column: 45
        }
      },
      "115": {
        start: {
          line: 723,
          column: 29
        },
        end: {
          line: 723,
          column: 48
        }
      },
      "116": {
        start: {
          line: 724,
          column: 14
        },
        end: {
          line: 724,
          column: 37
        }
      },
      "117": {
        start: {
          line: 734,
          column: 14
        },
        end: {
          line: 734,
          column: 62
        }
      },
      "118": {
        start: {
          line: 737,
          column: 30
        },
        end: {
          line: 737,
          column: 45
        }
      },
      "119": {
        start: {
          line: 738,
          column: 34
        },
        end: {
          line: 738,
          column: 58
        }
      },
      "120": {
        start: {
          line: 739,
          column: 14
        },
        end: {
          line: 739,
          column: 42
        }
      },
      "121": {
        start: {
          line: 749,
          column: 14
        },
        end: {
          line: 749,
          column: 62
        }
      },
      "122": {
        start: {
          line: 761,
          column: 14
        },
        end: {
          line: 768,
          column: 16
        }
      },
      "123": {
        start: {
          line: 766,
          column: 32
        },
        end: {
          line: 766,
          column: 49
        }
      },
      "124": {
        start: {
          line: 771,
          column: 28
        },
        end: {
          line: 771,
          column: 70
        }
      },
      "125": {
        start: {
          line: 772,
          column: 14
        },
        end: {
          line: 782,
          column: 16
        }
      },
      "126": {
        start: {
          line: 780,
          column: 36
        },
        end: {
          line: 780,
          column: 93
        }
      },
      "127": {
        start: {
          line: 792,
          column: 14
        },
        end: {
          line: 792,
          column: 62
        }
      },
      "128": {
        start: {
          line: 795,
          column: 25
        },
        end: {
          line: 795,
          column: 39
        }
      },
      "129": {
        start: {
          line: 796,
          column: 14
        },
        end: {
          line: 796,
          column: 33
        }
      },
      "130": {
        start: {
          line: 820,
          column: 41
        },
        end: {
          line: 820,
          column: 64
        }
      },
      "131": {
        start: {
          line: 829,
          column: 14
        },
        end: {
          line: 829,
          column: 62
        }
      },
      "132": {
        start: {
          line: 832,
          column: 14
        },
        end: {
          line: 842,
          column: 16
        }
      },
      "133": {
        start: {
          line: 834,
          column: 33
        },
        end: {
          line: 834,
          column: 95
        }
      },
      "134": {
        start: {
          line: 853,
          column: 14
        },
        end: {
          line: 860,
          column: 16
        }
      },
      "135": {
        start: {
          line: 858,
          column: 32
        },
        end: {
          line: 858,
          column: 49
        }
      },
      "136": {
        start: {
          line: 870,
          column: 14
        },
        end: {
          line: 870,
          column: 62
        }
      },
      "137": {
        start: {
          line: 873,
          column: 30
        },
        end: {
          line: 873,
          column: 45
        }
      },
      "138": {
        start: {
          line: 874,
          column: 29
        },
        end: {
          line: 874,
          column: 48
        }
      },
      "139": {
        start: {
          line: 875,
          column: 14
        },
        end: {
          line: 875,
          column: 37
        }
      },
      "140": {
        start: {
          line: 885,
          column: 14
        },
        end: {
          line: 885,
          column: 62
        }
      },
      "141": {
        start: {
          line: 888,
          column: 30
        },
        end: {
          line: 888,
          column: 45
        }
      },
      "142": {
        start: {
          line: 889,
          column: 29
        },
        end: {
          line: 889,
          column: 48
        }
      },
      "143": {
        start: {
          line: 890,
          column: 14
        },
        end: {
          line: 890,
          column: 37
        }
      },
      "144": {
        start: {
          line: 900,
          column: 14
        },
        end: {
          line: 900,
          column: 62
        }
      },
      "145": {
        start: {
          line: 911,
          column: 14
        },
        end: {
          line: 918,
          column: 16
        }
      },
      "146": {
        start: {
          line: 916,
          column: 32
        },
        end: {
          line: 916,
          column: 49
        }
      },
      "147": {
        start: {
          line: 921,
          column: 28
        },
        end: {
          line: 921,
          column: 70
        }
      },
      "148": {
        start: {
          line: 922,
          column: 14
        },
        end: {
          line: 932,
          column: 16
        }
      },
      "149": {
        start: {
          line: 930,
          column: 36
        },
        end: {
          line: 930,
          column: 93
        }
      },
      "150": {
        start: {
          line: 942,
          column: 14
        },
        end: {
          line: 942,
          column: 62
        }
      },
      "151": {
        start: {
          line: 945,
          column: 25
        },
        end: {
          line: 945,
          column: 39
        }
      },
      "152": {
        start: {
          line: 946,
          column: 14
        },
        end: {
          line: 946,
          column: 33
        }
      },
      "153": {
        start: {
          line: 968,
          column: 41
        },
        end: {
          line: 968,
          column: 64
        }
      },
      "154": {
        start: {
          line: 977,
          column: 14
        },
        end: {
          line: 977,
          column: 62
        }
      },
      "155": {
        start: {
          line: 980,
          column: 14
        },
        end: {
          line: 990,
          column: 16
        }
      },
      "156": {
        start: {
          line: 982,
          column: 33
        },
        end: {
          line: 982,
          column: 95
        }
      },
      "157": {
        start: {
          line: 1001,
          column: 14
        },
        end: {
          line: 1008,
          column: 16
        }
      },
      "158": {
        start: {
          line: 1006,
          column: 32
        },
        end: {
          line: 1006,
          column: 49
        }
      },
      "159": {
        start: {
          line: 1018,
          column: 14
        },
        end: {
          line: 1018,
          column: 62
        }
      },
      "160": {
        start: {
          line: 1029,
          column: 14
        },
        end: {
          line: 1036,
          column: 16
        }
      },
      "161": {
        start: {
          line: 1034,
          column: 32
        },
        end: {
          line: 1034,
          column: 49
        }
      },
      "162": {
        start: {
          line: 1039,
          column: 28
        },
        end: {
          line: 1039,
          column: 70
        }
      },
      "163": {
        start: {
          line: 1040,
          column: 14
        },
        end: {
          line: 1050,
          column: 16
        }
      },
      "164": {
        start: {
          line: 1048,
          column: 36
        },
        end: {
          line: 1048,
          column: 93
        }
      },
      "165": {
        start: {
          line: 1060,
          column: 14
        },
        end: {
          line: 1060,
          column: 62
        }
      },
      "166": {
        start: {
          line: 1063,
          column: 25
        },
        end: {
          line: 1063,
          column: 39
        }
      },
      "167": {
        start: {
          line: 1064,
          column: 14
        },
        end: {
          line: 1064,
          column: 33
        }
      },
      "168": {
        start: {
          line: 1088,
          column: 41
        },
        end: {
          line: 1088,
          column: 64
        }
      },
      "169": {
        start: {
          line: 1097,
          column: 14
        },
        end: {
          line: 1097,
          column: 62
        }
      },
      "170": {
        start: {
          line: 1100,
          column: 14
        },
        end: {
          line: 1110,
          column: 16
        }
      },
      "171": {
        start: {
          line: 1102,
          column: 33
        },
        end: {
          line: 1102,
          column: 95
        }
      },
      "172": {
        start: {
          line: 1121,
          column: 14
        },
        end: {
          line: 1128,
          column: 16
        }
      },
      "173": {
        start: {
          line: 1126,
          column: 32
        },
        end: {
          line: 1126,
          column: 49
        }
      },
      "174": {
        start: {
          line: 1138,
          column: 14
        },
        end: {
          line: 1138,
          column: 62
        }
      },
      "175": {
        start: {
          line: 1141,
          column: 30
        },
        end: {
          line: 1141,
          column: 45
        }
      },
      "176": {
        start: {
          line: 1142,
          column: 29
        },
        end: {
          line: 1142,
          column: 48
        }
      },
      "177": {
        start: {
          line: 1143,
          column: 14
        },
        end: {
          line: 1143,
          column: 37
        }
      },
      "178": {
        start: {
          line: 1153,
          column: 14
        },
        end: {
          line: 1153,
          column: 62
        }
      },
      "179": {
        start: {
          line: 1156,
          column: 30
        },
        end: {
          line: 1156,
          column: 45
        }
      },
      "180": {
        start: {
          line: 1157,
          column: 28
        },
        end: {
          line: 1157,
          column: 46
        }
      },
      "181": {
        start: {
          line: 1158,
          column: 14
        },
        end: {
          line: 1158,
          column: 36
        }
      },
      "182": {
        start: {
          line: 1168,
          column: 14
        },
        end: {
          line: 1168,
          column: 62
        }
      },
      "183": {
        start: {
          line: 1179,
          column: 14
        },
        end: {
          line: 1186,
          column: 16
        }
      },
      "184": {
        start: {
          line: 1184,
          column: 32
        },
        end: {
          line: 1184,
          column: 49
        }
      },
      "185": {
        start: {
          line: 1189,
          column: 28
        },
        end: {
          line: 1189,
          column: 70
        }
      },
      "186": {
        start: {
          line: 1190,
          column: 14
        },
        end: {
          line: 1200,
          column: 16
        }
      },
      "187": {
        start: {
          line: 1198,
          column: 36
        },
        end: {
          line: 1198,
          column: 93
        }
      },
      "188": {
        start: {
          line: 1210,
          column: 14
        },
        end: {
          line: 1210,
          column: 62
        }
      },
      "189": {
        start: {
          line: 1213,
          column: 25
        },
        end: {
          line: 1213,
          column: 39
        }
      },
      "190": {
        start: {
          line: 1214,
          column: 14
        },
        end: {
          line: 1214,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 36
          }
        },
        loc: {
          start: {
            line: 19,
            column: 5
          },
          end: {
            line: 1221,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 42,
            column: 31
          }
        },
        loc: {
          start: {
            line: 42,
            column: 41
          },
          end: {
            line: 42,
            column: 64
          }
        },
        line: 42
      },
      "2": {
        name: "CustomHead",
        decl: {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 50,
            column: 49
          }
        },
        loc: {
          start: {
            line: 50,
            column: 65
          },
          end: {
            line: 52,
            column: 13
          }
        },
        line: 50
      },
      "3": {
        name: "CustomBody",
        decl: {
          start: {
            line: 53,
            column: 39
          },
          end: {
            line: 53,
            column: 49
          }
        },
        loc: {
          start: {
            line: 53,
            column: 68
          },
          end: {
            line: 65,
            column: 13
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 27
          },
          end: {
            line: 56,
            column: 28
          }
        },
        loc: {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 95
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 27
          }
        },
        loc: {
          start: {
            line: 74,
            column: 33
          },
          end: {
            line: 74,
            column: 80
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 33
          }
        },
        loc: {
          start: {
            line: 75,
            column: 39
          },
          end: {
            line: 75,
            column: 73
          }
        },
        line: 75
      },
      "7": {
        name: "CustomHead",
        decl: {
          start: {
            line: 76,
            column: 39
          },
          end: {
            line: 76,
            column: 49
          }
        },
        loc: {
          start: {
            line: 76,
            column: 65
          },
          end: {
            line: 78,
            column: 13
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 27
          }
        },
        loc: {
          start: {
            line: 86,
            column: 33
          },
          end: {
            line: 86,
            column: 66
          }
        },
        line: 86
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 33
          }
        },
        loc: {
          start: {
            line: 87,
            column: 39
          },
          end: {
            line: 87,
            column: 72
          }
        },
        line: 87
      },
      "10": {
        name: "CustomHead",
        decl: {
          start: {
            line: 88,
            column: 39
          },
          end: {
            line: 88,
            column: 49
          }
        },
        loc: {
          start: {
            line: 88,
            column: 65
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 88
      },
      "11": {
        name: "CustomBody",
        decl: {
          start: {
            line: 91,
            column: 39
          },
          end: {
            line: 91,
            column: 49
          }
        },
        loc: {
          start: {
            line: 91,
            column: 55
          },
          end: {
            line: 95,
            column: 13
          }
        },
        line: 91
      },
      "12": {
        name: "CustomHead",
        decl: {
          start: {
            line: 103,
            column: 39
          },
          end: {
            line: 103,
            column: 49
          }
        },
        loc: {
          start: {
            line: 103,
            column: 65
          },
          end: {
            line: 105,
            column: 13
          }
        },
        line: 103
      },
      "13": {
        name: "CustomBody",
        decl: {
          start: {
            line: 106,
            column: 39
          },
          end: {
            line: 106,
            column: 49
          }
        },
        loc: {
          start: {
            line: 106,
            column: 55
          },
          end: {
            line: 110,
            column: 13
          }
        },
        line: 106
      },
      "14": {
        name: "CustomHead",
        decl: {
          start: {
            line: 118,
            column: 39
          },
          end: {
            line: 118,
            column: 49
          }
        },
        loc: {
          start: {
            line: 118,
            column: 65
          },
          end: {
            line: 120,
            column: 13
          }
        },
        line: 118
      },
      "15": {
        name: "CustomBody",
        decl: {
          start: {
            line: 121,
            column: 39
          },
          end: {
            line: 121,
            column: 49
          }
        },
        loc: {
          start: {
            line: 121,
            column: 55
          },
          end: {
            line: 125,
            column: 13
          }
        },
        line: 121
      },
      "16": {
        name: "CustomHead",
        decl: {
          start: {
            line: 133,
            column: 39
          },
          end: {
            line: 133,
            column: 49
          }
        },
        loc: {
          start: {
            line: 133,
            column: 65
          },
          end: {
            line: 135,
            column: 13
          }
        },
        line: 133
      },
      "17": {
        name: "CustomHead",
        decl: {
          start: {
            line: 143,
            column: 39
          },
          end: {
            line: 143,
            column: 49
          }
        },
        loc: {
          start: {
            line: 143,
            column: 65
          },
          end: {
            line: 145,
            column: 13
          }
        },
        line: 143
      },
      "18": {
        name: "CustomBody",
        decl: {
          start: {
            line: 146,
            column: 39
          },
          end: {
            line: 146,
            column: 49
          }
        },
        loc: {
          start: {
            line: 146,
            column: 55
          },
          end: {
            line: 154,
            column: 13
          }
        },
        line: 146
      },
      "19": {
        name: "CustomHead",
        decl: {
          start: {
            line: 163,
            column: 39
          },
          end: {
            line: 163,
            column: 49
          }
        },
        loc: {
          start: {
            line: 163,
            column: 96
          },
          end: {
            line: 172,
            column: 13
          }
        },
        line: 163
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 169,
            column: 26
          },
          end: {
            line: 169,
            column: 27
          }
        },
        loc: {
          start: {
            line: 169,
            column: 32
          },
          end: {
            line: 169,
            column: 49
          }
        },
        line: 169
      },
      "21": {
        name: "CustomBody",
        decl: {
          start: {
            line: 173,
            column: 39
          },
          end: {
            line: 173,
            column: 49
          }
        },
        loc: {
          start: {
            line: 173,
            column: 55
          },
          end: {
            line: 189,
            column: 13
          }
        },
        line: 173
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 185,
            column: 33
          }
        },
        loc: {
          start: {
            line: 185,
            column: 38
          },
          end: {
            line: 185,
            column: 95
          }
        },
        line: 185
      },
      "23": {
        name: "CustomHead",
        decl: {
          start: {
            line: 197,
            column: 39
          },
          end: {
            line: 197,
            column: 49
          }
        },
        loc: {
          start: {
            line: 197,
            column: 65
          },
          end: {
            line: 199,
            column: 13
          }
        },
        line: 197
      },
      "24": {
        name: "CustomBody",
        decl: {
          start: {
            line: 200,
            column: 39
          },
          end: {
            line: 200,
            column: 49
          }
        },
        loc: {
          start: {
            line: 200,
            column: 57
          },
          end: {
            line: 203,
            column: 13
          }
        },
        line: 200
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 226,
            column: 30
          },
          end: {
            line: 226,
            column: 31
          }
        },
        loc: {
          start: {
            line: 226,
            column: 41
          },
          end: {
            line: 226,
            column: 64
          }
        },
        line: 226
      },
      "26": {
        name: "CustomHead",
        decl: {
          start: {
            line: 234,
            column: 39
          },
          end: {
            line: 234,
            column: 49
          }
        },
        loc: {
          start: {
            line: 234,
            column: 65
          },
          end: {
            line: 236,
            column: 13
          }
        },
        line: 234
      },
      "27": {
        name: "CustomBody",
        decl: {
          start: {
            line: 237,
            column: 39
          },
          end: {
            line: 237,
            column: 49
          }
        },
        loc: {
          start: {
            line: 237,
            column: 68
          },
          end: {
            line: 249,
            column: 13
          }
        },
        line: 237
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 240,
            column: 27
          },
          end: {
            line: 240,
            column: 28
          }
        },
        loc: {
          start: {
            line: 240,
            column: 33
          },
          end: {
            line: 240,
            column: 95
          }
        },
        line: 240
      },
      "29": {
        name: "CustomHead",
        decl: {
          start: {
            line: 258,
            column: 39
          },
          end: {
            line: 258,
            column: 49
          }
        },
        loc: {
          start: {
            line: 258,
            column: 96
          },
          end: {
            line: 267,
            column: 13
          }
        },
        line: 258
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 264,
            column: 26
          },
          end: {
            line: 264,
            column: 27
          }
        },
        loc: {
          start: {
            line: 264,
            column: 32
          },
          end: {
            line: 264,
            column: 49
          }
        },
        line: 264
      },
      "31": {
        name: "CustomHead",
        decl: {
          start: {
            line: 275,
            column: 39
          },
          end: {
            line: 275,
            column: 49
          }
        },
        loc: {
          start: {
            line: 275,
            column: 65
          },
          end: {
            line: 277,
            column: 13
          }
        },
        line: 275
      },
      "32": {
        name: "CustomBody",
        decl: {
          start: {
            line: 278,
            column: 39
          },
          end: {
            line: 278,
            column: 49
          }
        },
        loc: {
          start: {
            line: 278,
            column: 55
          },
          end: {
            line: 282,
            column: 13
          }
        },
        line: 278
      },
      "33": {
        name: "CustomHead",
        decl: {
          start: {
            line: 290,
            column: 39
          },
          end: {
            line: 290,
            column: 49
          }
        },
        loc: {
          start: {
            line: 290,
            column: 65
          },
          end: {
            line: 292,
            column: 13
          }
        },
        line: 290
      },
      "34": {
        name: "CustomBody",
        decl: {
          start: {
            line: 293,
            column: 39
          },
          end: {
            line: 293,
            column: 49
          }
        },
        loc: {
          start: {
            line: 293,
            column: 55
          },
          end: {
            line: 299,
            column: 13
          }
        },
        line: 293
      },
      "35": {
        name: "CustomHead",
        decl: {
          start: {
            line: 307,
            column: 39
          },
          end: {
            line: 307,
            column: 49
          }
        },
        loc: {
          start: {
            line: 307,
            column: 65
          },
          end: {
            line: 309,
            column: 13
          }
        },
        line: 307
      },
      "36": {
        name: "CustomHead",
        decl: {
          start: {
            line: 318,
            column: 39
          },
          end: {
            line: 318,
            column: 49
          }
        },
        loc: {
          start: {
            line: 318,
            column: 96
          },
          end: {
            line: 327,
            column: 13
          }
        },
        line: 318
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 324,
            column: 26
          },
          end: {
            line: 324,
            column: 27
          }
        },
        loc: {
          start: {
            line: 324,
            column: 32
          },
          end: {
            line: 324,
            column: 49
          }
        },
        line: 324
      },
      "38": {
        name: "CustomBody",
        decl: {
          start: {
            line: 328,
            column: 39
          },
          end: {
            line: 328,
            column: 49
          }
        },
        loc: {
          start: {
            line: 328,
            column: 55
          },
          end: {
            line: 346,
            column: 13
          }
        },
        line: 328
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 339,
            column: 32
          },
          end: {
            line: 339,
            column: 33
          }
        },
        loc: {
          start: {
            line: 339,
            column: 43
          },
          end: {
            line: 342,
            column: 21
          }
        },
        line: 339
      },
      "40": {
        name: "CustomHead",
        decl: {
          start: {
            line: 354,
            column: 39
          },
          end: {
            line: 354,
            column: 49
          }
        },
        loc: {
          start: {
            line: 354,
            column: 65
          },
          end: {
            line: 356,
            column: 13
          }
        },
        line: 354
      },
      "41": {
        name: "CustomBody",
        decl: {
          start: {
            line: 357,
            column: 39
          },
          end: {
            line: 357,
            column: 49
          }
        },
        loc: {
          start: {
            line: 357,
            column: 57
          },
          end: {
            line: 360,
            column: 13
          }
        },
        line: 357
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 382,
            column: 30
          },
          end: {
            line: 382,
            column: 31
          }
        },
        loc: {
          start: {
            line: 382,
            column: 41
          },
          end: {
            line: 382,
            column: 64
          }
        },
        line: 382
      },
      "43": {
        name: "CustomHead",
        decl: {
          start: {
            line: 390,
            column: 39
          },
          end: {
            line: 390,
            column: 49
          }
        },
        loc: {
          start: {
            line: 390,
            column: 65
          },
          end: {
            line: 392,
            column: 13
          }
        },
        line: 390
      },
      "44": {
        name: "CustomBody",
        decl: {
          start: {
            line: 393,
            column: 39
          },
          end: {
            line: 393,
            column: 49
          }
        },
        loc: {
          start: {
            line: 393,
            column: 68
          },
          end: {
            line: 405,
            column: 13
          }
        },
        line: 393
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 396,
            column: 27
          },
          end: {
            line: 396,
            column: 28
          }
        },
        loc: {
          start: {
            line: 396,
            column: 33
          },
          end: {
            line: 396,
            column: 95
          }
        },
        line: 396
      },
      "46": {
        name: "CustomHead",
        decl: {
          start: {
            line: 414,
            column: 39
          },
          end: {
            line: 414,
            column: 49
          }
        },
        loc: {
          start: {
            line: 414,
            column: 96
          },
          end: {
            line: 423,
            column: 13
          }
        },
        line: 414
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 420,
            column: 26
          },
          end: {
            line: 420,
            column: 27
          }
        },
        loc: {
          start: {
            line: 420,
            column: 32
          },
          end: {
            line: 420,
            column: 49
          }
        },
        line: 420
      },
      "48": {
        name: "CustomHead",
        decl: {
          start: {
            line: 431,
            column: 39
          },
          end: {
            line: 431,
            column: 49
          }
        },
        loc: {
          start: {
            line: 431,
            column: 65
          },
          end: {
            line: 433,
            column: 13
          }
        },
        line: 431
      },
      "49": {
        name: "CustomBody",
        decl: {
          start: {
            line: 434,
            column: 39
          },
          end: {
            line: 434,
            column: 49
          }
        },
        loc: {
          start: {
            line: 434,
            column: 55
          },
          end: {
            line: 440,
            column: 13
          }
        },
        line: 434
      },
      "50": {
        name: "CustomHead",
        decl: {
          start: {
            line: 448,
            column: 39
          },
          end: {
            line: 448,
            column: 49
          }
        },
        loc: {
          start: {
            line: 448,
            column: 65
          },
          end: {
            line: 450,
            column: 13
          }
        },
        line: 448
      },
      "51": {
        name: "CustomHead",
        decl: {
          start: {
            line: 459,
            column: 39
          },
          end: {
            line: 459,
            column: 49
          }
        },
        loc: {
          start: {
            line: 459,
            column: 96
          },
          end: {
            line: 468,
            column: 13
          }
        },
        line: 459
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 465,
            column: 26
          },
          end: {
            line: 465,
            column: 27
          }
        },
        loc: {
          start: {
            line: 465,
            column: 32
          },
          end: {
            line: 465,
            column: 49
          }
        },
        line: 465
      },
      "53": {
        name: "CustomBody",
        decl: {
          start: {
            line: 469,
            column: 39
          },
          end: {
            line: 469,
            column: 49
          }
        },
        loc: {
          start: {
            line: 469,
            column: 55
          },
          end: {
            line: 482,
            column: 13
          }
        },
        line: 469
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 479,
            column: 30
          },
          end: {
            line: 479,
            column: 31
          }
        },
        loc: {
          start: {
            line: 479,
            column: 36
          },
          end: {
            line: 479,
            column: 93
          }
        },
        line: 479
      },
      "55": {
        name: "CustomHead",
        decl: {
          start: {
            line: 490,
            column: 39
          },
          end: {
            line: 490,
            column: 49
          }
        },
        loc: {
          start: {
            line: 490,
            column: 65
          },
          end: {
            line: 492,
            column: 13
          }
        },
        line: 490
      },
      "56": {
        name: "CustomBody",
        decl: {
          start: {
            line: 493,
            column: 39
          },
          end: {
            line: 493,
            column: 49
          }
        },
        loc: {
          start: {
            line: 493,
            column: 57
          },
          end: {
            line: 496,
            column: 13
          }
        },
        line: 493
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 518,
            column: 30
          },
          end: {
            line: 518,
            column: 31
          }
        },
        loc: {
          start: {
            line: 518,
            column: 41
          },
          end: {
            line: 518,
            column: 64
          }
        },
        line: 518
      },
      "58": {
        name: "CustomHead",
        decl: {
          start: {
            line: 526,
            column: 39
          },
          end: {
            line: 526,
            column: 49
          }
        },
        loc: {
          start: {
            line: 526,
            column: 65
          },
          end: {
            line: 528,
            column: 13
          }
        },
        line: 526
      },
      "59": {
        name: "CustomBody",
        decl: {
          start: {
            line: 529,
            column: 39
          },
          end: {
            line: 529,
            column: 49
          }
        },
        loc: {
          start: {
            line: 529,
            column: 68
          },
          end: {
            line: 541,
            column: 13
          }
        },
        line: 529
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 532,
            column: 27
          },
          end: {
            line: 532,
            column: 28
          }
        },
        loc: {
          start: {
            line: 532,
            column: 33
          },
          end: {
            line: 532,
            column: 95
          }
        },
        line: 532
      },
      "61": {
        name: "CustomHead",
        decl: {
          start: {
            line: 550,
            column: 39
          },
          end: {
            line: 550,
            column: 49
          }
        },
        loc: {
          start: {
            line: 550,
            column: 96
          },
          end: {
            line: 559,
            column: 13
          }
        },
        line: 550
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 556,
            column: 26
          },
          end: {
            line: 556,
            column: 27
          }
        },
        loc: {
          start: {
            line: 556,
            column: 32
          },
          end: {
            line: 556,
            column: 49
          }
        },
        line: 556
      },
      "63": {
        name: "CustomHead",
        decl: {
          start: {
            line: 567,
            column: 39
          },
          end: {
            line: 567,
            column: 49
          }
        },
        loc: {
          start: {
            line: 567,
            column: 65
          },
          end: {
            line: 569,
            column: 13
          }
        },
        line: 567
      },
      "64": {
        name: "CustomBody",
        decl: {
          start: {
            line: 570,
            column: 39
          },
          end: {
            line: 570,
            column: 49
          }
        },
        loc: {
          start: {
            line: 570,
            column: 55
          },
          end: {
            line: 574,
            column: 13
          }
        },
        line: 570
      },
      "65": {
        name: "CustomHead",
        decl: {
          start: {
            line: 582,
            column: 39
          },
          end: {
            line: 582,
            column: 49
          }
        },
        loc: {
          start: {
            line: 582,
            column: 65
          },
          end: {
            line: 584,
            column: 13
          }
        },
        line: 582
      },
      "66": {
        name: "CustomHead",
        decl: {
          start: {
            line: 593,
            column: 39
          },
          end: {
            line: 593,
            column: 49
          }
        },
        loc: {
          start: {
            line: 593,
            column: 96
          },
          end: {
            line: 602,
            column: 13
          }
        },
        line: 593
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 599,
            column: 26
          },
          end: {
            line: 599,
            column: 27
          }
        },
        loc: {
          start: {
            line: 599,
            column: 32
          },
          end: {
            line: 599,
            column: 49
          }
        },
        line: 599
      },
      "68": {
        name: "CustomBody",
        decl: {
          start: {
            line: 603,
            column: 39
          },
          end: {
            line: 603,
            column: 49
          }
        },
        loc: {
          start: {
            line: 603,
            column: 55
          },
          end: {
            line: 616,
            column: 13
          }
        },
        line: 603
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 613,
            column: 30
          },
          end: {
            line: 613,
            column: 31
          }
        },
        loc: {
          start: {
            line: 613,
            column: 36
          },
          end: {
            line: 613,
            column: 93
          }
        },
        line: 613
      },
      "70": {
        name: "CustomHead",
        decl: {
          start: {
            line: 624,
            column: 39
          },
          end: {
            line: 624,
            column: 49
          }
        },
        loc: {
          start: {
            line: 624,
            column: 65
          },
          end: {
            line: 626,
            column: 13
          }
        },
        line: 624
      },
      "71": {
        name: "CustomBody",
        decl: {
          start: {
            line: 627,
            column: 39
          },
          end: {
            line: 627,
            column: 49
          }
        },
        loc: {
          start: {
            line: 627,
            column: 57
          },
          end: {
            line: 630,
            column: 13
          }
        },
        line: 627
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 654,
            column: 30
          },
          end: {
            line: 654,
            column: 31
          }
        },
        loc: {
          start: {
            line: 654,
            column: 41
          },
          end: {
            line: 654,
            column: 64
          }
        },
        line: 654
      },
      "73": {
        name: "CustomHead",
        decl: {
          start: {
            line: 662,
            column: 39
          },
          end: {
            line: 662,
            column: 49
          }
        },
        loc: {
          start: {
            line: 662,
            column: 65
          },
          end: {
            line: 664,
            column: 13
          }
        },
        line: 662
      },
      "74": {
        name: "CustomBody",
        decl: {
          start: {
            line: 665,
            column: 39
          },
          end: {
            line: 665,
            column: 49
          }
        },
        loc: {
          start: {
            line: 665,
            column: 68
          },
          end: {
            line: 677,
            column: 13
          }
        },
        line: 665
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 668,
            column: 27
          },
          end: {
            line: 668,
            column: 28
          }
        },
        loc: {
          start: {
            line: 668,
            column: 33
          },
          end: {
            line: 668,
            column: 95
          }
        },
        line: 668
      },
      "76": {
        name: "CustomHead",
        decl: {
          start: {
            line: 686,
            column: 39
          },
          end: {
            line: 686,
            column: 49
          }
        },
        loc: {
          start: {
            line: 686,
            column: 96
          },
          end: {
            line: 695,
            column: 13
          }
        },
        line: 686
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 692,
            column: 26
          },
          end: {
            line: 692,
            column: 27
          }
        },
        loc: {
          start: {
            line: 692,
            column: 32
          },
          end: {
            line: 692,
            column: 49
          }
        },
        line: 692
      },
      "78": {
        name: "CustomHead",
        decl: {
          start: {
            line: 703,
            column: 39
          },
          end: {
            line: 703,
            column: 49
          }
        },
        loc: {
          start: {
            line: 703,
            column: 65
          },
          end: {
            line: 705,
            column: 13
          }
        },
        line: 703
      },
      "79": {
        name: "CustomBody",
        decl: {
          start: {
            line: 706,
            column: 39
          },
          end: {
            line: 706,
            column: 49
          }
        },
        loc: {
          start: {
            line: 706,
            column: 55
          },
          end: {
            line: 710,
            column: 13
          }
        },
        line: 706
      },
      "80": {
        name: "CustomHead",
        decl: {
          start: {
            line: 718,
            column: 39
          },
          end: {
            line: 718,
            column: 49
          }
        },
        loc: {
          start: {
            line: 718,
            column: 65
          },
          end: {
            line: 720,
            column: 13
          }
        },
        line: 718
      },
      "81": {
        name: "CustomBody",
        decl: {
          start: {
            line: 721,
            column: 39
          },
          end: {
            line: 721,
            column: 49
          }
        },
        loc: {
          start: {
            line: 721,
            column: 55
          },
          end: {
            line: 725,
            column: 13
          }
        },
        line: 721
      },
      "82": {
        name: "CustomHead",
        decl: {
          start: {
            line: 733,
            column: 39
          },
          end: {
            line: 733,
            column: 49
          }
        },
        loc: {
          start: {
            line: 733,
            column: 65
          },
          end: {
            line: 735,
            column: 13
          }
        },
        line: 733
      },
      "83": {
        name: "CustomBody",
        decl: {
          start: {
            line: 736,
            column: 39
          },
          end: {
            line: 736,
            column: 49
          }
        },
        loc: {
          start: {
            line: 736,
            column: 55
          },
          end: {
            line: 740,
            column: 13
          }
        },
        line: 736
      },
      "84": {
        name: "CustomHead",
        decl: {
          start: {
            line: 748,
            column: 39
          },
          end: {
            line: 748,
            column: 49
          }
        },
        loc: {
          start: {
            line: 748,
            column: 65
          },
          end: {
            line: 750,
            column: 13
          }
        },
        line: 748
      },
      "85": {
        name: "CustomHead",
        decl: {
          start: {
            line: 760,
            column: 39
          },
          end: {
            line: 760,
            column: 49
          }
        },
        loc: {
          start: {
            line: 760,
            column: 96
          },
          end: {
            line: 769,
            column: 13
          }
        },
        line: 760
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 766,
            column: 26
          },
          end: {
            line: 766,
            column: 27
          }
        },
        loc: {
          start: {
            line: 766,
            column: 32
          },
          end: {
            line: 766,
            column: 49
          }
        },
        line: 766
      },
      "87": {
        name: "CustomBody",
        decl: {
          start: {
            line: 770,
            column: 39
          },
          end: {
            line: 770,
            column: 49
          }
        },
        loc: {
          start: {
            line: 770,
            column: 55
          },
          end: {
            line: 783,
            column: 13
          }
        },
        line: 770
      },
      "88": {
        name: "(anonymous_88)",
        decl: {
          start: {
            line: 780,
            column: 30
          },
          end: {
            line: 780,
            column: 31
          }
        },
        loc: {
          start: {
            line: 780,
            column: 36
          },
          end: {
            line: 780,
            column: 93
          }
        },
        line: 780
      },
      "89": {
        name: "CustomHead",
        decl: {
          start: {
            line: 791,
            column: 39
          },
          end: {
            line: 791,
            column: 49
          }
        },
        loc: {
          start: {
            line: 791,
            column: 65
          },
          end: {
            line: 793,
            column: 13
          }
        },
        line: 791
      },
      "90": {
        name: "CustomBody",
        decl: {
          start: {
            line: 794,
            column: 39
          },
          end: {
            line: 794,
            column: 49
          }
        },
        loc: {
          start: {
            line: 794,
            column: 57
          },
          end: {
            line: 797,
            column: 13
          }
        },
        line: 794
      },
      "91": {
        name: "(anonymous_91)",
        decl: {
          start: {
            line: 820,
            column: 30
          },
          end: {
            line: 820,
            column: 31
          }
        },
        loc: {
          start: {
            line: 820,
            column: 41
          },
          end: {
            line: 820,
            column: 64
          }
        },
        line: 820
      },
      "92": {
        name: "CustomHead",
        decl: {
          start: {
            line: 828,
            column: 39
          },
          end: {
            line: 828,
            column: 49
          }
        },
        loc: {
          start: {
            line: 828,
            column: 65
          },
          end: {
            line: 830,
            column: 13
          }
        },
        line: 828
      },
      "93": {
        name: "CustomBody",
        decl: {
          start: {
            line: 831,
            column: 39
          },
          end: {
            line: 831,
            column: 49
          }
        },
        loc: {
          start: {
            line: 831,
            column: 68
          },
          end: {
            line: 843,
            column: 13
          }
        },
        line: 831
      },
      "94": {
        name: "(anonymous_94)",
        decl: {
          start: {
            line: 834,
            column: 27
          },
          end: {
            line: 834,
            column: 28
          }
        },
        loc: {
          start: {
            line: 834,
            column: 33
          },
          end: {
            line: 834,
            column: 95
          }
        },
        line: 834
      },
      "95": {
        name: "CustomHead",
        decl: {
          start: {
            line: 852,
            column: 39
          },
          end: {
            line: 852,
            column: 49
          }
        },
        loc: {
          start: {
            line: 852,
            column: 96
          },
          end: {
            line: 861,
            column: 13
          }
        },
        line: 852
      },
      "96": {
        name: "(anonymous_96)",
        decl: {
          start: {
            line: 858,
            column: 26
          },
          end: {
            line: 858,
            column: 27
          }
        },
        loc: {
          start: {
            line: 858,
            column: 32
          },
          end: {
            line: 858,
            column: 49
          }
        },
        line: 858
      },
      "97": {
        name: "CustomHead",
        decl: {
          start: {
            line: 869,
            column: 39
          },
          end: {
            line: 869,
            column: 49
          }
        },
        loc: {
          start: {
            line: 869,
            column: 65
          },
          end: {
            line: 871,
            column: 13
          }
        },
        line: 869
      },
      "98": {
        name: "CustomBody",
        decl: {
          start: {
            line: 872,
            column: 39
          },
          end: {
            line: 872,
            column: 49
          }
        },
        loc: {
          start: {
            line: 872,
            column: 55
          },
          end: {
            line: 876,
            column: 13
          }
        },
        line: 872
      },
      "99": {
        name: "CustomHead",
        decl: {
          start: {
            line: 884,
            column: 39
          },
          end: {
            line: 884,
            column: 49
          }
        },
        loc: {
          start: {
            line: 884,
            column: 65
          },
          end: {
            line: 886,
            column: 13
          }
        },
        line: 884
      },
      "100": {
        name: "CustomBody",
        decl: {
          start: {
            line: 887,
            column: 39
          },
          end: {
            line: 887,
            column: 49
          }
        },
        loc: {
          start: {
            line: 887,
            column: 55
          },
          end: {
            line: 891,
            column: 13
          }
        },
        line: 887
      },
      "101": {
        name: "CustomHead",
        decl: {
          start: {
            line: 899,
            column: 39
          },
          end: {
            line: 899,
            column: 49
          }
        },
        loc: {
          start: {
            line: 899,
            column: 65
          },
          end: {
            line: 901,
            column: 13
          }
        },
        line: 899
      },
      "102": {
        name: "CustomHead",
        decl: {
          start: {
            line: 910,
            column: 39
          },
          end: {
            line: 910,
            column: 49
          }
        },
        loc: {
          start: {
            line: 910,
            column: 96
          },
          end: {
            line: 919,
            column: 13
          }
        },
        line: 910
      },
      "103": {
        name: "(anonymous_103)",
        decl: {
          start: {
            line: 916,
            column: 26
          },
          end: {
            line: 916,
            column: 27
          }
        },
        loc: {
          start: {
            line: 916,
            column: 32
          },
          end: {
            line: 916,
            column: 49
          }
        },
        line: 916
      },
      "104": {
        name: "CustomBody",
        decl: {
          start: {
            line: 920,
            column: 39
          },
          end: {
            line: 920,
            column: 49
          }
        },
        loc: {
          start: {
            line: 920,
            column: 55
          },
          end: {
            line: 933,
            column: 13
          }
        },
        line: 920
      },
      "105": {
        name: "(anonymous_105)",
        decl: {
          start: {
            line: 930,
            column: 30
          },
          end: {
            line: 930,
            column: 31
          }
        },
        loc: {
          start: {
            line: 930,
            column: 36
          },
          end: {
            line: 930,
            column: 93
          }
        },
        line: 930
      },
      "106": {
        name: "CustomHead",
        decl: {
          start: {
            line: 941,
            column: 39
          },
          end: {
            line: 941,
            column: 49
          }
        },
        loc: {
          start: {
            line: 941,
            column: 65
          },
          end: {
            line: 943,
            column: 13
          }
        },
        line: 941
      },
      "107": {
        name: "CustomBody",
        decl: {
          start: {
            line: 944,
            column: 39
          },
          end: {
            line: 944,
            column: 49
          }
        },
        loc: {
          start: {
            line: 944,
            column: 57
          },
          end: {
            line: 947,
            column: 13
          }
        },
        line: 944
      },
      "108": {
        name: "(anonymous_108)",
        decl: {
          start: {
            line: 968,
            column: 30
          },
          end: {
            line: 968,
            column: 31
          }
        },
        loc: {
          start: {
            line: 968,
            column: 41
          },
          end: {
            line: 968,
            column: 64
          }
        },
        line: 968
      },
      "109": {
        name: "CustomHead",
        decl: {
          start: {
            line: 976,
            column: 39
          },
          end: {
            line: 976,
            column: 49
          }
        },
        loc: {
          start: {
            line: 976,
            column: 65
          },
          end: {
            line: 978,
            column: 13
          }
        },
        line: 976
      },
      "110": {
        name: "CustomBody",
        decl: {
          start: {
            line: 979,
            column: 39
          },
          end: {
            line: 979,
            column: 49
          }
        },
        loc: {
          start: {
            line: 979,
            column: 68
          },
          end: {
            line: 991,
            column: 13
          }
        },
        line: 979
      },
      "111": {
        name: "(anonymous_111)",
        decl: {
          start: {
            line: 982,
            column: 27
          },
          end: {
            line: 982,
            column: 28
          }
        },
        loc: {
          start: {
            line: 982,
            column: 33
          },
          end: {
            line: 982,
            column: 95
          }
        },
        line: 982
      },
      "112": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1000,
            column: 39
          },
          end: {
            line: 1000,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1000,
            column: 96
          },
          end: {
            line: 1009,
            column: 13
          }
        },
        line: 1000
      },
      "113": {
        name: "(anonymous_113)",
        decl: {
          start: {
            line: 1006,
            column: 26
          },
          end: {
            line: 1006,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1006,
            column: 32
          },
          end: {
            line: 1006,
            column: 49
          }
        },
        line: 1006
      },
      "114": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1017,
            column: 39
          },
          end: {
            line: 1017,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1017,
            column: 65
          },
          end: {
            line: 1019,
            column: 13
          }
        },
        line: 1017
      },
      "115": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1028,
            column: 39
          },
          end: {
            line: 1028,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1028,
            column: 96
          },
          end: {
            line: 1037,
            column: 13
          }
        },
        line: 1028
      },
      "116": {
        name: "(anonymous_116)",
        decl: {
          start: {
            line: 1034,
            column: 26
          },
          end: {
            line: 1034,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1034,
            column: 32
          },
          end: {
            line: 1034,
            column: 49
          }
        },
        line: 1034
      },
      "117": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1038,
            column: 39
          },
          end: {
            line: 1038,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1038,
            column: 55
          },
          end: {
            line: 1051,
            column: 13
          }
        },
        line: 1038
      },
      "118": {
        name: "(anonymous_118)",
        decl: {
          start: {
            line: 1048,
            column: 30
          },
          end: {
            line: 1048,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1048,
            column: 36
          },
          end: {
            line: 1048,
            column: 93
          }
        },
        line: 1048
      },
      "119": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1059,
            column: 39
          },
          end: {
            line: 1059,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1059,
            column: 65
          },
          end: {
            line: 1061,
            column: 13
          }
        },
        line: 1059
      },
      "120": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1062,
            column: 39
          },
          end: {
            line: 1062,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1062,
            column: 57
          },
          end: {
            line: 1065,
            column: 13
          }
        },
        line: 1062
      },
      "121": {
        name: "(anonymous_121)",
        decl: {
          start: {
            line: 1088,
            column: 30
          },
          end: {
            line: 1088,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1088,
            column: 41
          },
          end: {
            line: 1088,
            column: 64
          }
        },
        line: 1088
      },
      "122": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1096,
            column: 39
          },
          end: {
            line: 1096,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1096,
            column: 65
          },
          end: {
            line: 1098,
            column: 13
          }
        },
        line: 1096
      },
      "123": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1099,
            column: 39
          },
          end: {
            line: 1099,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1099,
            column: 68
          },
          end: {
            line: 1111,
            column: 13
          }
        },
        line: 1099
      },
      "124": {
        name: "(anonymous_124)",
        decl: {
          start: {
            line: 1102,
            column: 27
          },
          end: {
            line: 1102,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1102,
            column: 33
          },
          end: {
            line: 1102,
            column: 95
          }
        },
        line: 1102
      },
      "125": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1120,
            column: 39
          },
          end: {
            line: 1120,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1120,
            column: 96
          },
          end: {
            line: 1129,
            column: 13
          }
        },
        line: 1120
      },
      "126": {
        name: "(anonymous_126)",
        decl: {
          start: {
            line: 1126,
            column: 26
          },
          end: {
            line: 1126,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1126,
            column: 32
          },
          end: {
            line: 1126,
            column: 49
          }
        },
        line: 1126
      },
      "127": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1137,
            column: 39
          },
          end: {
            line: 1137,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1137,
            column: 65
          },
          end: {
            line: 1139,
            column: 13
          }
        },
        line: 1137
      },
      "128": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1140,
            column: 39
          },
          end: {
            line: 1140,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1140,
            column: 55
          },
          end: {
            line: 1144,
            column: 13
          }
        },
        line: 1140
      },
      "129": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1152,
            column: 39
          },
          end: {
            line: 1152,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1152,
            column: 65
          },
          end: {
            line: 1154,
            column: 13
          }
        },
        line: 1152
      },
      "130": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1155,
            column: 39
          },
          end: {
            line: 1155,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1155,
            column: 55
          },
          end: {
            line: 1159,
            column: 13
          }
        },
        line: 1155
      },
      "131": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1167,
            column: 39
          },
          end: {
            line: 1167,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1167,
            column: 65
          },
          end: {
            line: 1169,
            column: 13
          }
        },
        line: 1167
      },
      "132": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1178,
            column: 39
          },
          end: {
            line: 1178,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1178,
            column: 96
          },
          end: {
            line: 1187,
            column: 13
          }
        },
        line: 1178
      },
      "133": {
        name: "(anonymous_133)",
        decl: {
          start: {
            line: 1184,
            column: 26
          },
          end: {
            line: 1184,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1184,
            column: 32
          },
          end: {
            line: 1184,
            column: 49
          }
        },
        line: 1184
      },
      "134": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1188,
            column: 39
          },
          end: {
            line: 1188,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1188,
            column: 55
          },
          end: {
            line: 1201,
            column: 13
          }
        },
        line: 1188
      },
      "135": {
        name: "(anonymous_135)",
        decl: {
          start: {
            line: 1198,
            column: 30
          },
          end: {
            line: 1198,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1198,
            column: 36
          },
          end: {
            line: 1198,
            column: 93
          }
        },
        line: 1198
      },
      "136": {
        name: "CustomHead",
        decl: {
          start: {
            line: 1209,
            column: 39
          },
          end: {
            line: 1209,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1209,
            column: 65
          },
          end: {
            line: 1211,
            column: 13
          }
        },
        line: 1209
      },
      "137": {
        name: "CustomBody",
        decl: {
          start: {
            line: 1212,
            column: 39
          },
          end: {
            line: 1212,
            column: 49
          }
        },
        loc: {
          start: {
            line: 1212,
            column: 57
          },
          end: {
            line: 1215,
            column: 13
          }
        },
        line: 1212
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 60,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 24
          },
          end: {
            line: 59,
            column: 81
          }
        }, {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 26
          }
        }],
        line: 58
      },
      "1": {
        loc: {
          start: {
            line: 180,
            column: 22
          },
          end: {
            line: 182,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 181,
            column: 26
          },
          end: {
            line: 181,
            column: 84
          }
        }, {
          start: {
            line: 182,
            column: 26
          },
          end: {
            line: 182,
            column: 28
          }
        }],
        line: 180
      },
      "2": {
        loc: {
          start: {
            line: 242,
            column: 20
          },
          end: {
            line: 244,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 24
          },
          end: {
            line: 243,
            column: 81
          }
        }, {
          start: {
            line: 244,
            column: 24
          },
          end: {
            line: 244,
            column: 26
          }
        }],
        line: 242
      },
      "3": {
        loc: {
          start: {
            line: 335,
            column: 22
          },
          end: {
            line: 337,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 336,
            column: 26
          },
          end: {
            line: 336,
            column: 84
          }
        }, {
          start: {
            line: 337,
            column: 26
          },
          end: {
            line: 337,
            column: 28
          }
        }],
        line: 335
      },
      "4": {
        loc: {
          start: {
            line: 398,
            column: 20
          },
          end: {
            line: 400,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 399,
            column: 24
          },
          end: {
            line: 399,
            column: 81
          }
        }, {
          start: {
            line: 400,
            column: 24
          },
          end: {
            line: 400,
            column: 26
          }
        }],
        line: 398
      },
      "5": {
        loc: {
          start: {
            line: 475,
            column: 20
          },
          end: {
            line: 477,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 476,
            column: 24
          },
          end: {
            line: 476,
            column: 82
          }
        }, {
          start: {
            line: 477,
            column: 24
          },
          end: {
            line: 477,
            column: 26
          }
        }],
        line: 475
      },
      "6": {
        loc: {
          start: {
            line: 534,
            column: 20
          },
          end: {
            line: 536,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 535,
            column: 24
          },
          end: {
            line: 535,
            column: 81
          }
        }, {
          start: {
            line: 536,
            column: 24
          },
          end: {
            line: 536,
            column: 26
          }
        }],
        line: 534
      },
      "7": {
        loc: {
          start: {
            line: 609,
            column: 20
          },
          end: {
            line: 611,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 610,
            column: 24
          },
          end: {
            line: 610,
            column: 82
          }
        }, {
          start: {
            line: 611,
            column: 24
          },
          end: {
            line: 611,
            column: 26
          }
        }],
        line: 609
      },
      "8": {
        loc: {
          start: {
            line: 670,
            column: 20
          },
          end: {
            line: 672,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 671,
            column: 24
          },
          end: {
            line: 671,
            column: 81
          }
        }, {
          start: {
            line: 672,
            column: 24
          },
          end: {
            line: 672,
            column: 26
          }
        }],
        line: 670
      },
      "9": {
        loc: {
          start: {
            line: 776,
            column: 20
          },
          end: {
            line: 778,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 777,
            column: 24
          },
          end: {
            line: 777,
            column: 82
          }
        }, {
          start: {
            line: 778,
            column: 24
          },
          end: {
            line: 778,
            column: 26
          }
        }],
        line: 776
      },
      "10": {
        loc: {
          start: {
            line: 836,
            column: 20
          },
          end: {
            line: 838,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 837,
            column: 24
          },
          end: {
            line: 837,
            column: 81
          }
        }, {
          start: {
            line: 838,
            column: 24
          },
          end: {
            line: 838,
            column: 26
          }
        }],
        line: 836
      },
      "11": {
        loc: {
          start: {
            line: 926,
            column: 20
          },
          end: {
            line: 928,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 927,
            column: 24
          },
          end: {
            line: 927,
            column: 82
          }
        }, {
          start: {
            line: 928,
            column: 24
          },
          end: {
            line: 928,
            column: 26
          }
        }],
        line: 926
      },
      "12": {
        loc: {
          start: {
            line: 984,
            column: 20
          },
          end: {
            line: 986,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 985,
            column: 24
          },
          end: {
            line: 985,
            column: 81
          }
        }, {
          start: {
            line: 986,
            column: 24
          },
          end: {
            line: 986,
            column: 26
          }
        }],
        line: 984
      },
      "13": {
        loc: {
          start: {
            line: 1044,
            column: 20
          },
          end: {
            line: 1046,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1045,
            column: 24
          },
          end: {
            line: 1045,
            column: 82
          }
        }, {
          start: {
            line: 1046,
            column: 24
          },
          end: {
            line: 1046,
            column: 26
          }
        }],
        line: 1044
      },
      "14": {
        loc: {
          start: {
            line: 1104,
            column: 20
          },
          end: {
            line: 1106,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1105,
            column: 24
          },
          end: {
            line: 1105,
            column: 81
          }
        }, {
          start: {
            line: 1106,
            column: 24
          },
          end: {
            line: 1106,
            column: 26
          }
        }],
        line: 1104
      },
      "15": {
        loc: {
          start: {
            line: 1194,
            column: 20
          },
          end: {
            line: 1196,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1195,
            column: 24
          },
          end: {
            line: 1195,
            column: 82
          }
        }, {
          start: {
            line: 1196,
            column: 24
          },
          end: {
            line: 1196,
            column: 26
          }
        }],
        line: 1194
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "80bfbad71d221b69fca002c36b4f4c329dae4525"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1t50fij7pk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1t50fij7pk();

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }














cov_1t50fij7pk().s[0]++;
const WorkloadTableConfig = (switchView, meshSyncResources, k8sConfig, connectionMetadataState) => {
  cov_1t50fij7pk().f[0]++;
  const ping = (cov_1t50fij7pk().s[1]++, (0,_hooks_useKubernetesHook__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP)());
  cov_1t50fij7pk().s[2]++;
  return {
    PODS: {
      name: 'Pod',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['status.attribute', 's'], ['status.attribute', 's'], ['status.attribute', 'm'], ['metadata.namespace', 'm'], ['spec.attribute', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1t50fij7pk().f[1]++;
            cov_1t50fij7pk().s[3]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref) {
            let column = Object.assign({}, _ref);
            cov_1t50fij7pk().f[2]++;
            cov_1t50fij7pk().s[4]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1t50fij7pk().f[3]++;
            cov_1t50fij7pk().s[5]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1t50fij7pk().f[4]++;
                cov_1t50fij7pk().s[6]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1t50fij7pk().b[0][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1t50fij7pk().b[0][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          setCellProps: () => {
            cov_1t50fij7pk().f[5]++;
            cov_1t50fij7pk().s[7]++;
            return {
              style: {
                paddingRight: '0px',
                width: '0%'
              }
            };
          },
          setCellHeaderProps: () => {
            cov_1t50fij7pk().f[6]++;
            cov_1t50fij7pk().s[8]++;
            return {
              style: {
                paddingRight: '0px'
              }
            };
          },
          customHeadRender: function CustomHead(_ref2) {
            let column = Object.assign({}, _ref2);
            cov_1t50fij7pk().f[7]++;
            cov_1t50fij7pk().s[9]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Phase',
        options: {
          sort: false,
          setCellProps: () => {
            cov_1t50fij7pk().f[8]++;
            cov_1t50fij7pk().s[10]++;
            return {
              style: {
                paddingLeft: '0px'
              }
            };
          },
          setCellHeaderProps: () => {
            cov_1t50fij7pk().f[9]++;
            cov_1t50fij7pk().s[11]++;
            return {
              style: {
                paddingLeft: '0px'
              }
            };
          },
          customHeadRender: function CustomHead(_ref3) {
            let column = Object.assign({}, _ref3);
            cov_1t50fij7pk().f[10]++;
            cov_1t50fij7pk().s[12]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[11]++;
            let attribute = (cov_1t50fij7pk().s[13]++, JSON.parse(val));
            let phase = (cov_1t50fij7pk().s[14]++, attribute?.phase);
            cov_1t50fij7pk().s[15]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: phase
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Host IP',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref4) {
            let column = Object.assign({}, _ref4);
            cov_1t50fij7pk().f[12]++;
            cov_1t50fij7pk().s[16]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[13]++;
            let attribute = (cov_1t50fij7pk().s[17]++, JSON.parse(val));
            let hostIP = (cov_1t50fij7pk().s[18]++, attribute?.hostIP);
            cov_1t50fij7pk().s[19]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: hostIP
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Pod IP',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref5) {
            let column = Object.assign({}, _ref5);
            cov_1t50fij7pk().f[14]++;
            cov_1t50fij7pk().s[20]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[15]++;
            let attribute = (cov_1t50fij7pk().s[21]++, JSON.parse(val));
            let podIP = (cov_1t50fij7pk().s[22]++, attribute?.podIP);
            cov_1t50fij7pk().s[23]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: podIP
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref6) {
            let column = Object.assign({}, _ref6);
            cov_1t50fij7pk().f[16]++;
            cov_1t50fij7pk().s[24]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Node',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref7) {
            let column = Object.assign({}, _ref7);
            cov_1t50fij7pk().f[17]++;
            cov_1t50fij7pk().s[25]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[18]++;
            let attribute = (cov_1t50fij7pk().s[26]++, JSON.parse(val));
            let nodeName = (cov_1t50fij7pk().s[27]++, attribute?.nodeName);
            cov_1t50fij7pk().s[28]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_utils_utils__WEBPACK_IMPORTED_MODULE_6__/* .ResizableCell */ .cB, {
                value: nodeName
              })
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref8, sortColumn, columnMeta) {
            let {
              index
            } = _ref8,
                column = _objectWithoutProperties(_ref8, _excluded);

            cov_1t50fij7pk().f[19]++;
            cov_1t50fij7pk().s[29]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[20]++;
                cov_1t50fij7pk().s[30]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[21]++;
            let context = (cov_1t50fij7pk().s[31]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1t50fij7pk().s[32]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
                title: context.name,
                iconSrc: connectionMetadataState ? (cov_1t50fij7pk().b[1][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_9__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1t50fij7pk().b[1][1]++, ''),
                width: "10.5rem",
                handlePing: () => {
                  cov_1t50fij7pk().f[22]++;
                  cov_1t50fij7pk().s[33]++;
                  return ping(context.name, context.server, context.connection_id);
                }
              })
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref9) {
            let column = Object.assign({}, _ref9);
            cov_1t50fij7pk().f[23]++;
            cov_1t50fij7pk().s[34]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1t50fij7pk().f[24]++;
            let time = (cov_1t50fij7pk().s[35]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1t50fij7pk().s[36]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    DEPLOYMENT: {
      name: 'Deployment',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['status.attribute', 's'], ['spec.attribute', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1t50fij7pk().f[25]++;
            cov_1t50fij7pk().s[37]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref10) {
            let column = Object.assign({}, _ref10);
            cov_1t50fij7pk().f[26]++;
            cov_1t50fij7pk().s[38]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1t50fij7pk().f[27]++;
            cov_1t50fij7pk().s[39]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1t50fij7pk().f[28]++;
                cov_1t50fij7pk().s[40]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1t50fij7pk().b[2][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1t50fij7pk().b[2][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref11, sortColumn, columnMeta) {
            let {
              index
            } = _ref11,
                column = _objectWithoutProperties(_ref11, _excluded2);

            cov_1t50fij7pk().f[29]++;
            cov_1t50fij7pk().s[41]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[30]++;
                cov_1t50fij7pk().s[42]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref12) {
            let column = Object.assign({}, _ref12);
            cov_1t50fij7pk().f[31]++;
            cov_1t50fij7pk().s[43]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[32]++;
            let attribute = (cov_1t50fij7pk().s[44]++, JSON.parse(val));
            let replicas = (cov_1t50fij7pk().s[45]++, attribute?.replicas);
            cov_1t50fij7pk().s[46]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: replicas
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Restart Policy',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref13) {
            let column = Object.assign({}, _ref13);
            cov_1t50fij7pk().f[33]++;
            cov_1t50fij7pk().s[47]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[34]++;
            let attribute = (cov_1t50fij7pk().s[48]++, JSON.parse(val));
            let template = (cov_1t50fij7pk().s[49]++, attribute?.template);
            let spec = (cov_1t50fij7pk().s[50]++, template.spec);
            let restartPolicy = (cov_1t50fij7pk().s[51]++, spec.restartPolicy);
            cov_1t50fij7pk().s[52]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: restartPolicy
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref14) {
            let column = Object.assign({}, _ref14);
            cov_1t50fij7pk().f[35]++;
            cov_1t50fij7pk().s[53]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref15, sortColumn, columnMeta) {
            let {
              index
            } = _ref15,
                column = _objectWithoutProperties(_ref15, _excluded3);

            cov_1t50fij7pk().f[36]++;
            cov_1t50fij7pk().s[54]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[37]++;
                cov_1t50fij7pk().s[55]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[38]++;
            let context = (cov_1t50fij7pk().s[56]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1t50fij7pk().s[57]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
                title: context.name,
                iconSrc: connectionMetadataState ? (cov_1t50fij7pk().b[3][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_9__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1t50fij7pk().b[3][1]++, ''),
                handlePing: event => {
                  cov_1t50fij7pk().f[39]++;
                  cov_1t50fij7pk().s[58]++;
                  event.preventDefault();
                  cov_1t50fij7pk().s[59]++;
                  ping(context.name, context.server, context.connection_id);
                }
              })
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref16) {
            let column = Object.assign({}, _ref16);
            cov_1t50fij7pk().f[40]++;
            cov_1t50fij7pk().s[60]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1t50fij7pk().f[41]++;
            let time = (cov_1t50fij7pk().s[61]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1t50fij7pk().s[62]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    DAEMONSETS: {
      name: 'DaemonSet',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1t50fij7pk().f[42]++;
            cov_1t50fij7pk().s[63]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref17) {
            let column = Object.assign({}, _ref17);
            cov_1t50fij7pk().f[43]++;
            cov_1t50fij7pk().s[64]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1t50fij7pk().f[44]++;
            cov_1t50fij7pk().s[65]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1t50fij7pk().f[45]++;
                cov_1t50fij7pk().s[66]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1t50fij7pk().b[4][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1t50fij7pk().b[4][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref18, sortColumn, columnMeta) {
            let {
              index
            } = _ref18,
                column = _objectWithoutProperties(_ref18, _excluded4);

            cov_1t50fij7pk().f[46]++;
            cov_1t50fij7pk().s[67]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[47]++;
                cov_1t50fij7pk().s[68]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Node Selector',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref19) {
            let column = Object.assign({}, _ref19);
            cov_1t50fij7pk().f[48]++;
            cov_1t50fij7pk().s[69]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[49]++;
            let attribute = (cov_1t50fij7pk().s[70]++, JSON.parse(val));
            let template = (cov_1t50fij7pk().s[71]++, attribute?.template);
            let spec = (cov_1t50fij7pk().s[72]++, template.spec);
            let nodeSelector = (cov_1t50fij7pk().s[73]++, spec.nodeSelector);
            cov_1t50fij7pk().s[74]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: JSON.stringify(nodeSelector)
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref20) {
            let column = Object.assign({}, _ref20);
            cov_1t50fij7pk().f[50]++;
            cov_1t50fij7pk().s[75]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref21, sortColumn, columnMeta) {
            let {
              index
            } = _ref21,
                column = _objectWithoutProperties(_ref21, _excluded5);

            cov_1t50fij7pk().f[51]++;
            cov_1t50fij7pk().s[76]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[52]++;
                cov_1t50fij7pk().s[77]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[53]++;
            let context = (cov_1t50fij7pk().s[78]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1t50fij7pk().s[79]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_1t50fij7pk().b[5][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_9__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1t50fij7pk().b[5][1]++, ''),
              handlePing: () => {
                cov_1t50fij7pk().f[54]++;
                cov_1t50fij7pk().s[80]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref22) {
            let column = Object.assign({}, _ref22);
            cov_1t50fij7pk().f[55]++;
            cov_1t50fij7pk().s[81]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1t50fij7pk().f[56]++;
            let time = (cov_1t50fij7pk().s[82]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1t50fij7pk().s[83]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    STATEFULSETS: {
      name: 'StatefulSet',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['status.attribute', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1t50fij7pk().f[57]++;
            cov_1t50fij7pk().s[84]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref23) {
            let column = Object.assign({}, _ref23);
            cov_1t50fij7pk().f[58]++;
            cov_1t50fij7pk().s[85]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1t50fij7pk().f[59]++;
            cov_1t50fij7pk().s[86]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1t50fij7pk().f[60]++;
                cov_1t50fij7pk().s[87]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1t50fij7pk().b[6][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1t50fij7pk().b[6][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref24, sortColumn, columnMeta) {
            let {
              index
            } = _ref24,
                column = _objectWithoutProperties(_ref24, _excluded6);

            cov_1t50fij7pk().f[61]++;
            cov_1t50fij7pk().s[88]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[62]++;
                cov_1t50fij7pk().s[89]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref25) {
            let column = Object.assign({}, _ref25);
            cov_1t50fij7pk().f[63]++;
            cov_1t50fij7pk().s[90]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[64]++;
            let attribute = (cov_1t50fij7pk().s[91]++, JSON.parse(val));
            let replicas = (cov_1t50fij7pk().s[92]++, attribute?.replicas);
            cov_1t50fij7pk().s[93]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: replicas
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref26) {
            let column = Object.assign({}, _ref26);
            cov_1t50fij7pk().f[65]++;
            cov_1t50fij7pk().s[94]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref27, sortColumn, columnMeta) {
            let {
              index
            } = _ref27,
                column = _objectWithoutProperties(_ref27, _excluded7);

            cov_1t50fij7pk().f[66]++;
            cov_1t50fij7pk().s[95]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[67]++;
                cov_1t50fij7pk().s[96]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[68]++;
            let context = (cov_1t50fij7pk().s[97]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1t50fij7pk().s[98]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_1t50fij7pk().b[7][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_9__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1t50fij7pk().b[7][1]++, ''),
              handlePing: () => {
                cov_1t50fij7pk().f[69]++;
                cov_1t50fij7pk().s[99]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref28) {
            let column = Object.assign({}, _ref28);
            cov_1t50fij7pk().f[70]++;
            cov_1t50fij7pk().s[100]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1t50fij7pk().f[71]++;
            let time = (cov_1t50fij7pk().s[101]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1t50fij7pk().s[102]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    REPLICASETS: {
      name: 'ReplicaSet',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 's'], ['status.attribute', 's'], ['status.attribute', 'm'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1t50fij7pk().f[72]++;
            cov_1t50fij7pk().s[103]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref29) {
            let column = Object.assign({}, _ref29);
            cov_1t50fij7pk().f[73]++;
            cov_1t50fij7pk().s[104]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1t50fij7pk().f[74]++;
            cov_1t50fij7pk().s[105]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1t50fij7pk().f[75]++;
                cov_1t50fij7pk().s[106]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1t50fij7pk().b[8][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1t50fij7pk().b[8][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref30, sortColumn, columnMeta) {
            let {
              index
            } = _ref30,
                column = _objectWithoutProperties(_ref30, _excluded8);

            cov_1t50fij7pk().f[76]++;
            cov_1t50fij7pk().s[107]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[77]++;
                cov_1t50fij7pk().s[108]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Desired Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref31) {
            let column = Object.assign({}, _ref31);
            cov_1t50fij7pk().f[78]++;
            cov_1t50fij7pk().s[109]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[79]++;
            let attribute = (cov_1t50fij7pk().s[110]++, JSON.parse(val));
            let replicas = (cov_1t50fij7pk().s[111]++, attribute?.replicas);
            cov_1t50fij7pk().s[112]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: replicas
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Current Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref32) {
            let column = Object.assign({}, _ref32);
            cov_1t50fij7pk().f[80]++;
            cov_1t50fij7pk().s[113]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[81]++;
            let attribute = (cov_1t50fij7pk().s[114]++, JSON.parse(val));
            let replicas = (cov_1t50fij7pk().s[115]++, attribute?.replicas);
            cov_1t50fij7pk().s[116]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: replicas
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Ready Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref33) {
            let column = Object.assign({}, _ref33);
            cov_1t50fij7pk().f[82]++;
            cov_1t50fij7pk().s[117]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[83]++;
            let attribute = (cov_1t50fij7pk().s[118]++, JSON.parse(val));
            let readyReplicas = (cov_1t50fij7pk().s[119]++, attribute?.readyReplicas);
            cov_1t50fij7pk().s[120]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: readyReplicas
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref34) {
            let column = Object.assign({}, _ref34);
            cov_1t50fij7pk().f[84]++;
            cov_1t50fij7pk().s[121]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          sortThirdClickReset: true
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref35, sortColumn, columnMeta) {
            let {
              index
            } = _ref35,
                column = _objectWithoutProperties(_ref35, _excluded9);

            cov_1t50fij7pk().f[85]++;
            cov_1t50fij7pk().s[122]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[86]++;
                cov_1t50fij7pk().s[123]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[87]++;
            let context = (cov_1t50fij7pk().s[124]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1t50fij7pk().s[125]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_1t50fij7pk().b[9][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_9__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1t50fij7pk().b[9][1]++, ''),
              handlePing: () => {
                cov_1t50fij7pk().f[88]++;
                cov_1t50fij7pk().s[126]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref36) {
            let column = Object.assign({}, _ref36);
            cov_1t50fij7pk().f[89]++;
            cov_1t50fij7pk().s[127]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1t50fij7pk().f[90]++;
            let time = (cov_1t50fij7pk().s[128]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1t50fij7pk().s[129]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    REPLICATIONCONTROLLERS: {
      name: 'ReplicationController',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 's'], ['status.attribute', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1t50fij7pk().f[91]++;
            cov_1t50fij7pk().s[130]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref37) {
            let column = Object.assign({}, _ref37);
            cov_1t50fij7pk().f[92]++;
            cov_1t50fij7pk().s[131]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1t50fij7pk().f[93]++;
            cov_1t50fij7pk().s[132]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1t50fij7pk().f[94]++;
                cov_1t50fij7pk().s[133]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1t50fij7pk().b[10][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1t50fij7pk().b[10][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref38, sortColumn, columnMeta) {
            let {
              index
            } = _ref38,
                column = _objectWithoutProperties(_ref38, _excluded10);

            cov_1t50fij7pk().f[95]++;
            cov_1t50fij7pk().s[134]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[96]++;
                cov_1t50fij7pk().s[135]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Desired Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref39) {
            let column = Object.assign({}, _ref39);
            cov_1t50fij7pk().f[97]++;
            cov_1t50fij7pk().s[136]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[98]++;
            let attribute = (cov_1t50fij7pk().s[137]++, JSON.parse(val));
            let replicas = (cov_1t50fij7pk().s[138]++, attribute?.replicas);
            cov_1t50fij7pk().s[139]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: replicas
            });
          }
        }
      }, {
        name: 'status.attribute',
        label: 'Current Replicas',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref40) {
            let column = Object.assign({}, _ref40);
            cov_1t50fij7pk().f[99]++;
            cov_1t50fij7pk().s[140]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[100]++;
            let attribute = (cov_1t50fij7pk().s[141]++, JSON.parse(val));
            let replicas = (cov_1t50fij7pk().s[142]++, attribute?.replicas);
            cov_1t50fij7pk().s[143]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: replicas
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref41) {
            let column = Object.assign({}, _ref41);
            cov_1t50fij7pk().f[101]++;
            cov_1t50fij7pk().s[144]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref42, sortColumn, columnMeta) {
            let {
              index
            } = _ref42,
                column = _objectWithoutProperties(_ref42, _excluded11);

            cov_1t50fij7pk().f[102]++;
            cov_1t50fij7pk().s[145]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[103]++;
                cov_1t50fij7pk().s[146]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[104]++;
            let context = (cov_1t50fij7pk().s[147]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1t50fij7pk().s[148]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_1t50fij7pk().b[11][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_9__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1t50fij7pk().b[11][1]++, ''),
              handlePing: () => {
                cov_1t50fij7pk().f[105]++;
                cov_1t50fij7pk().s[149]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref43) {
            let column = Object.assign({}, _ref43);
            cov_1t50fij7pk().f[106]++;
            cov_1t50fij7pk().s[150]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1t50fij7pk().f[107]++;
            let time = (cov_1t50fij7pk().s[151]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1t50fij7pk().s[152]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    JOBS: {
      name: 'Job',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1t50fij7pk().f[108]++;
            cov_1t50fij7pk().s[153]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref44) {
            let column = Object.assign({}, _ref44);
            cov_1t50fij7pk().f[109]++;
            cov_1t50fij7pk().s[154]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1t50fij7pk().f[110]++;
            cov_1t50fij7pk().s[155]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1t50fij7pk().f[111]++;
                cov_1t50fij7pk().s[156]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1t50fij7pk().b[12][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1t50fij7pk().b[12][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref45, sortColumn, columnMeta) {
            let {
              index
            } = _ref45,
                column = _objectWithoutProperties(_ref45, _excluded12);

            cov_1t50fij7pk().f[112]++;
            cov_1t50fij7pk().s[157]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[113]++;
                cov_1t50fij7pk().s[158]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref46) {
            let column = Object.assign({}, _ref46);
            cov_1t50fij7pk().f[114]++;
            cov_1t50fij7pk().s[159]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref47, sortColumn, columnMeta) {
            let {
              index
            } = _ref47,
                column = _objectWithoutProperties(_ref47, _excluded13);

            cov_1t50fij7pk().f[115]++;
            cov_1t50fij7pk().s[160]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[116]++;
                cov_1t50fij7pk().s[161]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[117]++;
            let context = (cov_1t50fij7pk().s[162]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1t50fij7pk().s[163]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_1t50fij7pk().b[13][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_9__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1t50fij7pk().b[13][1]++, ''),
              handlePing: () => {
                cov_1t50fij7pk().f[118]++;
                cov_1t50fij7pk().s[164]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref48) {
            let column = Object.assign({}, _ref48);
            cov_1t50fij7pk().f[119]++;
            cov_1t50fij7pk().s[165]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1t50fij7pk().f[120]++;
            let time = (cov_1t50fij7pk().s[166]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1t50fij7pk().s[167]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: time
            });
          }
        }
      }]
    },
    CRONJOBS: {
      name: 'CronJob',
      colViews: [['id', 'na'], ['metadata.name', 'xs'], ['apiVersion', 's'], ['spec.attribute', 's'], ['spec.attribute', 's'], ['metadata.namespace', 'm'], ['cluster_id', 'xs'], ['metadata.creationTimestamp', 'l']],
      columns: [{
        name: 'id',
        label: 'ID',
        options: {
          display: false,
          customBodyRender: value => {
            cov_1t50fij7pk().f[121]++;
            cov_1t50fij7pk().s[168]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_components_DataFormatter__WEBPACK_IMPORTED_MODULE_10__/* .FormatId */ .h, {
              id: value
            });
          }
        }
      }, {
        name: 'metadata.name',
        label: 'Name',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref49) {
            let column = Object.assign({}, _ref49);
            cov_1t50fij7pk().f[122]++;
            cov_1t50fij7pk().s[169]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value, tableMeta) {
            cov_1t50fij7pk().f[123]++;
            cov_1t50fij7pk().s[170]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_view__WEBPACK_IMPORTED_MODULE_4__/* .Title */ .D, {
              onClick: () => {
                cov_1t50fij7pk().f[124]++;
                cov_1t50fij7pk().s[171]++;
                return switchView(_config__WEBPACK_IMPORTED_MODULE_3__/* .SINGLE_VIEW */ .IU, meshSyncResources[tableMeta.rowIndex]);
              },
              data: meshSyncResources[tableMeta.rowIndex] ? (cov_1t50fij7pk().b[14][0]++, meshSyncResources[tableMeta.rowIndex]?.component_metadata) : (cov_1t50fij7pk().b[14][1]++, {}),
              value: value
            });
          }
        }
      }, {
        name: 'apiVersion',
        label: 'API version',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref50, sortColumn, columnMeta) {
            let {
              index
            } = _ref50,
                column = _objectWithoutProperties(_ref50, _excluded14);

            cov_1t50fij7pk().f[125]++;
            cov_1t50fij7pk().s[172]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[126]++;
                cov_1t50fij7pk().s[173]++;
                return sortColumn(index);
              }
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Schedule',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref51) {
            let column = Object.assign({}, _ref51);
            cov_1t50fij7pk().f[127]++;
            cov_1t50fij7pk().s[174]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[128]++;
            let attribute = (cov_1t50fij7pk().s[175]++, JSON.parse(val));
            let schedule = (cov_1t50fij7pk().s[176]++, attribute?.schedule);
            cov_1t50fij7pk().s[177]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: schedule
            });
          }
        }
      }, {
        name: 'spec.attribute',
        label: 'Suspend',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref52) {
            let column = Object.assign({}, _ref52);
            cov_1t50fij7pk().f[129]++;
            cov_1t50fij7pk().s[178]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[130]++;
            let attribute = (cov_1t50fij7pk().s[179]++, JSON.parse(val));
            let suspend = (cov_1t50fij7pk().s[180]++, attribute?.suspend);
            cov_1t50fij7pk().s[181]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: suspend
            });
          }
        }
      }, {
        name: 'metadata.namespace',
        label: 'Namespace',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref53) {
            let column = Object.assign({}, _ref53);
            cov_1t50fij7pk().f[131]++;
            cov_1t50fij7pk().s[182]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          }
        }
      }, {
        name: 'cluster_id',
        label: 'Cluster',
        options: {
          sort: true,
          sortThirdClickReset: true,
          customHeadRender: function CustomHead(_ref54, sortColumn, columnMeta) {
            let {
              index
            } = _ref54,
                column = _objectWithoutProperties(_ref54, _excluded15);

            cov_1t50fij7pk().f[132]++;
            cov_1t50fij7pk().s[183]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .SortableTableCell */ .k, {
              index: index,
              columnData: column,
              columnMeta: columnMeta,
              onSort: () => {
                cov_1t50fij7pk().f[133]++;
                cov_1t50fij7pk().s[184]++;
                return sortColumn(index);
              }
            });
          },
          customBodyRender: function CustomBody(val) {
            cov_1t50fij7pk().f[134]++;
            let context = (cov_1t50fij7pk().s[185]++, (0,_utils_multi_ctx__WEBPACK_IMPORTED_MODULE_2__/* .getK8sContextFromClusterId */ .js)(val, k8sConfig));
            cov_1t50fij7pk().s[186]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_connections_ConnectionChip__WEBPACK_IMPORTED_MODULE_5__/* .TootltipWrappedConnectionChip */ .$h, {
              title: context.name,
              iconSrc: connectionMetadataState ? (cov_1t50fij7pk().b[15][0]++, connectionMetadataState[_utils_Enum__WEBPACK_IMPORTED_MODULE_9__/* .CONNECTION_KINDS.KUBERNETES */ .NJ.KUBERNETES]?.icon) : (cov_1t50fij7pk().b[15][1]++, ''),
              handlePing: () => {
                cov_1t50fij7pk().f[135]++;
                cov_1t50fij7pk().s[187]++;
                return ping(context.name, context.server, context.connection_id);
              }
            });
          }
        }
      }, {
        name: 'metadata.creationTimestamp',
        label: 'Age',
        options: {
          sort: false,
          customHeadRender: function CustomHead(_ref55) {
            let column = Object.assign({}, _ref55);
            cov_1t50fij7pk().f[136]++;
            cov_1t50fij7pk().s[188]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(_sortable_table_cell__WEBPACK_IMPORTED_MODULE_8__/* .DefaultTableCell */ .V, {
              columnData: column
            });
          },
          customBodyRender: function CustomBody(value) {
            cov_1t50fij7pk().f[137]++;
            let time = (cov_1t50fij7pk().s[189]++, (0,_utils_k8s_utils__WEBPACK_IMPORTED_MODULE_1__/* .timeAgo */ .Sy)(value));
            cov_1t50fij7pk().s[190]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
              children: time
            });
          }
        }
      }]
    }
  };
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 93429:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "x": () => (/* binding */ TabPanel)
/* harmony export */ });
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);
const _excluded = ["children", "value", "index"];

function cov_2lby42cyzl() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/tabpanel.js";
  var hash = "44c66d387dd9211b4710534ba40fb119b6ae0a55";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/tabpanel.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 47
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "1": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 19,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "TabPanel",
        decl: {
          start: {
            line: 3,
            column: 16
          },
          end: {
            line: 3,
            column: 24
          }
        },
        loc: {
          start: {
            line: 3,
            column: 32
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 3
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 7
          },
          end: {
            line: 17,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 7
          },
          end: {
            line: 13,
            column: 22
          }
        }, {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 21
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "44c66d387dd9211b4710534ba40fb119b6ae0a55"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lby42cyzl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2lby42cyzl();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



function TabPanel(props) {
  cov_2lby42cyzl().f[0]++;

  const _ref = (cov_2lby42cyzl().s[0]++, props),
        {
    children,
    value,
    index
  } = _ref,
        other = _objectWithoutProperties(_ref, _excluded);

  cov_2lby42cyzl().s[1]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("div", _objectSpread(_objectSpread({
    role: "tabpanel",
    hidden: value !== index,
    id: `simple-tabpanel-${index}`,
    "aria-labelledby": `simple-tab-${index}`
  }, other), {}, {
    children: (cov_2lby42cyzl().b[0][0]++, value === index) && (cov_2lby42cyzl().b[0][1]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Typography, {
      component: "div",
      style: {
        paddingTop: 2
      },
      children: children
    }))
  }));
}

/***/ }),

/***/ 88767:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => (/* binding */ Title),
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(72105);
/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_TooltipButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(40699);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _DataFormatter_NameValueTable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(73499);
/* harmony import */ var _khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7352);
/* harmony import */ var _khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _resources_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(96467);
/* harmony import */ var _configuratorComponents_MeshModel_NodeIcon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(58109);
/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(51104);
/* harmony import */ var _SistentWrapper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(75516);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_resources_config__WEBPACK_IMPORTED_MODULE_6__, _configuratorComponents_MeshModel_NodeIcon__WEBPACK_IMPORTED_MODULE_7__, _utils_utils__WEBPACK_IMPORTED_MODULE_8__]);
([_resources_config__WEBPACK_IMPORTED_MODULE_6__, _configuratorComponents_MeshModel_NodeIcon__WEBPACK_IMPORTED_MODULE_7__, _utils_utils__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_1j4mrg97tx() {
  var path = "/workspace/meshplay/ui/components/DashboardComponent/view.js";
  var hash = "d77936a9bd2958770e8a50928e1f4a1a0265ce0e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DashboardComponent/view.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 244,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 11
        }
      },
      "2": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "3": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "4": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "5": {
        start: {
          line: 24,
          column: 10
        },
        end: {
          line: 24,
          column: 25
        }
      },
      "6": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 18
        }
      },
      "7": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 67,
          column: 7
        }
      },
      "8": {
        start: {
          line: 30,
          column: 42
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "9": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "10": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "11": {
        start: {
          line: 54,
          column: 10
        },
        end: {
          line: 64,
          column: 12
        }
      },
      "12": {
        start: {
          line: 69,
          column: 18
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "13": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 101,
          column: 6
        }
      },
      "14": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 206,
          column: 3
        }
      },
      "15": {
        start: {
          line: 106,
          column: 48
        },
        end: {
          line: 106,
          column: 66
        }
      },
      "16": {
        start: {
          line: 109,
          column: 19
        },
        end: {
          line: 109,
          column: 21
        }
      },
      "17": {
        start: {
          line: 110,
          column: 27
        },
        end: {
          line: 110,
          column: 29
        }
      },
      "18": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "19": {
        start: {
          line: 113,
          column: 29
        },
        end: {
          line: 113,
          column: 68
        }
      },
      "20": {
        start: {
          line: 115,
          column: 10
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "21": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 21
        }
      },
      "22": {
        start: {
          line: 118,
          column: 17
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "23": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "24": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "25": {
        start: {
          line: 124,
          column: 14
        },
        end: {
          line: 124,
          column: 78
        }
      },
      "26": {
        start: {
          line: 125,
          column: 19
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "27": {
        start: {
          line: 126,
          column: 14
        },
        end: {
          line: 126,
          column: 80
        }
      },
      "28": {
        start: {
          line: 128,
          column: 14
        },
        end: {
          line: 128,
          column: 61
        }
      },
      "29": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "30": {
        start: {
          line: 135,
          column: 10
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "31": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 81
        }
      },
      "32": {
        start: {
          line: 136,
          column: 39
        },
        end: {
          line: 136,
          column: 79
        }
      },
      "33": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 20
        }
      },
      "34": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 145,
          column: 16
        }
      },
      "35": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 24
        }
      },
      "36": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 174,
          column: 8
        }
      },
      "37": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 171,
          column: 18
        }
      },
      "38": {
        start: {
          line: 152,
          column: 30
        },
        end: {
          line: 152,
          column: 44
        }
      },
      "39": {
        start: {
          line: 153,
          column: 33
        },
        end: {
          line: 153,
          column: 56
        }
      },
      "40": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 154,
          column: 58
        }
      },
      "41": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 169,
          column: 18
        }
      },
      "42": {
        start: {
          line: 177,
          column: 38
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "43": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 22
        }
      },
      "44": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 196,
          column: 7
        }
      },
      "45": {
        start: {
          line: 180,
          column: 27
        },
        end: {
          line: 180,
          column: 66
        }
      },
      "46": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "47": {
        start: {
          line: 187,
          column: 10
        },
        end: {
          line: 187,
          column: 55
        }
      },
      "48": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "49": {
        start: {
          line: 190,
          column: 10
        },
        end: {
          line: 190,
          column: 69
        }
      },
      "50": {
        start: {
          line: 192,
          column: 10
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "51": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 83
        }
      },
      "52": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 197,
          column: 21
        }
      },
      "53": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 205,
          column: 6
        }
      },
      "54": {
        start: {
          line: 208,
          column: 26
        },
        end: {
          line: 221,
          column: 3
        }
      },
      "55": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 220,
          column: 6
        }
      },
      "56": {
        start: {
          line: 214,
          column: 25
        },
        end: {
          line: 214,
          column: 42
        }
      },
      "57": {
        start: {
          line: 223,
          column: 26
        },
        end: {
          line: 225,
          column: 3
        }
      },
      "58": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 17
        }
      },
      "59": {
        start: {
          line: 227,
          column: 2
        },
        end: {
          line: 243,
          column: 4
        }
      },
      "60": {
        start: {
          line: 248,
          column: 21
        },
        end: {
          line: 273,
          column: 1
        }
      },
      "61": {
        start: {
          line: 249,
          column: 34
        },
        end: {
          line: 249,
          column: 49
        }
      },
      "62": {
        start: {
          line: 250,
          column: 2
        },
        end: {
          line: 272,
          column: 4
        }
      },
      "63": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 260,
          column: 42
        }
      },
      "64": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 261,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 244,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "RenderDynamicTable",
        decl: {
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 29
          }
        },
        loc: {
          start: {
            line: 20,
            column: 42
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 32
          }
        },
        loc: {
          start: {
            line: 22,
            column: 40
          },
          end: {
            line: 26,
            column: 7
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 42
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 30
      },
      "5": {
        name: "CustomBody",
        decl: {
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 37,
            column: 45
          }
        },
        loc: {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 65,
            column: 9
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 95,
            column: 26
          },
          end: {
            line: 95,
            column: 27
          }
        },
        loc: {
          start: {
            line: 95,
            column: 32
          },
          end: {
            line: 95,
            column: 34
          }
        },
        line: 95
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 104,
            column: 23
          },
          end: {
            line: 104,
            column: 24
          }
        },
        loc: {
          start: {
            line: 104,
            column: 32
          },
          end: {
            line: 206,
            column: 3
          }
        },
        line: 104
      },
      "8": {
        name: "ProcessObjForKeyValTable",
        decl: {
          start: {
            line: 105,
            column: 13
          },
          end: {
            line: 105,
            column: 37
          }
        },
        loc: {
          start: {
            line: 105,
            column: 43
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 105
      },
      "9": {
        name: "processObj",
        decl: {
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 25
          }
        },
        loc: {
          start: {
            line: 108,
            column: 47
          },
          end: {
            line: 141,
            column: 7
          }
        },
        line: 108
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 136,
            column: 29
          },
          end: {
            line: 136,
            column: 30
          }
        },
        loc: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 136,
            column: 79
          }
        },
        line: 136
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 143,
            column: 22
          },
          end: {
            line: 143,
            column: 23
          }
        },
        loc: {
          start: {
            line: 143,
            column: 28
          },
          end: {
            line: 145,
            column: 7
          }
        },
        line: 143
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 149,
            column: 29
          },
          end: {
            line: 149,
            column: 30
          }
        },
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 171,
            column: 18
          }
        },
        line: 150
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 151,
            column: 40
          }
        },
        loc: {
          start: {
            line: 151,
            column: 69
          },
          end: {
            line: 170,
            column: 15
          }
        },
        line: 151
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 177,
            column: 38
          },
          end: {
            line: 177,
            column: 39
          }
        },
        loc: {
          start: {
            line: 177,
            column: 63
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 177
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 208,
            column: 27
          }
        },
        loc: {
          start: {
            line: 208,
            column: 32
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 208
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 214,
            column: 19
          },
          end: {
            line: 214,
            column: 20
          }
        },
        loc: {
          start: {
            line: 214,
            column: 25
          },
          end: {
            line: 214,
            column: 42
          }
        },
        line: 214
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 223,
            column: 26
          },
          end: {
            line: 223,
            column: 27
          }
        },
        loc: {
          start: {
            line: 223,
            column: 32
          },
          end: {
            line: 225,
            column: 3
          }
        },
        line: 223
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 248,
            column: 21
          },
          end: {
            line: 248,
            column: 22
          }
        },
        loc: {
          start: {
            line: 248,
            column: 51
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 248
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 260,
            column: 20
          },
          end: {
            line: 260,
            column: 21
          }
        },
        loc: {
          start: {
            line: 260,
            column: 26
          },
          end: {
            line: 260,
            column: 42
          }
        },
        line: 260
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 261,
            column: 20
          },
          end: {
            line: 261,
            column: 21
          }
        },
        loc: {
          start: {
            line: 261,
            column: 26
          },
          end: {
            line: 261,
            column: 43
          }
        },
        line: 261
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 36
          }
        }, {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 36,
            column: 43
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 59,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 67
          },
          end: {
            line: 59,
            column: 88
          }
        }, {
          start: {
            line: 59,
            column: 91
          },
          end: {
            line: 59,
            column: 96
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 59,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 59,
            column: 46
          }
        }, {
          start: {
            line: 59,
            column: 50
          },
          end: {
            line: 59,
            column: 64
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 108,
            column: 31
          },
          end: {
            line: 108,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 108,
            column: 43
          },
          end: {
            line: 108,
            column: 45
          }
        }],
        line: 108
      },
      "5": {
        loc: {
          start: {
            line: 113,
            column: 29
          },
          end: {
            line: 113,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 41
          },
          end: {
            line: 113,
            column: 62
          }
        }, {
          start: {
            line: 113,
            column: 65
          },
          end: {
            line: 113,
            column: 68
          }
        }],
        line: 113
      },
      "6": {
        loc: {
          start: {
            line: 115,
            column: 10
          },
          end: {
            line: 130,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 10
          },
          end: {
            line: 130,
            column: 11
          }
        }, {
          start: {
            line: 118,
            column: 17
          },
          end: {
            line: 130,
            column: 11
          }
        }],
        line: 115
      },
      "7": {
        loc: {
          start: {
            line: 118,
            column: 17
          },
          end: {
            line: 130,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 17
          },
          end: {
            line: 130,
            column: 11
          }
        }, {
          start: {
            line: 121,
            column: 17
          },
          end: {
            line: 130,
            column: 11
          }
        }],
        line: 118
      },
      "8": {
        loc: {
          start: {
            line: 118,
            column: 21
          },
          end: {
            line: 118,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 21
          },
          end: {
            line: 118,
            column: 46
          }
        }, {
          start: {
            line: 118,
            column: 50
          },
          end: {
            line: 118,
            column: 64
          }
        }],
        line: 118
      },
      "9": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        }, {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 129,
            column: 13
          }
        }],
        line: 123
      },
      "10": {
        loc: {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 129,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 129,
            column: 13
          }
        }, {
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 129,
            column: 13
          }
        }],
        line: 125
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 28
          }
        }, {
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 55
          }
        }],
        line: 134
      },
      "13": {
        loc: {
          start: {
            line: 135,
            column: 10
          },
          end: {
            line: 137,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 10
          },
          end: {
            line: 137,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 169,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 68
          },
          end: {
            line: 155,
            column: 72
          }
        }, {
          start: {
            line: 156,
            column: 18
          },
          end: {
            line: 168,
            column: 24
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 155,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 155,
            column: 40
          }
        }, {
          start: {
            line: 155,
            column: 44
          },
          end: {
            line: 155,
            column: 65
          }
        }],
        line: 155
      },
      "16": {
        loc: {
          start: {
            line: 177,
            column: 44
          },
          end: {
            line: 177,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 177,
            column: 56
          },
          end: {
            line: 177,
            column: 58
          }
        }],
        line: 177
      },
      "17": {
        loc: {
          start: {
            line: 180,
            column: 27
          },
          end: {
            line: 180,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 39
          },
          end: {
            line: 180,
            column: 60
          }
        }, {
          start: {
            line: 180,
            column: 63
          },
          end: {
            line: 180,
            column: 66
          }
        }],
        line: 180
      },
      "18": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "19": {
        loc: {
          start: {
            line: 182,
            column: 10
          },
          end: {
            line: 185,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 10
          },
          end: {
            line: 182,
            column: 30
          }
        }, {
          start: {
            line: 183,
            column: 10
          },
          end: {
            line: 183,
            column: 26
          }
        }, {
          start: {
            line: 184,
            column: 10
          },
          end: {
            line: 184,
            column: 38
          }
        }, {
          start: {
            line: 185,
            column: 10
          },
          end: {
            line: 185,
            column: 27
          }
        }],
        line: 182
      },
      "20": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: 191,
            column: 15
          },
          end: {
            line: 195,
            column: 9
          }
        }],
        line: 189
      },
      "21": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 37
          }
        }, {
          start: {
            line: 189,
            column: 41
          },
          end: {
            line: 189,
            column: 55
          }
        }],
        line: 189
      },
      "22": {
        loc: {
          start: {
            line: 192,
            column: 10
          },
          end: {
            line: 194,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 10
          },
          end: {
            line: 194,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "23": {
        loc: {
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 258,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 36
          },
          end: {
            line: 258,
            column: 47
          }
        }, {
          start: {
            line: 258,
            column: 50
          },
          end: {
            line: 258,
            column: 56
          }
        }],
        line: 258
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d77936a9bd2958770e8a50928e1f4a1a0265ce0e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1j4mrg97tx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1j4mrg97tx();













cov_1j4mrg97tx().s[0]++;

const View = props => {
  cov_1j4mrg97tx().f[0]++;
  const {
    // type,
    setView,
    resource,
    classes
  } = (cov_1j4mrg97tx().s[1]++, props);

  function RenderDynamicTable(key, value) {
    cov_1j4mrg97tx().f[1]++;
    const allKeys = (cov_1j4mrg97tx().s[2]++, value.reduce((keys, obj) => {
      cov_1j4mrg97tx().f[2]++;
      cov_1j4mrg97tx().s[3]++;
      Object.keys(obj).forEach(key => {
        cov_1j4mrg97tx().f[3]++;
        cov_1j4mrg97tx().s[4]++;

        if (!keys.includes(key)) {
          cov_1j4mrg97tx().b[0][0]++;
          cov_1j4mrg97tx().s[5]++;
          keys.push(key);
        } else {
          cov_1j4mrg97tx().b[0][1]++;
        }
      });
      cov_1j4mrg97tx().s[6]++;
      return keys;
    }, []));
    const columns = (cov_1j4mrg97tx().s[7]++, allKeys.map(key => {
      cov_1j4mrg97tx().f[4]++;
      cov_1j4mrg97tx().s[8]++;
      return {
        name: key,
        label: key,
        options: {
          filter: false,
          sort: false,
          display: key == 'id' ? (cov_1j4mrg97tx().b[1][0]++, false) : (cov_1j4mrg97tx().b[1][1]++, true),
          customBodyRender: function CustomBody(value) {
            cov_1j4mrg97tx().f[5]++;
            let parentStyle = (cov_1j4mrg97tx().s[9]++, {
              position: 'absolute',
              top: 0,
              right: 0,
              bottom: 0,
              left: 0,
              boxSizing: 'border-box',
              display: 'block',
              width: '100%'
            });
            let cellStyle = (cov_1j4mrg97tx().s[10]++, {
              boxSizing: 'border-box',
              overflow: 'hidden',
              textOverflow: 'ellipsis',
              whiteSpace: 'nowrap'
            });
            cov_1j4mrg97tx().s[11]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
              children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
                style: {
                  position: 'relative',
                  height: '20px'
                },
                children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
                  style: parentStyle,
                  children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
                    style: cellStyle,
                    children: (cov_1j4mrg97tx().b[3][0]++, typeof value === 'object') && (cov_1j4mrg97tx().b[3][1]++, value !== null) ? (cov_1j4mrg97tx().b[2][0]++, JSON.stringify(value)) : (cov_1j4mrg97tx().b[2][1]++, value)
                  })
                })
              })
            });
          }
        }
      };
    }));
    let options = (cov_1j4mrg97tx().s[12]++, {
      filter: false,
      download: false,
      print: false,
      search: false,
      viewColumns: false,
      selectableRows: 'none',
      pagination: false,
      responsive: 'standard',
      fixedHeader: true,
      resizableColumns: true
    });
    cov_1j4mrg97tx().s[13]++;
    return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)("div", {
        style: {
          margin: '2rem 0'
        },
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__.Typography, {
          style: {
            fontSize: '1.2rem',
            marginBottom: '1rem'
          },
          align: "left",
          children: key.toUpperCase()
        }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_SistentWrapper__WEBPACK_IMPORTED_MODULE_9__/* .UsesSistent */ .k, {
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_5__.ResponsiveDataTable, {
            classes: classes.muiRow,
            data: value,
            columns: columns,
            options: options,
            tableCols: columns,
            updateCols: () => {
              cov_1j4mrg97tx().f[6]++;
            },
            columnVisibility: {}
          })
        })]
      })
    });
  }

  cov_1j4mrg97tx().s[14]++;

  const RenderObject = obj => {
    cov_1j4mrg97tx().f[7]++;

    function ProcessObjForKeyValTable(obj) {
      cov_1j4mrg97tx().f[8]++;
      const [processedData, setProcessedData] = (cov_1j4mrg97tx().s[15]++, react__WEBPACK_IMPORTED_MODULE_0___default().useState([]));

      function processObj(obj, parentKey = (cov_1j4mrg97tx().b[4][0]++, '')) {
        cov_1j4mrg97tx().f[9]++;
        let rows = (cov_1j4mrg97tx().s[16]++, []);
        let currentGroup = (cov_1j4mrg97tx().s[17]++, []);
        cov_1j4mrg97tx().s[18]++;

        for (const [key, value] of Object.entries(obj)) {
          const currentKey = (cov_1j4mrg97tx().s[19]++, parentKey ? (cov_1j4mrg97tx().b[5][0]++, `${parentKey}.${key}`) : (cov_1j4mrg97tx().b[5][1]++, key));
          cov_1j4mrg97tx().s[20]++;

          if (Array.isArray(value)) {
            cov_1j4mrg97tx().b[6][0]++;
            cov_1j4mrg97tx().s[21]++;
            // Skip the key if the value is an array
            continue;
          } else {
            cov_1j4mrg97tx().b[6][1]++;
            cov_1j4mrg97tx().s[22]++;

            if ((cov_1j4mrg97tx().b[8][0]++, typeof value === 'object') && (cov_1j4mrg97tx().b[8][1]++, value !== null)) {
              cov_1j4mrg97tx().b[7][0]++;
              cov_1j4mrg97tx().s[23]++;
              // For objects, recursively process and add to the current group
              currentGroup.push(...processObj(value, currentKey));
            } else {
              cov_1j4mrg97tx().b[7][1]++;
              cov_1j4mrg97tx().s[24]++;

              // For non-objects, add to the rows directly
              if (key === 'attribute') {
                cov_1j4mrg97tx().b[9][0]++;
                cov_1j4mrg97tx().s[25]++;
                currentGroup.push(...processObj(JSON.parse(value), currentKey));
              } else {
                cov_1j4mrg97tx().b[9][1]++;
                cov_1j4mrg97tx().s[26]++;

                if (key === 'id') {
                  cov_1j4mrg97tx().b[10][0]++;
                  cov_1j4mrg97tx().s[27]++;
                  currentGroup.push({
                    name: currentKey,
                    value: value,
                    hide: true
                  });
                } else {
                  cov_1j4mrg97tx().b[10][1]++;
                  cov_1j4mrg97tx().s[28]++;
                  currentGroup.push({
                    name: currentKey,
                    value
                  });
                }
              }
            }
          }
        } // Group by the parent key


        cov_1j4mrg97tx().s[29]++;

        if ((cov_1j4mrg97tx().b[12][0]++, parentKey !== '') && (cov_1j4mrg97tx().b[12][1]++, currentGroup.length > 0)) {
          cov_1j4mrg97tx().b[11][0]++;
          cov_1j4mrg97tx().s[30]++;

          if (Array.isArray(currentGroup)) {
            cov_1j4mrg97tx().b[13][0]++;
            cov_1j4mrg97tx().s[31]++;
            setProcessedData(prev => {
              cov_1j4mrg97tx().f[10]++;
              cov_1j4mrg97tx().s[32]++;
              return [...prev, {
                [parentKey]: currentGroup
              }];
            });
          } else {
            cov_1j4mrg97tx().b[13][1]++;
          }
        } else {
          cov_1j4mrg97tx().b[11][1]++;
        }

        cov_1j4mrg97tx().s[33]++;
        return rows;
      }

      cov_1j4mrg97tx().s[34]++;
      react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {
        cov_1j4mrg97tx().f[11]++;
        cov_1j4mrg97tx().s[35]++;
        processObj(obj);
      }, [obj]);
      cov_1j4mrg97tx().s[36]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
        children: processedData.map((obj, index) => {
          cov_1j4mrg97tx().f[12]++;
          cov_1j4mrg97tx().s[37]++;
          return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
            children: Object.entries(obj).map(([key, value], innerIndex) => {
              cov_1j4mrg97tx().f[13]++;
              const parts = (cov_1j4mrg97tx().s[38]++, key.split('.'));
              const lastPart = (cov_1j4mrg97tx().s[39]++, parts[parts.length - 1]);
              const heading = (cov_1j4mrg97tx().s[40]++, lastPart.replace('_', ' '));
              cov_1j4mrg97tx().s[41]++;
              return (cov_1j4mrg97tx().b[15][0]++, value.length == 1) && (cov_1j4mrg97tx().b[15][1]++, value[0].hide == true) ? (cov_1j4mrg97tx().b[14][0]++, null) : (cov_1j4mrg97tx().b[14][1]++, /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)("div", {
                style: {
                  margin: '2rem 0'
                },
                children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__.Typography, {
                  style: {
                    fontSize: '.9rem',
                    marginBottom: '1rem',
                    textTransform: 'uppercase'
                  },
                  align: "left",
                  children: heading
                }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_DataFormatter_NameValueTable__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
                  rows: value
                })]
              }, innerIndex));
            })
          }, index);
        })
      });
    }

    cov_1j4mrg97tx().s[42]++;

    const ProcessObjForKeyDataTable = (obj, parentKey = (cov_1j4mrg97tx().b[16][0]++, '')) => {
      cov_1j4mrg97tx().f[14]++;
      let results = (cov_1j4mrg97tx().s[43]++, []);
      cov_1j4mrg97tx().s[44]++;

      for (const [key, value] of Object.entries(obj)) {
        const currentKey = (cov_1j4mrg97tx().s[45]++, parentKey ? (cov_1j4mrg97tx().b[17][0]++, `${parentKey}.${key}`) : (cov_1j4mrg97tx().b[17][1]++, key));
        cov_1j4mrg97tx().s[46]++;

        if ((cov_1j4mrg97tx().b[19][0]++, Array.isArray(value)) && (cov_1j4mrg97tx().b[19][1]++, value.length > 0) && (cov_1j4mrg97tx().b[19][2]++, typeof value[0] === 'object') && (cov_1j4mrg97tx().b[19][3]++, value[0] !== null)) {
          cov_1j4mrg97tx().b[18][0]++;
          cov_1j4mrg97tx().s[47]++;
          results.push(RenderDynamicTable(key, value));
        } else {
          cov_1j4mrg97tx().b[18][1]++;
        }

        cov_1j4mrg97tx().s[48]++;

        if ((cov_1j4mrg97tx().b[21][0]++, typeof value === 'object') && (cov_1j4mrg97tx().b[21][1]++, value !== null)) {
          cov_1j4mrg97tx().b[20][0]++;
          cov_1j4mrg97tx().s[49]++;
          results.push(ProcessObjForKeyDataTable(value, currentKey));
        } else {
          cov_1j4mrg97tx().b[20][1]++;
          cov_1j4mrg97tx().s[50]++;

          if (key === 'attribute') {
            cov_1j4mrg97tx().b[22][0]++;
            cov_1j4mrg97tx().s[51]++;
            results.push(ProcessObjForKeyDataTable(JSON.parse(value), currentKey));
          } else {
            cov_1j4mrg97tx().b[22][1]++;
          }
        }
      }

      cov_1j4mrg97tx().s[52]++;
      return results;
    };

    cov_1j4mrg97tx().s[53]++;
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
      children: [ProcessObjForKeyValTable(obj), ProcessObjForKeyDataTable(obj)]
    });
  };

  cov_1j4mrg97tx().s[54]++;

  const HeaderComponent = () => {
    cov_1j4mrg97tx().f[15]++;
    cov_1j4mrg97tx().s[55]++;
    return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_utils_TooltipButton__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, {
        title: "Back",
        placement: "left",
        onClick: () => {
          cov_1j4mrg97tx().f[16]++;
          cov_1j4mrg97tx().s[56]++;
          return setView(_resources_config__WEBPACK_IMPORTED_MODULE_6__/* .ALL_VIEW */ .s$);
        },
        style: {
          padding: '10px'
        },
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_material_ui_icons__WEBPACK_IMPORTED_MODULE_1__.ArrowBack, {})
      })
    });
  };

  cov_1j4mrg97tx().s[57]++;

  const ResourceMetrics = () => {
    cov_1j4mrg97tx().f[17]++;
    cov_1j4mrg97tx().s[58]++;
    return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {});
  };

  cov_1j4mrg97tx().s[59]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
      style: {
        margin: '1rem auto'
      },
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__.Paper, {
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(HeaderComponent, {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)("div", {
          style: {
            margin: '1rem clamp(0.2rem, 5%, 7rem)',
            paddingBottom: '1rem'
          },
          children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(ResourceMetrics, {}), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(RenderObject, {
            obj: resource
          })]
        })]
      })
    })
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (View);
cov_1j4mrg97tx().s[60]++;
const Title = ({
  onClick,
  data,
  value
}) => {
  cov_1j4mrg97tx().f[18]++;
  const [isHovered, setHovered] = (cov_1j4mrg97tx().s[61]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false));
  cov_1j4mrg97tx().s[62]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
    style: {
      color: 'inherit',
      cursor: 'pointer',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      textDecoration: isHovered ? (cov_1j4mrg97tx().b[23][0]++, 'underline') : (cov_1j4mrg97tx().b[23][1]++, 'none')
    },
    onMouseEnter: () => {
      cov_1j4mrg97tx().f[19]++;
      cov_1j4mrg97tx().s[63]++;
      return setHovered(true);
    },
    onMouseLeave: () => {
      cov_1j4mrg97tx().f[20]++;
      cov_1j4mrg97tx().s[64]++;
      return setHovered(false);
    },
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxs)("div", {
      onClick: onClick,
      style: {
        display: 'inherit',
        alignItems: 'center'
      },
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx("div", {
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_configuratorComponents_MeshModel_NodeIcon__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, {
          metadata: (0,_utils_utils__WEBPACK_IMPORTED_MODULE_8__/* .JsonParse */ .HW)(data)
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_10__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__.Typography, {
        style: {
          marginLeft: '0.50rem'
        },
        variant: "body2",
        children: value
      })]
    })
  });
};
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 73499:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ NameValueTable)
/* harmony export */ });
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48308);
/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(68103);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(clsx__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);
const _excluded = ["className"];

function cov_18a61awgr3() {
  var path = "/workspace/meshplay/ui/components/DataFormatter/NameValueTable.js";
  var hash = "9dcc73f065584c5ff9e04700e5653bc958b0bac1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/DataFormatter/NameValueTable.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 41
        },
        end: {
          line: 70,
          column: 1
        }
      },
      "2": {
        start: {
          line: 92,
          column: 18
        },
        end: {
          line: 92,
          column: 29
        }
      },
      "3": {
        start: {
          line: 93,
          column: 2
        },
        end: {
          line: 97,
          column: 4
        }
      },
      "4": {
        start: {
          line: 101,
          column: 2
        },
        end: {
          line: 115,
          column: 3
        }
      },
      "5": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 16
        }
      },
      "6": {
        start: {
          line: 103,
          column: 9
        },
        end: {
          line: 115,
          column: 3
        }
      },
      "7": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 44
        }
      },
      "8": {
        start: {
          line: 105,
          column: 9
        },
        end: {
          line: 115,
          column: 3
        }
      },
      "9": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 112,
          column: 6
        }
      },
      "10": {
        start: {
          line: 109,
          column: 10
        },
        end: {
          line: 109,
          column: 39
        }
      },
      "11": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 17
        }
      },
      "12": {
        start: {
          line: 119,
          column: 18
        },
        end: {
          line: 119,
          column: 29
        }
      },
      "13": {
        start: {
          line: 120,
          column: 57
        },
        end: {
          line: 120,
          column: 62
        }
      },
      "14": {
        start: {
          line: 122,
          column: 22
        },
        end: {
          line: 135,
          column: 3
        }
      },
      "15": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 133,
          column: 8
        }
      },
      "16": {
        start: {
          line: 125,
          column: 25
        },
        end: {
          line: 125,
          column: 30
        }
      },
      "17": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "18": {
        start: {
          line: 127,
          column: 10
        },
        end: {
          line: 127,
          column: 35
        }
      },
      "19": {
        start: {
          line: 129,
          column: 10
        },
        end: {
          line: 129,
          column: 28
        }
      },
      "20": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 27
        }
      },
      "21": {
        start: {
          line: 137,
          column: 2
        },
        end: {
          line: 206,
          column: 4
        }
      },
      "22": {
        start: {
          line: 145,
          column: 27
        },
        end: {
          line: 145,
          column: 32
        }
      },
      "23": {
        start: {
          line: 146,
          column: 10
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "24": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 37
        }
      },
      "25": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 30
        }
      },
      "26": {
        start: {
          line: 152,
          column: 10
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "27": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 24
        }
      },
      "28": {
        start: {
          line: 156,
          column: 23
        },
        end: {
          line: 156,
          column: 51
        }
      },
      "29": {
        start: {
          line: 157,
          column: 56
        },
        end: {
          line: 157,
          column: 82
        }
      },
      "30": {
        start: {
          line: 159,
          column: 36
        },
        end: {
          line: 159,
          column: 64
        }
      },
      "31": {
        start: {
          line: 161,
          column: 24
        },
        end: {
          line: 161,
          column: 39
        }
      },
      "32": {
        start: {
          line: 162,
          column: 27
        },
        end: {
          line: 162,
          column: 68
        }
      },
      "33": {
        start: {
          line: 163,
          column: 26
        },
        end: {
          line: 163,
          column: 73
        }
      },
      "34": {
        start: {
          line: 164,
          column: 10
        },
        end: {
          line: 202,
          column: 12
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 29
          },
          end: {
            line: 7,
            column: 30
          }
        },
        loc: {
          start: {
            line: 7,
            column: 41
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "ValueLabel",
        decl: {
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 91,
            column: 19
          }
        },
        loc: {
          start: {
            line: 91,
            column: 27
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 91
      },
      "2": {
        name: "Value",
        decl: {
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 100,
            column: 14
          }
        },
        loc: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 100
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 20
          }
        },
        loc: {
          start: {
            line: 109,
            column: 10
          },
          end: {
            line: 109,
            column: 39
          }
        },
        line: 109
      },
      "4": {
        name: "NameValueTable",
        decl: {
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 118,
            column: 38
          }
        },
        loc: {
          start: {
            line: 118,
            column: 46
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 118
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 133,
            column: 8
          }
        },
        line: 124
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 124,
            column: 18
          },
          end: {
            line: 124,
            column: 19
          }
        },
        loc: {
          start: {
            line: 124,
            column: 47
          },
          end: {
            line: 133,
            column: 7
          }
        },
        line: 124
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        loc: {
          start: {
            line: 144,
            column: 95
          },
          end: {
            line: 203,
            column: 9
          }
        },
        line: 144
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 101,
            column: 2
          },
          end: {
            line: 115,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 2
          },
          end: {
            line: 115,
            column: 3
          }
        }, {
          start: {
            line: 103,
            column: 9
          },
          end: {
            line: 115,
            column: 3
          }
        }],
        line: 101
      },
      "1": {
        loc: {
          start: {
            line: 103,
            column: 9
          },
          end: {
            line: 115,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 9
          },
          end: {
            line: 115,
            column: 3
          }
        }, {
          start: {
            line: 105,
            column: 9
          },
          end: {
            line: 115,
            column: 3
          }
        }],
        line: 103
      },
      "2": {
        loc: {
          start: {
            line: 105,
            column: 9
          },
          end: {
            line: 115,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 9
          },
          end: {
            line: 115,
            column: 3
          }
        }, {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 115,
            column: 3
          }
        }],
        line: 105
      },
      "3": {
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 35
          },
          end: {
            line: 124,
            column: 40
          }
        }],
        line: 124
      },
      "4": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: 128,
            column: 15
          },
          end: {
            line: 130,
            column: 9
          }
        }],
        line: 126
      },
      "5": {
        loc: {
          start: {
            line: 144,
            column: 24
          },
          end: {
            line: 144,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 31
          },
          end: {
            line: 144,
            column: 36
          }
        }],
        line: 144
      },
      "6": {
        loc: {
          start: {
            line: 144,
            column: 38
          },
          end: {
            line: 144,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 59
          },
          end: {
            line: 144,
            column: 64
          }
        }],
        line: 144
      },
      "7": {
        loc: {
          start: {
            line: 144,
            column: 66
          },
          end: {
            line: 144,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 83
          },
          end: {
            line: 144,
            column: 85
          }
        }],
        line: 144
      },
      "8": {
        loc: {
          start: {
            line: 146,
            column: 10
          },
          end: {
            line: 150,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 10
          },
          end: {
            line: 150,
            column: 11
          }
        }, {
          start: {
            line: 148,
            column: 17
          },
          end: {
            line: 150,
            column: 11
          }
        }],
        line: 146
      },
      "9": {
        loc: {
          start: {
            line: 152,
            column: 10
          },
          end: {
            line: 154,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 10
          },
          end: {
            line: 154,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "10": {
        loc: {
          start: {
            line: 157,
            column: 56
          },
          end: {
            line: 157,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 56
          },
          end: {
            line: 157,
            column: 76
          }
        }, {
          start: {
            line: 157,
            column: 80
          },
          end: {
            line: 157,
            column: 82
          }
        }],
        line: 157
      },
      "11": {
        loc: {
          start: {
            line: 159,
            column: 36
          },
          end: {
            line: 159,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 36
          },
          end: {
            line: 159,
            column: 54
          }
        }, {
          start: {
            line: 159,
            column: 58
          },
          end: {
            line: 159,
            column: 64
          }
        }],
        line: 159
      },
      "12": {
        loc: {
          start: {
            line: 171,
            column: 20
          },
          end: {
            line: 171,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 40
          },
          end: {
            line: 171,
            column: 42
          }
        }, {
          start: {
            line: 171,
            column: 45
          },
          end: {
            line: 171,
            column: 46
          }
        }],
        line: 171
      },
      "13": {
        loc: {
          start: {
            line: 174,
            column: 18
          },
          end: {
            line: 174,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 25
          },
          end: {
            line: 174,
            column: 45
          }
        }, {
          start: {
            line: 174,
            column: 48
          },
          end: {
            line: 174,
            column: 50
          }
        }],
        line: 174
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 18
          },
          end: {
            line: 176,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 39
          },
          end: {
            line: 176,
            column: 59
          }
        }, {
          start: {
            line: 176,
            column: 62
          },
          end: {
            line: 176,
            column: 64
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 200,
            column: 15
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 181,
            column: 33
          }
        }, {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 199,
            column: 23
          }
        }],
        line: 181
      },
      "16": {
        loc: {
          start: {
            line: 190,
            column: 20
          },
          end: {
            line: 190,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 27
          },
          end: {
            line: 190,
            column: 47
          }
        }, {
          start: {
            line: 190,
            column: 50
          },
          end: {
            line: 190,
            column: 52
          }
        }],
        line: 190
      },
      "17": {
        loc: {
          start: {
            line: 192,
            column: 20
          },
          end: {
            line: 192,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 32
          },
          end: {
            line: 192,
            column: 41
          }
        }, {
          start: {
            line: 192,
            column: 44
          },
          end: {
            line: 192,
            column: 46
          }
        }],
        line: 192
      },
      "18": {
        loc: {
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 41
          },
          end: {
            line: 193,
            column: 61
          }
        }, {
          start: {
            line: 193,
            column: 64
          },
          end: {
            line: 193,
            column: 66
          }
        }],
        line: 193
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9dcc73f065584c5ff9e04700e5653bc958b0bac1"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18a61awgr3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_18a61awgr3();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




 // import { ValueLabel } from '../Label';




const useStyles = (cov_18a61awgr3().s[0]++, (0,_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__.makeStyles)(theme => {
  cov_18a61awgr3().f[0]++;
  cov_18a61awgr3().s[1]++;
  return {
    metadataNameCell: {
      textTransform: 'uppercase',
      fontSize: '1rem',
      textAlign: 'left',
      maxWidth: '100%',
      minWidth: '10rem',
      verticalAlign: 'top',
      color: theme.palette.text.secondary,
      borderBottom: `1px solid ${theme.palette.divider}`,
      padding: '7px 12px',
      [theme.breakpoints.down('sm')]: {
        color: theme.palette.text.primary,
        fontSize: '1rem',
        minWidth: '100%',
        width: '100%',
        maxWidth: '100%',
        display: 'block',
        borderTop: `1px solid ${theme.palette.divider}`,
        borderBottom: `none`
      }
    },
    metadataCell: {
      width: '100%',
      verticalAlign: 'top',
      fontSize: '1rem',
      overflowWrap: 'anywhere',
      padding: '7px 12px',
      borderBottom: `1px solid ${theme.palette.divider}`,
      [theme.breakpoints.down('sm')]: {
        color: theme.palette.text.secondary,
        minWidth: '100%',
        width: '100%',
        maxWidth: '100%',
        display: 'block',
        marginBottom: '2rem',
        borderBottom: `none`
      }
    },
    metadataRow: {
      borderBottom: `1px solid ${theme.palette.divider}`
    },
    metadataLast: {
      borderBottom: 'none'
    },
    table: {
      border: '1px solid #e7e7e7',
      borderRadius: theme.shape.borderRadius,
      backgroundColor: theme.palette.secondary.elevatedComponents2,
      padding: '0.375rem',
      width: '98%'
    },
    highlightRow: {
      color: theme.palette.tables.head.color,
      fontWeight: 'bold',
      background: theme.palette.tables.head.background
    },
    valueLabel: {
      color: theme.palette.text.primary,
      fontSize: theme.typography.pxToRem(16),
      wordBreak: 'break-word'
    }
  };
})); // export interface NameValueTableRow {
//   /** The name (key) for this row */
//   name: string | JSX.Element;
//   /** The value for this row */
//   value?: string | JSX.Element | JSX.Element[];
//   /** Whether this row should be hidden (can be a boolean or a function that will take the
//    * @param value and return a boolean) */
//   hide?: boolean | ((value: NameValueTableRow['value']) => boolean);
//   /** Extra properties to pass to the value cell */
//   valueCellProps?: GridProps;
//   /** Whether to highlight the row (used for titles, separators, etc.). */
//   withHighlightStyle?: boolean;
// // }
// export interface NameValueTableProps {
//   rows: NameValueTableRow[];
//   valueCellProps?: GridProps;
// }

function ValueLabel(props) {
  cov_18a61awgr3().f[1]++;
  const classes = (cov_18a61awgr3().s[2]++, useStyles());
  cov_18a61awgr3().s[3]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Typography, {
    className: classes.valueLabel,
    component: "span",
    children: props.children
  });
}

function Value({
  value
}) {
  cov_18a61awgr3().f[2]++;
  cov_18a61awgr3().s[4]++;

  if (typeof value === 'undefined') {
    cov_18a61awgr3().b[0][0]++;
    cov_18a61awgr3().s[5]++;
    return null;
  } else {
    cov_18a61awgr3().b[0][1]++;
    cov_18a61awgr3().s[6]++;

    if (typeof value === 'string') {
      cov_18a61awgr3().b[1][0]++;
      cov_18a61awgr3().s[7]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(ValueLabel, {
        children: value
      });
    } else {
      cov_18a61awgr3().b[1][1]++;
      cov_18a61awgr3().s[8]++;

      if (Array.isArray(value)) {
        cov_18a61awgr3().b[2][0]++;
        cov_18a61awgr3().s[9]++;
        return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {
          children: value.map((val, i) => {
            cov_18a61awgr3().f[3]++;
            cov_18a61awgr3().s[10]++;
            return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(Value, {
              value: val
            }, i);
          })
        });
      } else {
        cov_18a61awgr3().b[2][1]++;
        cov_18a61awgr3().s[11]++;
        return value;
      }
    }
  }
}

function NameValueTable(props) {
  cov_18a61awgr3().f[4]++;
  const classes = (cov_18a61awgr3().s[12]++, useStyles());
  const {
    rows,
    valueCellProps: globalValueCellProps
  } = (cov_18a61awgr3().s[13]++, props);
  const visibleRows = (cov_18a61awgr3().s[14]++, react__WEBPACK_IMPORTED_MODULE_3___default().useMemo(() => {
    cov_18a61awgr3().f[5]++;
    cov_18a61awgr3().s[15]++;
    return rows.filter(({
      value,
      hide = (cov_18a61awgr3().b[3][0]++, false)
    }) => {
      cov_18a61awgr3().f[6]++;
      let shouldHide = (cov_18a61awgr3().s[16]++, false);
      cov_18a61awgr3().s[17]++;

      if (typeof hide === 'function') {
        cov_18a61awgr3().b[4][0]++;
        cov_18a61awgr3().s[18]++;
        shouldHide = hide(value);
      } else {
        cov_18a61awgr3().b[4][1]++;
        cov_18a61awgr3().s[19]++;
        shouldHide = hide;
      }

      cov_18a61awgr3().s[20]++;
      return !shouldHide;
    });
  }, [rows]));
  cov_18a61awgr3().s[21]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Grid, {
    container: true,
    component: "dl" // mount a Definition List
    ,
    className: classes.table,
    children: visibleRows.map(({
      name,
      value,
      hide = (cov_18a61awgr3().b[5][0]++, false),
      withHighlightStyle = (cov_18a61awgr3().b[6][0]++, false),
      valueCellProps = (cov_18a61awgr3().b[7][0]++, {})
    }, i) => {
      cov_18a61awgr3().f[7]++;
      let shouldHide = (cov_18a61awgr3().s[22]++, false);
      cov_18a61awgr3().s[23]++;

      if (typeof hide === 'function') {
        cov_18a61awgr3().b[8][0]++;
        cov_18a61awgr3().s[24]++;
        shouldHide = hide(value);
      } else {
        cov_18a61awgr3().b[8][1]++;
        cov_18a61awgr3().s[25]++;
        shouldHide = hide;
      }

      cov_18a61awgr3().s[26]++;

      if (shouldHide) {
        cov_18a61awgr3().b[9][0]++;
        cov_18a61awgr3().s[27]++;
        return null;
      } else {
        cov_18a61awgr3().b[9][1]++;
      }

      const last = (cov_18a61awgr3().s[28]++, visibleRows.length === i + 1);

      const _ref = (cov_18a61awgr3().s[29]++, (cov_18a61awgr3().b[10][0]++, globalValueCellProps) || (cov_18a61awgr3().b[10][1]++, {})),
            {
        className
      } = _ref,
            otherValueCellProps = _objectWithoutProperties(_ref, _excluded);

      const hideValueGridItem = (cov_18a61awgr3().s[30]++, (cov_18a61awgr3().b[11][0]++, withHighlightStyle) && (cov_18a61awgr3().b[11][1]++, !value));
      const parts = (cov_18a61awgr3().s[31]++, name.split('.'));
      const lastPart = (cov_18a61awgr3().s[32]++, parts[parts.length - 1].replace('_', ' '));
      const keyname = (cov_18a61awgr3().s[33]++, lastPart.replace(/([a-zA-Z])(?=[A-Z])/g, '$1 '));
      cov_18a61awgr3().s[34]++;
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {
        children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Grid, {
          item: true,
          xs: 12,
          spacing: 1,
          sm: hideValueGridItem ? (cov_18a61awgr3().b[12][0]++, 12) : (cov_18a61awgr3().b[12][1]++, 4),
          component: "dt",
          className: clsx__WEBPACK_IMPORTED_MODULE_2___default()(last ? (cov_18a61awgr3().b[13][0]++, classes.metadataLast) : (cov_18a61awgr3().b[13][1]++, ''), classes.metadataNameCell, withHighlightStyle ? (cov_18a61awgr3().b[14][0]++, classes.highlightRow) : (cov_18a61awgr3().b[14][1]++, '')),
          children: keyname[0].toUpperCase() + keyname.substring(1)
        }, i), (cov_18a61awgr3().b[15][0]++, !hideValueGridItem) && (cov_18a61awgr3().b[15][1]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Grid, _objectSpread(_objectSpread(_objectSpread({
          item: true,
          xs: 12,
          sm: 8,
          spacing: 1,
          component: "dd",
          className: clsx__WEBPACK_IMPORTED_MODULE_2___default()(last ? (cov_18a61awgr3().b[16][0]++, classes.metadataLast) : (cov_18a61awgr3().b[16][1]++, ''), classes.metadataCell, className ? (cov_18a61awgr3().b[17][0]++, className) : (cov_18a61awgr3().b[17][1]++, ''), withHighlightStyle ? (cov_18a61awgr3().b[18][0]++, classes.highlightRow) : (cov_18a61awgr3().b[18][1]++, ''))
        }, otherValueCellProps), valueCellProps), {}, {
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(Value, {
            value: value
          })
        }), i + 10000))]
      });
    })
  });
}

/***/ }),

/***/ 13522:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(41664);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _css_icons_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52518);
/* harmony import */ var _material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(56518);
/* harmony import */ var _material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__);
function cov_1uc5qemxw6() {
  var path = "/workspace/meshplay/ui/components/General/ConnectClustersBtn.js";
  var hash = "f96ce11b6d09c1b010b9a342b487c5bb40f7fd7b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/General/ConnectClustersBtn.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 12,
          column: 2
        }
      },
      "1": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "2": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 28,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 14
          },
          end: {
            line: 7,
            column: 15
          }
        },
        loc: {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "ConnectClustersBtn",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 27
          }
        },
        loc: {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f96ce11b6d09c1b010b9a342b487c5bb40f7fd7b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uc5qemxw6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1uc5qemxw6();







cov_1uc5qemxw6().s[0]++;

const style = theme => {
  cov_1uc5qemxw6().f[0]++;
  cov_1uc5qemxw6().s[1]++;
  return {
    addIcon: {
      width: theme.spacing(2.5),
      paddingRight: theme.spacing(0.5)
    }
  };
};

function ConnectClustersBtn({
  classes
}) {
  cov_1uc5qemxw6().f[1]++;
  cov_1uc5qemxw6().s[2]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {
    href: "/settings",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Button, {
      type: "submit",
      variant: "contained",
      color: "primary",
      size: "large",
      style: {
        margin: '0.5rem 0.5rem',
        whiteSpace: 'nowrap'
      },
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx((_material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_4___default()), {
        style: _css_icons_styles__WEBPACK_IMPORTED_MODULE_3__/* .iconMedium */ .hv,
        className: classes.addIcon
      }), "Connect Clusters"]
    })
  });
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.withStyles)(style)(ConnectClustersBtn));

/***/ }),

/***/ 23756:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(41664);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _css_icons_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52518);
/* harmony import */ var _material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(56518);
/* harmony import */ var _material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__);
function cov_el0dpcwyz() {
  var path = "/workspace/meshplay/ui/components/General/CreateDesignBtn.js";
  var hash = "2d2a419c50ff83e2a3fa7fe57d4d4cb5165f052c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/General/CreateDesignBtn.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 12,
          column: 2
        }
      },
      "1": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "2": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 28,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 14
          },
          end: {
            line: 7,
            column: 15
          }
        },
        loc: {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "CreateDesignBtn",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 24
          }
        },
        loc: {
          start: {
            line: 14,
            column: 38
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2d2a419c50ff83e2a3fa7fe57d4d4cb5165f052c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_el0dpcwyz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_el0dpcwyz();







cov_el0dpcwyz().s[0]++;

const style = theme => {
  cov_el0dpcwyz().f[0]++;
  cov_el0dpcwyz().s[1]++;
  return {
    addIcon: {
      width: theme.spacing(2.5),
      paddingRight: theme.spacing(0.5)
    }
  };
};

function CreateDesignBtn({
  classes
}) {
  cov_el0dpcwyz().f[1]++;
  cov_el0dpcwyz().s[2]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {
    href: "/configuration/design",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.Button, {
      type: "submit",
      variant: "contained",
      color: "primary",
      size: "large",
      style: {
        margin: '0.5rem 0.5rem',
        whiteSpace: 'nowrap'
      },
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx((_material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_4___default()), {
        style: _css_icons_styles__WEBPACK_IMPORTED_MODULE_3__/* .iconMedium */ .hv,
        className: classes.addIcon
      }), "Create Design"]
    })
  });
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.withStyles)(style)(CreateDesignBtn));

/***/ }),

/***/ 10086:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "i": () => (/* binding */ MeshMapEarlyAccessCard)
/* harmony export */ });
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48308);
/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(17501);
/* harmony import */ var _material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71853);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6022);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var universal_cookie__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(51283);
/* harmony import */ var _pages_app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(62551);
/* harmony import */ var _themes_app__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(25879);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([universal_cookie__WEBPACK_IMPORTED_MODULE_6__, _pages_app__WEBPACK_IMPORTED_MODULE_7__]);
([universal_cookie__WEBPACK_IMPORTED_MODULE_6__, _pages_app__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
function cov_1e7lsqm13p() {
  var path = "/workspace/meshplay/ui/components/Popup.js";
  var hash = "8ec30b3de4a07c76290237acb04c1650242e0dd6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/Popup.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 38
        },
        end: {
          line: 74,
          column: 1
        }
      },
      "2": {
        start: {
          line: 76,
          column: 32
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "3": {
        start: {
          line: 77,
          column: 2
        },
        end: {
          line: 79,
          column: 3
        }
      },
      "4": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 17
        }
      },
      "5": {
        start: {
          line: 81,
          column: 2
        },
        end: {
          line: 84,
          column: 4
        }
      },
      "6": {
        start: {
          line: 83,
          column: 60
        },
        end: {
          line: 83,
          column: 83
        }
      },
      "7": {
        start: {
          line: 88,
          column: 30
        },
        end: {
          line: 88,
          column: 45
        }
      },
      "8": {
        start: {
          line: 89,
          column: 18
        },
        end: {
          line: 89,
          column: 43
        }
      },
      "9": {
        start: {
          line: 91,
          column: 24
        },
        end: {
          line: 93,
          column: 3
        }
      },
      "10": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 53
        }
      },
      "11": {
        start: {
          line: 95,
          column: 2
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "12": {
        start: {
          line: 97,
          column: 32
        },
        end: {
          line: 97,
          column: 97
        }
      },
      "13": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "14": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "15": {
        start: {
          line: 103,
          column: 18
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "16": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 22
        }
      },
      "17": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 37
        }
      },
      "18": {
        start: {
          line: 107,
          column: 17
        },
        end: {
          line: 107,
          column: 36
        }
      },
      "19": {
        start: {
          line: 110,
          column: 2
        },
        end: {
          line: 122,
          column: 3
        }
      },
      "20": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "21": {
        start: {
          line: 114,
          column: 10
        },
        end: {
          line: 114,
          column: 27
        }
      },
      "22": {
        start: {
          line: 115,
          column: 10
        },
        end: {
          line: 115,
          column: 26
        }
      },
      "23": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "24": {
        start: {
          line: 130,
          column: 21
        },
        end: {
          line: 130,
          column: 30
        }
      },
      "25": {
        start: {
          line: 131,
          column: 23
        },
        end: {
          line: 131,
          column: 53
        }
      },
      "26": {
        start: {
          line: 132,
          column: 18
        },
        end: {
          line: 132,
          column: 26
        }
      },
      "27": {
        start: {
          line: 133,
          column: 38
        },
        end: {
          line: 133,
          column: 58
        }
      },
      "28": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 134,
          column: 50
        }
      },
      "29": {
        start: {
          line: 135,
          column: 19
        },
        end: {
          line: 135,
          column: 30
        }
      },
      "30": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 26
        }
      },
      "31": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 87
        }
      },
      "32": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 147,
          column: 3
        }
      },
      "33": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "34": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 142,
          column: 62
        }
      },
      "35": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 35
        }
      },
      "36": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 24
        }
      },
      "37": {
        start: {
          line: 149,
          column: 2
        },
        end: {
          line: 158,
          column: 29
        }
      },
      "38": {
        start: {
          line: 150,
          column: 26
        },
        end: {
          line: 150,
          column: 71
        }
      },
      "39": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "40": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 51
        }
      },
      "41": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 36
        }
      },
      "42": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 29
        }
      },
      "43": {
        start: {
          line: 156,
          column: 6
        },
        end: {
          line: 156,
          column: 32
        }
      },
      "44": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 203,
          column: 4
        }
      },
      "45": {
        start: {
          line: 196,
          column: 28
        },
        end: {
          line: 196,
          column: 48
        }
      },
      "46": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 208,
          column: 2
        }
      },
      "47": {
        start: {
          line: 206,
          column: 36
        },
        end: {
          line: 208,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 26
          },
          end: {
            line: 11,
            column: 27
          }
        },
        loc: {
          start: {
            line: 11,
            column: 38
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 76,
            column: 33
          }
        },
        loc: {
          start: {
            line: 76,
            column: 58
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 76
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 52
          }
        },
        loc: {
          start: {
            line: 83,
            column: 60
          },
          end: {
            line: 83,
            column: 83
          }
        },
        line: 83
      },
      "3": {
        name: "MeshMapEarlyAccessCardPopup",
        decl: {
          start: {
            line: 87,
            column: 9
          },
          end: {
            line: 87,
            column: 36
          }
        },
        loc: {
          start: {
            line: 87,
            column: 63
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 87
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 91,
            column: 24
          },
          end: {
            line: 91,
            column: 25
          }
        },
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 93,
            column: 3
          }
        },
        line: 91
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        loc: {
          start: {
            line: 95,
            column: 18
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 30
          }
        },
        loc: {
          start: {
            line: 103,
            column: 35
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 103
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 107,
            column: 11
          },
          end: {
            line: 107,
            column: 12
          }
        },
        loc: {
          start: {
            line: 107,
            column: 17
          },
          end: {
            line: 107,
            column: 36
          }
        },
        line: 107
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 113,
            column: 20
          }
        },
        loc: {
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 116,
            column: 9
          }
        },
        line: 113
      },
      "9": {
        name: "MeshMapEarlyAccessCard",
        decl: {
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 125,
            column: 38
          }
        },
        loc: {
          start: {
            line: 129,
            column: 3
          },
          end: {
            line: 204,
            column: 1
          }
        },
        line: 129
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 127,
            column: 14
          },
          end: {
            line: 127,
            column: 15
          }
        },
        loc: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 22
          }
        },
        line: 127
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 140,
            column: 28
          },
          end: {
            line: 140,
            column: 29
          }
        },
        loc: {
          start: {
            line: 140,
            column: 35
          },
          end: {
            line: 147,
            column: 3
          }
        },
        line: 140
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 149,
            column: 11
          },
          end: {
            line: 149,
            column: 12
          }
        },
        loc: {
          start: {
            line: 149,
            column: 17
          },
          end: {
            line: 158,
            column: 3
          }
        },
        line: 149
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 196,
            column: 21
          },
          end: {
            line: 196,
            column: 22
          }
        },
        loc: {
          start: {
            line: 196,
            column: 28
          },
          end: {
            line: 196,
            column: 48
          }
        },
        line: 196
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 206,
            column: 24
          },
          end: {
            line: 206,
            column: 25
          }
        },
        loc: {
          start: {
            line: 206,
            column: 36
          },
          end: {
            line: 208,
            column: 1
          }
        },
        line: 206
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 77,
            column: 2
          },
          end: {
            line: 79,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 2
          },
          end: {
            line: 79,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "1": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 83,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 58
          }
        }, {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 84
          }
        }],
        line: 82
      },
      "2": {
        loc: {
          start: {
            line: 97,
            column: 32
          },
          end: {
            line: 97,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 32
          },
          end: {
            line: 97,
            column: 57
          }
        }, {
          start: {
            line: 97,
            column: 61
          },
          end: {
            line: 97,
            column: 97
          }
        }],
        line: 97
      },
      "3": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "4": {
        loc: {
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 122,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 122,
            column: 3
          }
        }, {
          start: {
            line: 120,
            column: 9
          },
          end: {
            line: 122,
            column: 3
          }
        }],
        line: 110
      },
      "5": {
        loc: {
          start: {
            line: 126,
            column: 2
          },
          end: {
            line: 126,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 14
          },
          end: {
            line: 126,
            column: 16
          }
        }],
        line: 126
      },
      "6": {
        loc: {
          start: {
            line: 127,
            column: 2
          },
          end: {
            line: 127,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 14
          },
          end: {
            line: 127,
            column: 22
          }
        }],
        line: 127
      },
      "7": {
        loc: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 138,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 36
          },
          end: {
            line: 138,
            column: 57
          }
        }, {
          start: {
            line: 138,
            column: 60
          },
          end: {
            line: 138,
            column: 87
          }
        }],
        line: 138
      },
      "8": {
        loc: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: 143,
            column: 11
          },
          end: {
            line: 145,
            column: 5
          }
        }],
        line: 141
      },
      "9": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: 154,
            column: 11
          },
          end: {
            line: 157,
            column: 5
          }
        }],
        line: 151
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8ec30b3de4a07c76290237acb04c1650242e0dd6"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e7lsqm13p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1e7lsqm13p();












const styles = (cov_1e7lsqm13p().s[0]++, (0,_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__.makeStyles)(theme => {
  cov_1e7lsqm13p().f[0]++;
  cov_1e7lsqm13p().s[1]++;
  return {
    paper: {
      position: 'fixed',
      width: 450,
      backgroundColor: theme.palette.secondary.mainBackground,
      border: '0px solid #000',
      boxShadow: theme.shadows[5],
      padding: theme.spacing(1, 2, 3, 4),
      right: 0,
      bottom: 0,
      borderRadius: 10,
      ['@media (max-width: 455px)']: {
        width: '100%'
      },
      zIndex: 1201
    },
    grid: {
      width: '100%'
    },
    designerImg: {
      height: '205px',
      width: 'auto',
      margin: 'auto',
      boxShadow: '1px 2px 2px hsl(173deg, 100%, 35% , 0.133), \
      2px 4px 4px hsl(173deg, 100%, 35% , 0.133),  \
      3px 6px 6px hsl(173deg, 100%, 35% , 0.133)'
    },
    header: {
      paddingBottom: '0.5rem',
      paddingTop: '0.6rem',
      fontWeight: 'bold',
      color: '#F6F8F8',
      ['@media (max-width: 455px)']: {
        fontSize: '1rem'
      }
    },
    closeButtonContainer: {
      display: 'flex',
      justifyContent: 'flex-end',
      whiteSpace: 'nowrap',
      alignItems: 'center',
      color: '#F6F8F8'
    },
    caption: {
      lineHeight: '1.2',
      paddingBottom: '15px',
      fontSize: '.85rem',
      textAlign: 'center',
      color: '#F6F8F8'
    },
    imgWrapper: {
      padding: '0px 10px 15px 0',
      display: 'flex'
    },
    headerWrapper: {
      marginBottom: 12,
      display: 'flex',
      justifyContent: 'space-between'
    },
    popupPrimaryBtn: {
      backgroundColor: _themes_app__WEBPACK_IMPORTED_MODULE_8__/* .Colors.keppelGreen */ .wL.keppelGreen
    }
  };
}));
cov_1e7lsqm13p().s[2]++;

const isMeshMapRegisteredUser = capabilitiesRegistry => {
  cov_1e7lsqm13p().f[1]++;
  cov_1e7lsqm13p().s[3]++;

  if (!capabilitiesRegistry) {
    cov_1e7lsqm13p().b[0][0]++;
    cov_1e7lsqm13p().s[4]++;
    return false;
  } else {
    cov_1e7lsqm13p().b[0][1]++;
  }

  cov_1e7lsqm13p().s[5]++;
  return (cov_1e7lsqm13p().b[1][0]++, capabilitiesRegistry.extensions?.navigator?.length > 0) && (cov_1e7lsqm13p().b[1][1]++, capabilitiesRegistry.extensions.navigator.find(ext => {
    cov_1e7lsqm13p().f[2]++;
    cov_1e7lsqm13p().s[6]++;
    return ext.title === 'MeshMap';
  }));
};

function MeshMapEarlyAccessCardPopup({
  capabilitiesRegistry
}) {
  cov_1e7lsqm13p().f[3]++;
  const [isOpen, setIsOpen] = (cov_1e7lsqm13p().s[7]++, (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false));
  const cookies = (cov_1e7lsqm13p().s[8]++, new universal_cookie__WEBPACK_IMPORTED_MODULE_6__["default"]('registered'));
  cov_1e7lsqm13p().s[9]++;

  const closeCallback = () => {
    cov_1e7lsqm13p().f[4]++;
    cov_1e7lsqm13p().s[10]++;
    cookies.set('registered', 'true', {
      path: '/'
    });
  };

  cov_1e7lsqm13p().s[11]++;
  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {
    cov_1e7lsqm13p().f[5]++;
    // cookies return string and not boolean thus truthy,falsy doesnt work as intended
    const isAlreadyRegistered = (cov_1e7lsqm13p().s[12]++, (cov_1e7lsqm13p().b[2][0]++, cookies.get('registered')) && (cov_1e7lsqm13p().b[2][1]++, cookies.get('registered') === 'true'));
    cov_1e7lsqm13p().s[13]++;

    if (isAlreadyRegistered) {
      cov_1e7lsqm13p().b[3][0]++;
      cov_1e7lsqm13p().s[14]++;
      return;
    } else {
      cov_1e7lsqm13p().b[3][1]++;
    }

    const timer = (cov_1e7lsqm13p().s[15]++, setTimeout(() => {
      cov_1e7lsqm13p().f[6]++;
      cov_1e7lsqm13p().s[16]++;
      setIsOpen(true);
    }, 10000)); // 10sec waiting time

    cov_1e7lsqm13p().s[17]++;
    return () => {
      cov_1e7lsqm13p().f[7]++;
      cov_1e7lsqm13p().s[18]++;
      return clearTimeout(timer);
    };
  }, []);
  cov_1e7lsqm13p().s[19]++;

  if (isOpen) {
    cov_1e7lsqm13p().b[4][0]++;
    cov_1e7lsqm13p().s[20]++;
    return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx(MeshMapEarlyAccessCard, {
      closeForm: () => {
        cov_1e7lsqm13p().f[8]++;
        cov_1e7lsqm13p().s[21]++;
        setIsOpen(false);
        cov_1e7lsqm13p().s[22]++;
        closeCallback();
      },
      capabilitiesRegistry: capabilitiesRegistry
    });
  } else {
    cov_1e7lsqm13p().b[4][1]++;
    cov_1e7lsqm13p().s[23]++;
    return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment, {});
  }
}

function MeshMapEarlyAccessCard({
  rootStyle = (cov_1e7lsqm13p().b[5][0]++, {}),
  closeForm = (cov_1e7lsqm13p().b[6][0]++, () => {
    cov_1e7lsqm13p().f[10]++;
  }),
  capabilitiesRegistry
}) {
  cov_1e7lsqm13p().f[9]++;
  const signUpText = (cov_1e7lsqm13p().s[24]++, 'Sign up');
  const signupHeader = (cov_1e7lsqm13p().s[25]++, 'Get early access to MeshMap!');
  const classes = (cov_1e7lsqm13p().s[26]++, styles());
  const [buttonText, setButtonText] = (cov_1e7lsqm13p().s[27]++, (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(signUpText));
  const [title, setTitle] = (cov_1e7lsqm13p().s[28]++, (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(signupHeader));
  const {
    push
  } = (cov_1e7lsqm13p().s[29]++, (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)());
  const theme = (cov_1e7lsqm13p().s[30]++, (0,_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.useTheme)());
  const popupImageSrc = (cov_1e7lsqm13p().s[31]++, theme.palette.type === 'dark' ? (cov_1e7lsqm13p().b[7][0]++, '/static/img/aws.svg') : (cov_1e7lsqm13p().b[7][1]++, '/static/img/aws-light.svg'));
  cov_1e7lsqm13p().s[32]++;

  const handleButtonClick = e => {
    cov_1e7lsqm13p().f[11]++;
    cov_1e7lsqm13p().s[33]++;

    if (buttonText === signUpText) {
      cov_1e7lsqm13p().b[8][0]++;
      cov_1e7lsqm13p().s[34]++;
      window.open('https://khulnasoft.com/meshmap', '_blank');
    } else {
      cov_1e7lsqm13p().b[8][1]++;
      cov_1e7lsqm13p().s[35]++;
      push(_pages_app__WEBPACK_IMPORTED_MODULE_7__.meshplayExtensionRoute);
    }

    cov_1e7lsqm13p().s[36]++;
    e.stopPropagation();
  };

  cov_1e7lsqm13p().s[37]++;
  (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(() => {
    cov_1e7lsqm13p().f[12]++;
    const isMeshMapUser = (cov_1e7lsqm13p().s[38]++, isMeshMapRegisteredUser(capabilitiesRegistry));
    cov_1e7lsqm13p().s[39]++;

    if (isMeshMapUser) {
      cov_1e7lsqm13p().b[9][0]++;
      cov_1e7lsqm13p().s[40]++;
      setTitle('Collaborative management enabled');
      cov_1e7lsqm13p().s[41]++;
      setButtonText('Open MeshMap');
    } else {
      cov_1e7lsqm13p().b[9][1]++;
      cov_1e7lsqm13p().s[42]++;
      setTitle(signupHeader);
      cov_1e7lsqm13p().s[43]++;
      setButtonText(signUpText);
    }
  }, [capabilitiesRegistry]);
  cov_1e7lsqm13p().s[44]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("div", {
    className: classes.paper,
    style: rootStyle,
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("div", {
      className: classes.headerWrapper,
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Typography, {
        className: classes.header,
        variant: "h6",
        children: title
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx("div", {
        className: classes.closeButtonContainer,
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.IconButton, {
          "aria-label": "Close",
          color: "inherit",
          onClick: closeForm,
          style: {
            height: '2.5rem'
          },
          children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx((_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_2___default()), {})
        }, "close")
      })]
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx("div", {
      className: classes.imgWrapper,
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx("img", {
        className: classes.designerImg,
        src: popupImageSrc
      })
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Typography, {
      className: classes.caption,
      variant: "subtitle1",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx("i", {
        children: "Friends don't let friends GitOps alone. Visually design and collaborate in real-time with other Meshplay users."
      })
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx("div", {
      style: {
        display: 'flex',
        justifyContent: 'flex-end'
      },
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Grid, {
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Button, {
          fullWidth: true,
          variant: "contained",
          color: "primary",
          className: classes.popupPrimaryBtn,
          onClick: e => {
            cov_1e7lsqm13p().f[13]++;
            cov_1e7lsqm13p().s[45]++;
            return handleButtonClick(e);
          },
          children: buttonText
        })
      })
    })]
  });
}
cov_1e7lsqm13p().s[46]++;

const mapStateToProps = state => {
  cov_1e7lsqm13p().f[14]++;
  cov_1e7lsqm13p().s[47]++;
  return {
    capabilitiesRegistry: state.get('capabilitiesRegistry')
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_5__.connect)(mapStateToProps)(MeshMapEarlyAccessCardPopup));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 86894:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$1": () => (/* binding */ RectangleShape),
/* harmony export */   "CD": () => (/* binding */ RhomboidShape),
/* harmony export */   "D$": () => (/* binding */ PentagonShape),
/* harmony export */   "D2": () => (/* binding */ HeptagonShape),
/* harmony export */   "E2": () => (/* binding */ TriangleShape),
/* harmony export */   "Fk": () => (/* binding */ VeeShape),
/* harmony export */   "J": () => (/* binding */ RoundDiamondShape),
/* harmony export */   "Kb": () => (/* binding */ StarShape),
/* harmony export */   "Qe": () => (/* binding */ OctagonShape),
/* harmony export */   "UP": () => (/* binding */ RoundTagShape),
/* harmony export */   "VZ": () => (/* binding */ RoundOctagonShape),
/* harmony export */   "Xb": () => (/* binding */ BottomRoundRectangleShape),
/* harmony export */   "Z6": () => (/* binding */ BarrelShape),
/* harmony export */   "Zf": () => (/* binding */ RoundRectangleShape),
/* harmony export */   "_3": () => (/* binding */ RoundTriangleShape),
/* harmony export */   "a7": () => (/* binding */ CutRectangle),
/* harmony export */   "aq": () => (/* binding */ TagShape),
/* harmony export */   "g": () => (/* binding */ RoundHeptagonShape),
/* harmony export */   "g6": () => (/* binding */ CylinderShape),
/* harmony export */   "kL": () => (/* binding */ PolygonShape),
/* harmony export */   "lL": () => (/* binding */ RightRhomboidShape),
/* harmony export */   "lZ": () => (/* binding */ RoundPentagonShape),
/* harmony export */   "le": () => (/* binding */ TallRoundRectangleShape),
/* harmony export */   "lm": () => (/* binding */ RoundHexagonShape),
/* harmony export */   "n": () => (/* binding */ CircleShape),
/* harmony export */   "yK": () => (/* binding */ DiamondShape),
/* harmony export */   "zP": () => (/* binding */ HexagonShape),
/* harmony export */   "zn": () => (/* binding */ ConcaveHexagonShape)
/* harmony export */ });
/* unused harmony export XWingShape */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);
function cov_2ymgyv0pa() {
  var path = "/workspace/meshplay/ui/components/configuratorComponents/MeshModel/DesignerDrawerNodeShapes.js";
  var hash = "b892bcfc59e2c9a2a47141a028a253afbd53204f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/configuratorComponents/MeshModel/DesignerDrawerNodeShapes.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 2
        },
        end: {
          line: 24,
          column: 4
        }
      },
      "1": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 36,
          column: 4
        }
      },
      "2": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 60,
          column: 4
        }
      },
      "3": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 72,
          column: 4
        }
      },
      "4": {
        start: {
          line: 75,
          column: 2
        },
        end: {
          line: 79,
          column: 4
        }
      },
      "5": {
        start: {
          line: 82,
          column: 2
        },
        end: {
          line: 86,
          column: 4
        }
      },
      "6": {
        start: {
          line: 90,
          column: 2
        },
        end: {
          line: 94,
          column: 4
        }
      },
      "7": {
        start: {
          line: 98,
          column: 2
        },
        end: {
          line: 118,
          column: 4
        }
      },
      "8": {
        start: {
          line: 122,
          column: 2
        },
        end: {
          line: 142,
          column: 4
        }
      },
      "9": {
        start: {
          line: 146,
          column: 2
        },
        end: {
          line: 156,
          column: 4
        }
      },
      "10": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 180,
          column: 4
        }
      },
      "11": {
        start: {
          line: 184,
          column: 2
        },
        end: {
          line: 203,
          column: 4
        }
      },
      "12": {
        start: {
          line: 207,
          column: 2
        },
        end: {
          line: 233,
          column: 4
        }
      },
      "13": {
        start: {
          line: 237,
          column: 2
        },
        end: {
          line: 252,
          column: 4
        }
      },
      "14": {
        start: {
          line: 256,
          column: 2
        },
        end: {
          line: 272,
          column: 4
        }
      },
      "15": {
        start: {
          line: 276,
          column: 2
        },
        end: {
          line: 292,
          column: 4
        }
      },
      "16": {
        start: {
          line: 296,
          column: 2
        },
        end: {
          line: 316,
          column: 4
        }
      },
      "17": {
        start: {
          line: 320,
          column: 2
        },
        end: {
          line: 331,
          column: 4
        }
      },
      "18": {
        start: {
          line: 335,
          column: 2
        },
        end: {
          line: 355,
          column: 4
        }
      },
      "19": {
        start: {
          line: 359,
          column: 2
        },
        end: {
          line: 379,
          column: 4
        }
      },
      "20": {
        start: {
          line: 383,
          column: 2
        },
        end: {
          line: 403,
          column: 4
        }
      },
      "21": {
        start: {
          line: 407,
          column: 2
        },
        end: {
          line: 427,
          column: 4
        }
      },
      "22": {
        start: {
          line: 431,
          column: 2
        },
        end: {
          line: 451,
          column: 4
        }
      },
      "23": {
        start: {
          line: 455,
          column: 2
        },
        end: {
          line: 471,
          column: 4
        }
      },
      "24": {
        start: {
          line: 475,
          column: 2
        },
        end: {
          line: 491,
          column: 4
        }
      },
      "25": {
        start: {
          line: 495,
          column: 2
        },
        end: {
          line: 515,
          column: 4
        }
      },
      "26": {
        start: {
          line: 519,
          column: 2
        },
        end: {
          line: 539,
          column: 4
        }
      },
      "27": {
        start: {
          line: 543,
          column: 2
        },
        end: {
          line: 558,
          column: 4
        }
      },
      "28": {
        start: {
          line: 562,
          column: 2
        },
        end: {
          line: 584,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "TriangleShape",
        decl: {
          start: {
            line: 3,
            column: 16
          },
          end: {
            line: 3,
            column: 29
          }
        },
        loc: {
          start: {
            line: 3,
            column: 49
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "RoundTriangleShape",
        decl: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 34
          }
        },
        loc: {
          start: {
            line: 27,
            column: 54
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "PentagonShape",
        decl: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 29
          }
        },
        loc: {
          start: {
            line: 39,
            column: 49
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 39
      },
      "3": {
        name: "RoundPentagonShape",
        decl: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 34
          }
        },
        loc: {
          start: {
            line: 63,
            column: 54
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 63
      },
      "4": {
        name: "RoundRectangleShape",
        decl: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 35
          }
        },
        loc: {
          start: {
            line: 74,
            column: 55
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 74
      },
      "5": {
        name: "RectangleShape",
        decl: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 30
          }
        },
        loc: {
          start: {
            line: 81,
            column: 50
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 81
      },
      "6": {
        name: "TallRoundRectangleShape",
        decl: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 89,
            column: 39
          }
        },
        loc: {
          start: {
            line: 89,
            column: 59
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 89
      },
      "7": {
        name: "BottomRoundRectangleShape",
        decl: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 97,
            column: 41
          }
        },
        loc: {
          start: {
            line: 97,
            column: 61
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 97
      },
      "8": {
        name: "CutRectangle",
        decl: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 28
          }
        },
        loc: {
          start: {
            line: 121,
            column: 48
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 121
      },
      "9": {
        name: "CircleShape",
        decl: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 27
          }
        },
        loc: {
          start: {
            line: 145,
            column: 47
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 145
      },
      "10": {
        name: "CylinderShape",
        decl: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 159,
            column: 29
          }
        },
        loc: {
          start: {
            line: 159,
            column: 49
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 159
      },
      "11": {
        name: "TagShape",
        decl: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 183,
            column: 24
          }
        },
        loc: {
          start: {
            line: 183,
            column: 44
          },
          end: {
            line: 204,
            column: 1
          }
        },
        line: 183
      },
      "12": {
        name: "RoundTagShape",
        decl: {
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 206,
            column: 29
          }
        },
        loc: {
          start: {
            line: 206,
            column: 49
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 206
      },
      "13": {
        name: "StarShape",
        decl: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 236,
            column: 25
          }
        },
        loc: {
          start: {
            line: 236,
            column: 45
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 236
      },
      "14": {
        name: "VeeShape",
        decl: {
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 255,
            column: 24
          }
        },
        loc: {
          start: {
            line: 255,
            column: 44
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 255
      },
      "15": {
        name: "HexagonShape",
        decl: {
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 28
          }
        },
        loc: {
          start: {
            line: 275,
            column: 48
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 275
      },
      "16": {
        name: "RoundHexagonShape",
        decl: {
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 295,
            column: 33
          }
        },
        loc: {
          start: {
            line: 295,
            column: 53
          },
          end: {
            line: 317,
            column: 1
          }
        },
        line: 295
      },
      "17": {
        name: "ConcaveHexagonShape",
        decl: {
          start: {
            line: 319,
            column: 16
          },
          end: {
            line: 319,
            column: 35
          }
        },
        loc: {
          start: {
            line: 319,
            column: 55
          },
          end: {
            line: 332,
            column: 1
          }
        },
        line: 319
      },
      "18": {
        name: "HeptagonShape",
        decl: {
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 334,
            column: 29
          }
        },
        loc: {
          start: {
            line: 334,
            column: 49
          },
          end: {
            line: 356,
            column: 1
          }
        },
        line: 334
      },
      "19": {
        name: "RoundHeptagonShape",
        decl: {
          start: {
            line: 358,
            column: 16
          },
          end: {
            line: 358,
            column: 34
          }
        },
        loc: {
          start: {
            line: 358,
            column: 54
          },
          end: {
            line: 380,
            column: 1
          }
        },
        line: 358
      },
      "20": {
        name: "OctagonShape",
        decl: {
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 382,
            column: 28
          }
        },
        loc: {
          start: {
            line: 382,
            column: 48
          },
          end: {
            line: 404,
            column: 1
          }
        },
        line: 382
      },
      "21": {
        name: "RoundOctagonShape",
        decl: {
          start: {
            line: 406,
            column: 16
          },
          end: {
            line: 406,
            column: 33
          }
        },
        loc: {
          start: {
            line: 406,
            column: 53
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 406
      },
      "22": {
        name: "PolygonShape",
        decl: {
          start: {
            line: 430,
            column: 16
          },
          end: {
            line: 430,
            column: 28
          }
        },
        loc: {
          start: {
            line: 430,
            column: 48
          },
          end: {
            line: 452,
            column: 1
          }
        },
        line: 430
      },
      "23": {
        name: "RhomboidShape",
        decl: {
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 454,
            column: 29
          }
        },
        loc: {
          start: {
            line: 454,
            column: 49
          },
          end: {
            line: 472,
            column: 1
          }
        },
        line: 454
      },
      "24": {
        name: "RightRhomboidShape",
        decl: {
          start: {
            line: 474,
            column: 16
          },
          end: {
            line: 474,
            column: 34
          }
        },
        loc: {
          start: {
            line: 474,
            column: 54
          },
          end: {
            line: 492,
            column: 1
          }
        },
        line: 474
      },
      "25": {
        name: "DiamondShape",
        decl: {
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 494,
            column: 28
          }
        },
        loc: {
          start: {
            line: 494,
            column: 48
          },
          end: {
            line: 516,
            column: 1
          }
        },
        line: 494
      },
      "26": {
        name: "RoundDiamondShape",
        decl: {
          start: {
            line: 518,
            column: 16
          },
          end: {
            line: 518,
            column: 33
          }
        },
        loc: {
          start: {
            line: 518,
            column: 53
          },
          end: {
            line: 540,
            column: 1
          }
        },
        line: 518
      },
      "27": {
        name: "BarrelShape",
        decl: {
          start: {
            line: 542,
            column: 16
          },
          end: {
            line: 542,
            column: 27
          }
        },
        loc: {
          start: {
            line: 542,
            column: 47
          },
          end: {
            line: 559,
            column: 1
          }
        },
        line: 542
      },
      "28": {
        name: "XWingShape",
        decl: {
          start: {
            line: 561,
            column: 16
          },
          end: {
            line: 561,
            column: 26
          }
        },
        loc: {
          start: {
            line: 561,
            column: 38
          },
          end: {
            line: 585,
            column: 1
          }
        },
        line: 561
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b892bcfc59e2c9a2a47141a028a253afbd53204f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ymgyv0pa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2ymgyv0pa();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




function TriangleShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[0]++;
  cov_2ymgyv0pa().s[0]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8277)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8277)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M20.0137 0L30.6529 20.0141L40 40H20.0137H0L9.37457 20.0141L20.0137 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8277",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8277",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function RoundTriangleShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[1]++;
  cov_2ymgyv0pa().s[1]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
      d: "M26.0622 3.5C23.3679 -1.16667 16.6321 -1.16667 13.9378 3.5L1.06218 25.8013C-1.63212 30.4679 1.73576 36.3013 7.12436 36.3013H32.8756C38.2642 36.3013 41.6321 30.4679 38.9378 25.8013L26.0622 3.5Z",
      fill: color
    }, styles))
  });
}
function PentagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[2]++;
  cov_2ymgyv0pa().s[2]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8232)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8232)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M19.9862 0L0 15.2712L7.62958 40H32.3428L40 15.2712L19.9862 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8232",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8232",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function RoundPentagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[3]++;
  cov_2ymgyv0pa().s[3]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
      d: "M17.6249 0.76393C19.0411 -0.254644 20.9589 -0.254642 22.3751 0.76393L38.3341 12.2416C39.7503 13.2602 40.3429 15.0657 39.8019 16.7138L33.7063 35.2851C33.1653 36.9332 31.6137 38.049 29.8631 38.049H10.1369C8.38627 38.049 6.83477 36.9332 6.29382 35.2851L0.198047 16.7138C-0.342914 15.0657 0.249705 13.2602 1.66596 12.2416L17.6249 0.76393Z",
      fill: color
    }, styles))
  });
}
function RoundRectangleShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[4]++;
  cov_2ymgyv0pa().s[4]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", _objectSpread({
      width: "40",
      height: "40",
      rx: "9",
      fill: color
    }, styles))
  });
}
function RectangleShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[5]++;
  cov_2ymgyv0pa().s[5]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", _objectSpread({
      width: "40",
      height: "40",
      fill: color
    }, styles))
  });
}
function TallRoundRectangleShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[6]++;
  cov_2ymgyv0pa().s[6]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("svg", {
    width: "41",
    height: "40",
    viewBox: "0 0 32 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", _objectSpread({
      width: "32",
      height: "40",
      rx: "5",
      fill: color
    }, styles))
  });
}
function BottomRoundRectangleShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[7]++;
  cov_2ymgyv0pa().s[7]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8265)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8265)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M0 0H40V32.6565C40 36.7177 36.7177 40 32.6565 40H7.34353C3.28234 40 0 36.7177 0 32.6565V0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8265",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8265",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function CutRectangle({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[8]++;
  cov_2ymgyv0pa().s[8]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8261)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8261)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M32.4487 0H7.52394L0 7.36623V32.6338L6.97674 40H32.9959L40 32.3836V7.6164L32.4487 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8261",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8261",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function CircleShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[9]++;
  cov_2ymgyv0pa().s[9]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M11.3661 38.0349C1.40555 33.2661 -2.80363 21.3246 1.96473 11.3628C4.25461 6.57899 8.35082 2.90088 13.3523 1.13757C18.3537 -0.62574 23.8507 -0.329761 28.6338 1.96035C38.5946 6.72929 42.8037 18.6709 38.0351 28.6325C33.2669 38.5944 21.3267 42.804 11.3661 38.0349Z",
      fill: color
    }, styles))
  });
}
function CylinderShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[10]++;
  cov_2ymgyv0pa().s[10]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "40",
    height: "40",
    viewBox: "0 0 34 40",
    fill: "none",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
      d: "M1.5 12.0547C2.37103 13.2965 3.7598 14.3745 5.46099 15.2332C8.43989 16.7368 12.5203 17.6523 17 17.6523C21.4797 17.6523 25.5601 16.7368 28.539 15.2332C30.2402 14.3745 31.629 13.2965 32.5 12.0547V30.9238C32.5 32.8651 30.9289 34.7544 28.0884 36.1882C25.2764 37.6075 21.3568 38.5 17 38.5C12.6432 38.5 8.72355 37.6075 5.9116 36.1882C3.07106 34.7544 1.5 32.8651 1.5 30.9238V12.0547Z",
      fill: color,
      stroke: "white"
    }, styles)), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
      d: "M1.5 9.07614C1.5 7.1349 3.07106 5.24559 5.9116 3.81181C8.72355 2.39245 12.6432 1.5 17 1.5C21.3568 1.5 25.2764 2.39245 28.0884 3.81181C30.9289 5.24559 32.5 7.1349 32.5 9.07614C32.5 11.0174 30.9289 12.9067 28.0884 14.3405C25.2764 15.7598 21.3568 16.6523 17 16.6523C12.6432 16.6523 8.72355 15.7598 5.9116 14.3405C3.07106 12.9067 1.5 11.0174 1.5 9.07614Z",
      fill: color,
      stroke: "white"
    }, styles)), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
      d: "M33 9.07614C33 13.5365 25.8366 17.1523 17 17.1523C8.16344 17.1523 1 13.5365 1 9.07614M33 9.07614C33 4.61582 25.8366 1 17 1C8.16344 1 1 4.61582 1 9.07614M33 9.07614V30.9239C33 35.3842 25.8366 39 17 39C8.16344 39 1 35.3842 1 30.9239V9.07614",
      stroke: "white"
    }, styles))]
  });
}
function TagShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[11]++;
  cov_2ymgyv0pa().s[11]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    x: "0px",
    y: "0px",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("g", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("polygon", _objectSpread({
        fill: color,
        points: "0.5,39.3 0.5,0.7 26.4,0.7 39.3,20 26.4,39.3"
      }, styles)), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
        fill: color,
        d: "M26.3,1.3L38.7,20L26.3,38.7H1.1V1.3H26.3 M26.7,0H0v40h26.7L40,20L26.7,0L26.7,0z"
      }, styles))]
    })
  });
}
function RoundTagShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[12]++;
  cov_2ymgyv0pa().s[12]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    x: "0px",
    y: "0px",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("g", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread(_objectSpread({
        fill: color
      }, styles), {}, {
        d: "M3,39.3c-1.3,0-2.5-1.5-2.5-3.3V4c0-1.9,1.1-3.3,2.5-3.3h23.2c0.7,0,1.3,0.4,1.7,1.1l11,16 c0.9,1.3,0.9,3.2,0,4.5l-11,16c-0.5,0.7-1.1,1.1-1.7,1.1H3z"
      })), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread(_objectSpread({
        fill: color
      }, styles), {}, {
        d: "M26.2,1.3c0.5,0,1.1,0.3,1.5,0.9l11,16c0.7,1.1,0.7,2.5,0,3.6l-11,16c-0.4,0.5-0.9,0.9-1.5,0.9H3 c-1.1,0-2-1.2-2-2.7V4c0-1.5,0.9-2.7,2-2.7H26.2 M26.2,0H3C1.3,0-0.1,1.7-0.1,4v32c0,2.3,1.3,4,3,4h23.2c0.8,0,1.6-0.5,2.1-1.3 l11-16c0.9-1.5,0.9-3.9,0-5.3l-10.9-16C27.8,0.5,27,0,26.2,0L26.2,0z"
      }))]
    })
  });
}
function StarShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[13]++;
  cov_2ymgyv0pa().s[13]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8307)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
        d: "M19.9869 1L27.4001 12.4366L40 15.5248L31.1722 25.7314L32.351 39L19.9869 34.8388L7.64899 39L8.51343 25.8361L0 15.5248L12.8094 12.5675L19.9869 1Z",
        fill: color
      }, styles))
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("defs", {
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8307",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "38",
          fill: "none",
          transform: "translate(0 1)"
        })
      })
    })]
  });
}
function VeeShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[14]++;
  cov_2ymgyv0pa().s[14]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8293)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8293)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M40 0L20.014 40L0 0L20.014 13.3148L40 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8293",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8293",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function HexagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[15]++;
  cov_2ymgyv0pa().s[15]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8231)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8231)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M30 0H10L0 20L10 40H30L40 20L30 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8231",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8231",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function RoundHexagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[16]++;
  cov_2ymgyv0pa().s[16]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8327)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8327)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M27.3712 0H12.6566C10.8525 0 9.21755 1.00559 8.40007 2.59777L0.535377 17.8492C-0.169344 19.1899 -0.169344 20.8101 0.535377 22.1508L8.40007 37.4022C9.21755 38.9944 10.8525 40 12.6566 40H27.3712C29.1753 40 30.8102 38.9944 31.6277 37.4022L39.4924 22.1508C40.1971 20.8101 40.1971 19.1899 39.4924 17.8492L31.6277 2.59777C30.8102 1.00559 29.1753 0 27.3712 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8327",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8327",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function ConcaveHexagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[17]++;
  cov_2ymgyv0pa().s[17]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8311)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
        d: "M35.3963 20L40 39H0L4.63129 20L0 1H40L35.3963 20Z",
        fill: color
      }, styles))
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("defs", {
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8311",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "38",
          fill: "none",
          transform: "translate(0 1)"
        })
      })
    })]
  });
}
function HeptagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[18]++;
  cov_2ymgyv0pa().s[18]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8331)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8331)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M20 0L3.96648 7.92842L0 25.7398L11.0894 40H28.9106L40 25.7398L36.0335 7.92842L20 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8331",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8331",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function RoundHeptagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[19]++;
  cov_2ymgyv0pa().s[19]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8319)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8319)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M18.0839 0.445982L5.536 6.63414C4.37205 7.19163 3.54877 8.25086 3.26488 9.50522L0.11371 23.6376C-0.170179 24.8641 0.11371 26.1185 0.9086 27.0941L9.68078 38.3554C10.5041 39.3867 11.7532 40 13.0875 40H26.9412C28.2755 40 29.5246 39.3867 30.3479 38.3554L39.1201 27.0941C39.8866 26.1185 40.1705 24.8362 39.915 23.6376L36.7638 9.47734C36.4799 8.22299 35.6567 7.19163 34.4927 6.60626L21.9164 0.445982C20.6957 -0.139383 19.2762 -0.139383 18.0555 0.445982H18.0839Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8319",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8319",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function OctagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[20]++;
  cov_2ymgyv0pa().s[20]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8315)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8315)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M28.2839 0H11.7161L0 11.7161V28.2839L11.7161 40H28.2839L40 28.2839V11.7161L28.2839 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8315",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8315",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function RoundOctagonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[21]++;
  cov_2ymgyv0pa().s[21]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8323)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8323)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M26.6575 0H13.3425C12.295 0 11.3026 0.413508 10.5582 1.15782L1.15782 10.5582C0.413508 11.3026 0 12.295 0 13.3425V26.6575C0 27.705 0.413508 28.6975 1.15782 29.4418L10.5858 38.8697C11.3301 39.6141 12.3225 40.0276 13.3701 40.0276H26.685C27.7326 40.0276 28.725 39.6141 29.4693 38.8697L38.8973 29.4418C39.6416 28.6975 40.0551 27.705 40.0551 26.6575V13.3425C40.0551 12.295 39.6416 11.3026 38.8973 10.5582L29.4418 1.15782C28.6975 0.413508 27.705 0 26.6575 0Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8323",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8323",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function PolygonShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[22]++;
  cov_2ymgyv0pa().s[22]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8289)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8289)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M27.136 13.2153V0H13.1125V13.2153H0V26.8665H13.1125V40H27.136V26.8665H40V13.2153H27.136Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8289",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8289",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function RhomboidShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[23]++;
  cov_2ymgyv0pa().s[23]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8257)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8257)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M13.2153 40H40L26.812 0H0L13.2153 40Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8257",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8257",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function RightRhomboidShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[24]++;
  cov_2ymgyv0pa().s[24]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8250)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8250)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M26.812 40H0L13.2153 0H40L26.812 40Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8250",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8250",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function DiamondShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[25]++;
  cov_2ymgyv0pa().s[25]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8243)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8243)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M19.9764 -0.00695638L-0.0166016 19.9861L19.9764 39.9791L39.9695 19.9861L19.9764 -0.00695638Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8243",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8243",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function RoundDiamondShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[26]++;
  cov_2ymgyv0pa().s[26]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18568_8236)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
        clipPath: "url(#clip1_18568_8236)",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
          d: "M16.4412 1.48312L1.49775 16.4266C-0.475803 18.4001 -0.475803 21.5999 1.49775 23.5734L16.4412 38.5169C18.4148 40.4904 21.6145 40.4904 23.5881 38.5169L38.5315 23.5734C40.5051 21.5999 40.5051 18.4001 38.5315 16.4266L23.5881 1.48312C21.6145 -0.490437 18.4148 -0.490435 16.4412 1.48312Z",
          fill: color
        }, styles))
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("defs", {
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18568_8236",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip1_18568_8236",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })]
    })]
  });
}
function BarrelShape({
  color,
  styles
}) {
  cov_2ymgyv0pa().f[27]++;
  cov_2ymgyv0pa().s[27]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("g", {
      clipPath: "url(#clip0_18628_25765)",
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("path", _objectSpread({
        d: "M39.4419 5.26901V34.7309C39.4419 40.216 30.7255 39.9987 19.9997 39.9987C9.27399 39.9987 0.557617 40.216 0.557617 34.7309V5.26901C0.557617 -0.21606 9.24684 0.00117016 19.9997 0.00117016C30.7527 0.00117016 39.4419 -0.21606 39.4419 5.26901Z",
        fill: color
      }, styles))
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("defs", {
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("clipPath", {
        id: "clip0_18628_25765",
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx("rect", {
          width: "40",
          height: "40",
          fill: "none"
        })
      })
    })]
  });
}
function XWingShape({
  color
}) {
  cov_2ymgyv0pa().f[28]++;
  cov_2ymgyv0pa().s[28]++;
  return /*#__PURE__*/_jsx("svg", {
    width: "40",
    height: "40",
    viewBox: "0 0 40 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: /*#__PURE__*/_jsxs("g", {
      children: [/*#__PURE__*/_jsx("path", {
        fill: color,
        d: "M0,28.7c0.1-0.1,0.2-0.2,0.3-0.3c1.7-1.6,3.3-3.2,5-4.8c1.2-1.1,2.4-2.3,3.5-3.4C9,20,9,20,8.8,19.9 c-1.2-1.2-2.4-2.3-3.6-3.5c-1.7-1.7-3.5-3.3-5.2-5c0,0,0,0-0.1-0.1c0.1-0.1,0.2-0.2,0.3-0.2c2-1.5,4-2.9,6-4.4 c0.5-0.3,0.9-0.7,1.4-1c0.1-0.1,0.1,0,0.2,0c1.2,1.4,2.3,2.7,3.5,4.1c1.6,1.9,3.3,3.9,4.9,5.8c1.2,1.4,2.5,2.9,3.7,4.3 c0.1,0.1,0.1,0.1,0,0.2c-1.8,2.1-3.7,4.3-5.5,6.4c-1.8,2.1-3.7,4.3-5.5,6.4c-0.4,0.4-0.7,0.9-1.1,1.3c-0.1,0.1-0.1,0.1-0.2,0 c-1.7-1.2-3.3-2.4-5-3.7C1.8,30,1,29.4,0.1,28.8C0.1,28.7,0.1,28.7,0,28.7z"
      }), /*#__PURE__*/_jsx("path", {
        fill: color,
        d: "M40,28.7c-0.1,0.1-0.3,0.2-0.4,0.3c-1.4,1-2.8,2-4.2,3c-1,0.7-2.1,1.5-3.1,2.3c-0.1,0.1-0.1,0-0.2,0 c-1-1.2-2-2.3-3-3.5c-1.4-1.6-2.8-3.2-4.2-4.9c-1.1-1.3-2.2-2.5-3.2-3.8c-0.6-0.7-1.1-1.3-1.7-2C20,20,20,20,20.1,19.9 c1.4-1.6,2.8-3.3,4.2-4.9c1.2-1.4,2.5-2.9,3.7-4.3c1.2-1.4,2.3-2.7,3.5-4.1C31.7,6.3,32,6,32.2,5.8c0.1-0.1,0.1-0.1,0.2,0 c1.5,1.1,3,2.2,4.6,3.3c1,0.7,2,1.4,2.9,2.1c0,0,0,0,0.1,0c0.1,0,0.1,0.1,0,0.1c-0.4,0.3-0.7,0.7-1.1,1c-2.4,2.3-4.8,4.6-7.1,6.9 c-0.2,0.2-0.4,0.4-0.6,0.5C31,20,31,20,31.2,20.1c1.2,1.2,2.4,2.3,3.6,3.5c1.7,1.7,3.4,3.3,5.1,5C39.9,28.6,40,28.6,40,28.7 C40,28.7,40,28.7,40,28.7z"
      })]
    })
  });
}

/***/ }),

/***/ 58109:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ GetNodeIcon)
/* harmony export */ });
/* unused harmony export ShapeOfSVG */
/* harmony import */ var _utils_webApis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(75292);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68103);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(clsx__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94659);
/* harmony import */ var _DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(86894);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils__WEBPACK_IMPORTED_MODULE_2__]);
_utils__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
function cov_jspfxunx5() {
  var path = "/workspace/meshplay/ui/components/configuratorComponents/MeshModel/NodeIcon.js";
  var hash = "cf164d09c37c39cc455d1bb00caccc635d1148ea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/configuratorComponents/MeshModel/NodeIcon.js",
    statementMap: {
      "0": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 35,
          column: 55
        }
      },
      "1": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 99,
          column: 3
        }
      },
      "2": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 59
        }
      },
      "3": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 61
        }
      },
      "4": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 66
        }
      },
      "5": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 61
        }
      },
      "6": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 66
        }
      },
      "7": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 67
        }
      },
      "8": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 62
        }
      },
      "9": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 71
        }
      },
      "10": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 56,
          column: 73
        }
      },
      "11": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 60
        }
      },
      "12": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 60
        }
      },
      "13": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 65
        }
      },
      "14": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 61
        }
      },
      "15": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 56
        }
      },
      "16": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 61
        }
      },
      "17": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 72,
          column: 57
        }
      },
      "18": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 74,
          column: 56
        }
      },
      "19": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 60
        }
      },
      "20": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 65
        }
      },
      "21": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 67
        }
      },
      "22": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 61
        }
      },
      "23": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 66
        }
      },
      "24": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 60
        }
      },
      "25": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 65
        }
      },
      "26": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 60
        }
      },
      "27": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "28": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 66
        }
      },
      "29": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 59
        }
      },
      "30": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 18
        }
      },
      "31": {
        start: {
          line: 103,
          column: 2
        },
        end: {
          line: 105,
          column: 3
        }
      },
      "32": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 62
        }
      },
      "33": {
        start: {
          line: 107,
          column: 2
        },
        end: {
          line: 109,
          column: 3
        }
      },
      "34": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "35": {
        start: {
          line: 111,
          column: 2
        },
        end: {
          line: 111,
          column: 36
        }
      },
      "36": {
        start: {
          line: 115,
          column: 2
        },
        end: {
          line: 120,
          column: 3
        }
      },
      "37": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "38": {
        start: {
          line: 122,
          column: 2
        },
        end: {
          line: 128,
          column: 4
        }
      },
      "39": {
        start: {
          line: 132,
          column: 2
        },
        end: {
          line: 142,
          column: 3
        }
      },
      "40": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 141,
          column: 6
        }
      },
      "41": {
        start: {
          line: 143,
          column: 2
        },
        end: {
          line: 156,
          column: 3
        }
      },
      "42": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "43": {
        start: {
          line: 164,
          column: 21
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "44": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 20
        }
      },
      "45": {
        start: {
          line: 173,
          column: 28
        },
        end: {
          line: 173,
          column: 58
        }
      },
      "46": {
        start: {
          line: 174,
          column: 17
        },
        end: {
          line: 174,
          column: 46
        }
      },
      "47": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 175,
          column: 68
        }
      },
      "48": {
        start: {
          line: 176,
          column: 23
        },
        end: {
          line: 176,
          column: 88
        }
      },
      "49": {
        start: {
          line: 177,
          column: 2
        },
        end: {
          line: 191,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "ShapeOfSVG",
        decl: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 26
          }
        },
        loc: {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 37
      },
      "1": {
        name: "getSvgUrl",
        decl: {
          start: {
            line: 102,
            column: 9
          },
          end: {
            line: 102,
            column: 18
          }
        },
        loc: {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 102
      },
      "2": {
        name: "styleProps",
        decl: {
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 114,
            column: 19
          }
        },
        loc: {
          start: {
            line: 114,
            column: 30
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 114
      },
      "3": {
        name: "GetNodeIcon",
        decl: {
          start: {
            line: 131,
            column: 24
          },
          end: {
            line: 131,
            column: 35
          }
        },
        loc: {
          start: {
            line: 131,
            column: 82
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 131
      },
      "4": {
        name: "convertToSvgStyle",
        decl: {
          start: {
            line: 163,
            column: 11
          },
          end: {
            line: 163,
            column: 28
          }
        },
        loc: {
          start: {
            line: 163,
            column: 48
          },
          end: {
            line: 171,
            column: 3
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 2
          },
          end: {
            line: 99,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 40,
            column: 59
          }
        }, {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 42,
            column: 61
          }
        }, {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 44,
            column: 66
          }
        }, {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 46,
            column: 61
          }
        }, {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 48,
            column: 66
          }
        }, {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 50,
            column: 67
          }
        }, {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 52,
            column: 62
          }
        }, {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 54,
            column: 71
          }
        }, {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 56,
            column: 73
          }
        }, {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 58,
            column: 60
          }
        }, {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 62,
            column: 60
          }
        }, {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 64,
            column: 65
          }
        }, {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 66,
            column: 61
          }
        }, {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 68,
            column: 56
          }
        }, {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 70,
            column: 61
          }
        }, {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 72,
            column: 57
          }
        }, {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 74,
            column: 56
          }
        }, {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 76,
            column: 60
          }
        }, {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 78,
            column: 65
          }
        }, {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 80,
            column: 67
          }
        }, {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 82,
            column: 61
          }
        }, {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 84,
            column: 66
          }
        }, {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 86,
            column: 60
          }
        }, {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 88,
            column: 65
          }
        }, {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 90,
            column: 60
          }
        }, {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 92,
            column: 61
          }
        }, {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 94,
            column: 66
          }
        }, {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 96,
            column: 59
          }
        }, {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 98,
            column: 18
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 103,
            column: 2
          },
          end: {
            line: 105,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 2
          },
          end: {
            line: 105,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "2": {
        loc: {
          start: {
            line: 107,
            column: 2
          },
          end: {
            line: 109,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 2
          },
          end: {
            line: 109,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "3": {
        loc: {
          start: {
            line: 115,
            column: 2
          },
          end: {
            line: 120,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 2
          },
          end: {
            line: 120,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "4": {
        loc: {
          start: {
            line: 131,
            column: 48
          },
          end: {
            line: 131,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 131,
            column: 65
          },
          end: {
            line: 131,
            column: 67
          }
        }],
        line: 131
      },
      "5": {
        loc: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 142,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 142,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "6": {
        loc: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 132,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 132,
            column: 25
          }
        }, {
          start: {
            line: 132,
            column: 29
          },
          end: {
            line: 132,
            column: 48
          }
        }, {
          start: {
            line: 132,
            column: 52
          },
          end: {
            line: 132,
            column: 71
          }
        }],
        line: 132
      },
      "7": {
        loc: {
          start: {
            line: 143,
            column: 2
          },
          end: {
            line: 156,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 2
          },
          end: {
            line: 156,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "8": {
        loc: {
          start: {
            line: 186,
            column: 9
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 9
          },
          end: {
            line: 186,
            column: 46
          }
        }, {
          start: {
            line: 186,
            column: 50
          },
          end: {
            line: 186,
            column: 76
          }
        }, {
          start: {
            line: 187,
            column: 10
          },
          end: {
            line: 187,
            column: 67
          }
        }],
        line: 186
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf164d09c37c39cc455d1bb00caccc635d1148ea"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jspfxunx5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_jspfxunx5();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








const NODE_ICON_WRAPPER_CLASS = (cov_jspfxunx5().s[0]++, 'node-icon-wrapper-svg');
function ShapeOfSVG({
  color,
  shape,
  styles
}) {
  cov_jspfxunx5().f[0]++;
  cov_jspfxunx5().s[1]++;

  switch (shape) {
    case 'circle':
      cov_jspfxunx5().b[0][0]++;
      cov_jspfxunx5().s[2]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .CircleShape */ .n, {
        color: color,
        styles: styles
      });

    case 'triangle':
      cov_jspfxunx5().b[0][1]++;
      cov_jspfxunx5().s[3]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .TriangleShape */ .E2, {
        color: color,
        styles: styles
      });

    case 'round-triangle':
      cov_jspfxunx5().b[0][2]++;
      cov_jspfxunx5().s[4]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RoundTriangleShape */ ._3, {
        color: color,
        styles: styles
      });

    case 'pentagon':
      cov_jspfxunx5().b[0][3]++;
      cov_jspfxunx5().s[5]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .PentagonShape */ .D$, {
        color: color,
        styles: styles
      });

    case 'round-pentagon':
      cov_jspfxunx5().b[0][4]++;
      cov_jspfxunx5().s[6]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RoundPentagonShape */ .lZ, {
        color: color,
        styles: styles
      });

    case 'round-rectangle':
      cov_jspfxunx5().b[0][5]++;
      cov_jspfxunx5().s[7]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RoundRectangleShape */ .Zf, {
        color: color,
        styles: styles
      });

    case 'rectangle':
      cov_jspfxunx5().b[0][6]++;
      cov_jspfxunx5().s[8]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RectangleShape */ .$1, {
        color: color,
        styles: styles
      });

    case 'tall-round-rectangle':
      cov_jspfxunx5().b[0][7]++;
      cov_jspfxunx5().s[9]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .TallRoundRectangleShape */ .le, {
        color: color,
        styles: styles
      });

    case 'bottom-round-rectangle':
      cov_jspfxunx5().b[0][8]++;
      cov_jspfxunx5().s[10]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .BottomRoundRectangleShape */ .Xb, {
        color: color,
        styles: styles
      });

    case 'cut-rectangle':
      cov_jspfxunx5().b[0][9]++;
      cov_jspfxunx5().s[11]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .CutRectangle */ .a7, {
        color: color,
        styles: styles
      });
    // todos, rn, defaulted by diamond, why not adding default?
    // because the shapes may go unnoticed later in time

    case 'diamond':
      cov_jspfxunx5().b[0][10]++;
      cov_jspfxunx5().s[12]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .DiamondShape */ .yK, {
        color: color,
        styles: styles
      });

    case 'round-diamond':
      cov_jspfxunx5().b[0][11]++;
      cov_jspfxunx5().s[13]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RoundDiamondShape */ .J, {
        color: color,
        styles: styles
      });

    case 'cylinder':
      cov_jspfxunx5().b[0][12]++;
      cov_jspfxunx5().s[14]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .CylinderShape */ .g6, {
        color: color,
        styles: styles
      });

    case 'tag':
      cov_jspfxunx5().b[0][13]++;
      cov_jspfxunx5().s[15]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .TagShape */ .aq, {
        color: color,
        styles: styles
      });

    case 'round-tag':
      cov_jspfxunx5().b[0][14]++;
      cov_jspfxunx5().s[16]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RoundTagShape */ .UP, {
        color: color,
        styles: styles
      });

    case 'star':
      cov_jspfxunx5().b[0][15]++;
      cov_jspfxunx5().s[17]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .StarShape */ .Kb, {
        color: color,
        styles: styles
      });

    case 'vee':
      cov_jspfxunx5().b[0][16]++;
      cov_jspfxunx5().s[18]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .VeeShape */ .Fk, {
        color: color,
        styles: styles
      });

    case 'hexagon':
      cov_jspfxunx5().b[0][17]++;
      cov_jspfxunx5().s[19]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .HexagonShape */ .zP, {
        color: color,
        styles: styles
      });

    case 'round-hexagon':
      cov_jspfxunx5().b[0][18]++;
      cov_jspfxunx5().s[20]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RoundHexagonShape */ .lm, {
        color: color,
        styles: styles
      });

    case 'concave-hexagon':
      cov_jspfxunx5().b[0][19]++;
      cov_jspfxunx5().s[21]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .ConcaveHexagonShape */ .zn, {
        color: color,
        styles: styles
      });

    case 'heptagon':
      cov_jspfxunx5().b[0][20]++;
      cov_jspfxunx5().s[22]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .HeptagonShape */ .D2, {
        color: color,
        styles: styles
      });

    case 'round-heptagon':
      cov_jspfxunx5().b[0][21]++;
      cov_jspfxunx5().s[23]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RoundHeptagonShape */ .g, {
        color: color,
        styles: styles
      });

    case 'octagon':
      cov_jspfxunx5().b[0][22]++;
      cov_jspfxunx5().s[24]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .OctagonShape */ .Qe, {
        color: color,
        styles: styles
      });

    case 'round-octagon':
      cov_jspfxunx5().b[0][23]++;
      cov_jspfxunx5().s[25]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RoundOctagonShape */ .VZ, {
        color: color,
        styles: styles
      });

    case 'polygon':
      cov_jspfxunx5().b[0][24]++;
      cov_jspfxunx5().s[26]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .PolygonShape */ .kL, {
        color: color,
        styles: styles
      });

    case 'rhomboid':
      cov_jspfxunx5().b[0][25]++;
      cov_jspfxunx5().s[27]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RhomboidShape */ .CD, {
        color: color,
        styles: styles
      });

    case 'right-rhomboid':
      cov_jspfxunx5().b[0][26]++;
      cov_jspfxunx5().s[28]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .RightRhomboidShape */ .lL, {
        color: color,
        styles: styles
      });

    case 'barrel':
      cov_jspfxunx5().b[0][27]++;
      cov_jspfxunx5().s[29]++;
      return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(_DesignerDrawerNodeShapes__WEBPACK_IMPORTED_MODULE_3__/* .BarrelShape */ .Z6, {
        color: color,
        styles: styles
      });

    default:
      cov_jspfxunx5().b[0][28]++;
      cov_jspfxunx5().s[30]++;
      return null;
  }
}

function getSvgUrl(url) {
  cov_jspfxunx5().f[1]++;
  cov_jspfxunx5().s[31]++;

  if (!url) {
    cov_jspfxunx5().b[1][0]++;
    cov_jspfxunx5().s[32]++;
    return '/static/img/model-categories/dark/other-dark.svg';
  } else {
    cov_jspfxunx5().b[1][1]++;
  }

  cov_jspfxunx5().s[33]++;

  if (url.startsWith('http')) {
    cov_jspfxunx5().b[2][0]++;
    cov_jspfxunx5().s[34]++;
    return url;
  } else {
    cov_jspfxunx5().b[2][1]++;
  }

  cov_jspfxunx5().s[35]++;
  return (0,_utils_webApis__WEBPACK_IMPORTED_MODULE_0__/* .getWebAdress */ .oX)() + '/' + url;
}

function styleProps(metadata) {
  cov_jspfxunx5().f[2]++;
  cov_jspfxunx5().s[36]++;

  if (metadata.shape === 'no-shape') {
    cov_jspfxunx5().b[3][0]++;
    cov_jspfxunx5().s[37]++;
    return {
      height: 40,
      width: 40
    };
  } else {
    cov_jspfxunx5().b[3][1]++;
  }

  cov_jspfxunx5().s[38]++;
  return _objectSpread({
    height: 25,
    width: 25,
    x: 7.5,
    y: 7.5
  }, (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .getStyleOverrides */ .s)(metadata?.styleOverrides));
}

function GetNodeIcon({
  metadata,
  otherOverrides = (cov_jspfxunx5().b[4][0]++, {}),
  className
}) {
  cov_jspfxunx5().f[3]++;
  cov_jspfxunx5().s[39]++;

  if ((cov_jspfxunx5().b[6][0]++, !metadata?.svgColor) || (cov_jspfxunx5().b[6][1]++, !metadata?.svgWhite) || (cov_jspfxunx5().b[6][2]++, !metadata?.svgColor)) {
    cov_jspfxunx5().b[5][0]++;
    cov_jspfxunx5().s[40]++;
    return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx("img", _objectSpread({
      className: clsx__WEBPACK_IMPORTED_MODULE_1___default()(className, NODE_ICON_WRAPPER_CLASS),
      width: 40,
      height: 40,
      src: "/static/img/kubernetes.svg"
    }, otherOverrides));
  } else {
    cov_jspfxunx5().b[5][1]++;
  }

  cov_jspfxunx5().s[41]++;

  if (metadata?.svgComplete) {
    cov_jspfxunx5().b[7][0]++;
    cov_jspfxunx5().s[42]++;
    return (
      /*#__PURE__*/
      // wrapping in svg important for onDragStart function
      react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx("svg", _objectSpread(_objectSpread({
        className: clsx__WEBPACK_IMPORTED_MODULE_1___default()(className, NODE_ICON_WRAPPER_CLASS),
        width: "40",
        height: "40",
        xmlns: "http://www.w3.org/2000/svg"
      }, otherOverrides), {}, {
        children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx("image", _objectSpread({
          href: getSvgUrl(metadata.svgComplete),
          height: 40,
          width: 40
        }, otherOverrides))
      }))
    );
  } else {
    cov_jspfxunx5().b[7][1]++;
  }
  /**
   * Converts a set of input styles to SVG-compatible styles.
   * @param {object} inputStyle - The input style object to be converted.
   * @param {string} color - The color to be used for the SVG stroke.
   * @returns {object} An object containing SVG-compatible style properties.
   */


  function convertToSvgStyle(inputStyle, color) {
    cov_jspfxunx5().f[4]++;
    const svgStyle = (cov_jspfxunx5().s[43]++, {
      stroke: color,
      // Use the specified color for the SVG stroke
      fillOpacity: inputStyle['background-opacity'],
      // Map 'background-opacity' to 'fillOpacity'
      strokeWidth: inputStyle['border-width'] // Map 'border-width' to 'strokeWidth'
      //Add more styles as per requirement...

    });
    cov_jspfxunx5().s[44]++;
    return svgStyle;
  }

  const componentMetadata = (cov_jspfxunx5().s[45]++, (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .getComponentMetadata */ ._)(metadata));
  const styles = (cov_jspfxunx5().s[46]++, styleProps(componentMetadata));
  const styleOverrides = (cov_jspfxunx5().s[47]++, (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .getStyleOverrides */ .s)(metadata?.styleOverrides));
  const customStyles = (cov_jspfxunx5().s[48]++, convertToSvgStyle(styleOverrides, componentMetadata.primaryColor));
  cov_jspfxunx5().s[49]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("svg", {
      width: "40",
      height: "40",
      className: clsx__WEBPACK_IMPORTED_MODULE_1___default()(className, NODE_ICON_WRAPPER_CLASS),
      xmlns: "http://www.w3.org/2000/svg",
      children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx(ShapeOfSVG, {
        color: metadata.primaryColor,
        shape: metadata.shape,
        styles: customStyles
      }), (cov_jspfxunx5().b[8][0]++, styles['background-image'] !== 'none') && (cov_jspfxunx5().b[8][1]++, componentMetadata.svgColor) && (cov_jspfxunx5().b[8][2]++, /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx("image", _objectSpread({
        href: getSvgUrl(metadata.svgWhite)
      }, styles)))]
    })
  });
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 94659:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_": () => (/* binding */ getComponentMetadata),
/* harmony export */   "s": () => (/* binding */ getStyleOverrides)
/* harmony export */ });
/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51104);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_utils__WEBPACK_IMPORTED_MODULE_0__]);
_utils_utils__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
function cov_r11ft2iyx() {
  var path = "/workspace/meshplay/ui/components/configuratorComponents/MeshModel/utils.js";
  var hash = "0467c5c77c0cfac259be1af67e58997030e04163";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/components/configuratorComponents/MeshModel/utils.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 4,
          column: 37
        }
      },
      "1": {
        start: {
          line: 7,
          column: 2
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 59
        }
      },
      "3": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 21,
          column: 4
        }
      },
      "4": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "5": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 43
        }
      },
      "6": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 29,
          column: 12
        }
      }
    },
    fnMap: {
      "0": {
        name: "getComponentMetadata",
        decl: {
          start: {
            line: 3,
            column: 16
          },
          end: {
            line: 3,
            column: 36
          }
        },
        loc: {
          start: {
            line: 3,
            column: 47
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "getStyleOverrides",
        decl: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0467c5c77c0cfac259be1af67e58997030e04163"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r11ft2iyx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_r11ft2iyx();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


function getComponentMetadata(metadata) {
  cov_r11ft2iyx().f[0]++;
  const cleanedMeta = (cov_r11ft2iyx().s[0]++, _objectSpread({}, metadata)); // for the older designs where metadata is stored in css styles, replace the svgWhite with it

  cov_r11ft2iyx().s[1]++;

  if (cleanedMeta['background-image']) {
    cov_r11ft2iyx().b[0][0]++;
    cov_r11ft2iyx().s[2]++;
    cleanedMeta.svgWhite = cleanedMeta['background-image'];
  } else {
    cov_r11ft2iyx().b[0][1]++;
  }

  cov_r11ft2iyx().s[3]++;
  return Object.assign({
    // default assignments
    shape: 'circle',
    // shape should be small case
    primaryColor: '#00B39F',
    secondaryColor: '#b2e8e2',
    svgColor: 'static/img/component-svg/meshplay.svg',
    svgWhite: 'static/img/component-svg/meshplay.svg'
  }, cleanedMeta);
}
function getStyleOverrides(stringifiedOverrides) {
  cov_r11ft2iyx().f[1]++;
  cov_r11ft2iyx().s[4]++;

  if (stringifiedOverrides) {
    cov_r11ft2iyx().b[1][0]++;
    cov_r11ft2iyx().s[5]++;
    return (0,_utils_utils__WEBPACK_IMPORTED_MODULE_0__/* .JsonParse */ .HW)(stringifiedOverrides);
  } else {
    cov_r11ft2iyx().b[1][1]++;
  }

  cov_r11ft2iyx().s[6]++;
  return {};
}
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 82748:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40968);
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6022);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86695);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_DashboardComponent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(97535);
/* harmony import */ var _lib_path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1188);
/* harmony import */ var _lib_store__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(68885);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__);
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_DashboardComponent__WEBPACK_IMPORTED_MODULE_5__]);
_components_DashboardComponent__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];
function cov_1kqtrnesrv() {
  var path = "/workspace/meshplay/ui/pages/index.js";
  var hash = "99ac37189e814cb1de89863aa4073bc6afa7abb0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/pages/index.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 13,
          column: 9
        }
      },
      "1": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "2": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 22,
          column: 4
        }
      },
      "3": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "4": {
        start: {
          line: 25,
          column: 42
        },
        end: {
          line: 27,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "Index",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 14
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 11,
            column: 13
          }
        },
        loc: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 25,
            column: 28
          }
        },
        loc: {
          start: {
            line: 25,
            column: 42
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "99ac37189e814cb1de89863aa4073bc6afa7abb0"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kqtrnesrv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1kqtrnesrv();











function Index(props) {
  cov_1kqtrnesrv().f[0]++;
  cov_1kqtrnesrv().s[0]++;
  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
    cov_1kqtrnesrv().f[1]++;
    cov_1kqtrnesrv().s[1]++;
    props.updatepagepath({
      path: (0,_lib_path__WEBPACK_IMPORTED_MODULE_6__/* .getPath */ .D)()
    });
  }, []);
  cov_1kqtrnesrv().s[2]++;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.NoSsr, {
    children: [/*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {
      children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx("title", {
        children: "Dashboard | Meshplay"
      })
    }), /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx(_components_DashboardComponent__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {})]
  });
}

cov_1kqtrnesrv().s[3]++;

const mapDispatchToProps = dispatch => {
  cov_1kqtrnesrv().f[2]++;
  cov_1kqtrnesrv().s[4]++;
  return {
    updatepagepath: (0,redux__WEBPACK_IMPORTED_MODULE_4__.bindActionCreators)(_lib_store__WEBPACK_IMPORTED_MODULE_7__/* .updatepagepath */ .Fb, dispatch)
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_redux__WEBPACK_IMPORTED_MODULE_3__.connect)(null, mapDispatchToProps)(Index));
__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });

/***/ }),

/***/ 91187:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$F": () => (/* binding */ useConfigureConnectionMutation),
/* harmony export */   "GW": () => (/* binding */ useGetConnectionsQuery),
/* harmony export */   "SW": () => (/* binding */ useConnectionMetaDataMutation),
/* harmony export */   "X2": () => (/* binding */ useLazyGetConnectionDetailsQuery),
/* harmony export */   "au": () => (/* binding */ useGetConnectionStatusQuery),
/* harmony export */   "u$": () => (/* binding */ useGetAllConnectionStatusQuery),
/* harmony export */   "xC": () => (/* binding */ useUpdateConnectionMutation),
/* harmony export */   "y0": () => (/* binding */ useCancelConnectionRegisterMutation),
/* harmony export */   "yh": () => (/* binding */ useVerifyConnectionURLMutation)
/* harmony export */ });
/* unused harmony export useGetConnectionByKindQuery */
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51125);
function cov_qqid8qb6c() {
  var path = "/workspace/meshplay/ui/rtk-query/connection.js";
  var hash = "f941b006502e0a24b4fd3394d2ec23c6b5fb5856";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/rtk-query/connection.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 5,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "2": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 90,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 21,
          column: 7
        }
      },
      "4": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "5": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "6": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "7": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "8": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "9": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 55,
          column: 7
        }
      },
      "10": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 62,
          column: 7
        }
      },
      "11": {
        start: {
          line: 63,
          column: 29
        },
        end: {
          line: 63,
          column: 57
        }
      },
      "12": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "13": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 81,
          column: 7
        }
      },
      "14": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "15": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 13
          },
          end: {
            line: 8,
            column: 14
          }
        },
        loc: {
          start: {
            line: 8,
            column: 27
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 13
          },
          end: {
            line: 10,
            column: 14
          }
        },
        loc: {
          start: {
            line: 10,
            column: 28
          },
          end: {
            line: 21,
            column: 7
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 21
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 54
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 25,
            column: 14
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 28,
            column: 7
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 31,
            column: 14
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 34,
            column: 7
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 37,
            column: 14
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 41,
            column: 7
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 13
          },
          end: {
            line: 44,
            column: 14
          }
        },
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 48,
            column: 7
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 51,
            column: 13
          },
          end: {
            line: 51,
            column: 14
          }
        },
        loc: {
          start: {
            line: 51,
            column: 28
          },
          end: {
            line: 55,
            column: 7
          }
        },
        line: 51
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 58,
            column: 13
          },
          end: {
            line: 58,
            column: 14
          }
        },
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 62,
            column: 7
          }
        },
        line: 58
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 24
          }
        },
        loc: {
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 63,
            column: 57
          }
        },
        line: 63
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 66,
            column: 13
          },
          end: {
            line: 66,
            column: 14
          }
        },
        loc: {
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 69,
            column: 7
          }
        },
        line: 66
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 72,
            column: 13
          },
          end: {
            line: 72,
            column: 14
          }
        },
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 81,
            column: 7
          }
        },
        line: 72
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 84,
            column: 13
          },
          end: {
            line: 84,
            column: 14
          }
        },
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 88,
            column: 7
          }
        },
        line: 84
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f941b006502e0a24b4fd3394d2ec23c6b5fb5856"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qqid8qb6c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_qqid8qb6c();

const TAGS = (cov_qqid8qb6c().s[0]++, {
  CONNECTIONS: 'connections'
});
const connectionsApi = (cov_qqid8qb6c().s[1]++, _index__WEBPACK_IMPORTED_MODULE_0__/* .api.injectEndpoints */ .h.injectEndpoints({
  endpoints: builder => {
    cov_qqid8qb6c().f[0]++;
    cov_qqid8qb6c().s[2]++;
    return {
      getConnections: builder.query({
        query: queryArg => {
          cov_qqid8qb6c().f[1]++;
          cov_qqid8qb6c().s[3]++;
          return {
            url: `integrations/connections`,
            params: {
              page: queryArg.page,
              pagesize: queryArg.pagesize,
              search: queryArg.search,
              order: queryArg.order,
              status: queryArg.status,
              kind: queryArg.kind
            },
            method: 'GET'
          };
        },
        providesTags: () => {
          cov_qqid8qb6c().f[2]++;
          cov_qqid8qb6c().s[4]++;
          return [{
            type: TAGS.CONNECTIONS
          }];
        }
      }),
      getConnectionStatus: builder.query({
        query: queryArg => {
          cov_qqid8qb6c().f[3]++;
          cov_qqid8qb6c().s[5]++;
          return {
            url: `integrations/connections/${queryArg.connectionKind}/status`,
            params: {
              id: queryArg.repoURL
            }
          };
        }
      }),
      getConnectionDetails: builder.query({
        query: queryArg => {
          cov_qqid8qb6c().f[4]++;
          cov_qqid8qb6c().s[6]++;
          return {
            url: `integrations/connections/${queryArg.connectionKind}/details`,
            params: {
              id: queryArg.repoURL
            }
          };
        }
      }),
      verifyConnectionURL: builder.mutation({
        query: queryArg => {
          cov_qqid8qb6c().f[5]++;
          cov_qqid8qb6c().s[7]++;
          return {
            url: `integrations/connections/${queryArg.connectionKind}/verify`,
            method: 'POST',
            params: {
              id: queryArg.repoURL
            }
          };
        }
      }),
      connectionMetaData: builder.mutation({
        query: queryArg => {
          cov_qqid8qb6c().f[6]++;
          cov_qqid8qb6c().s[8]++;
          return {
            url: `integrations/connections/${queryArg.connectionKind}/metadata`,
            method: 'POST',
            body: queryArg.body
          };
        }
      }),
      configureConnection: builder.mutation({
        query: queryArg => {
          cov_qqid8qb6c().f[7]++;
          cov_qqid8qb6c().s[9]++;
          return {
            url: `integrations/connections/${queryArg.connectionKind}/configure`,
            method: 'POST',
            body: queryArg.body
          };
        }
      }),
      updateConnection: builder.mutation({
        query: queryArg => {
          cov_qqid8qb6c().f[8]++;
          cov_qqid8qb6c().s[10]++;
          return {
            url: `integrations/connections/${queryArg.connectionKind}/status`,
            method: 'PUT',
            body: queryArg.connectionPayload
          };
        },
        invalidatesTags: () => {
          cov_qqid8qb6c().f[9]++;
          cov_qqid8qb6c().s[11]++;
          return [{
            type: TAGS.CONNECTIONS
          }];
        }
      }),
      getAllConnectionStatus: builder.query({
        query: () => {
          cov_qqid8qb6c().f[10]++;
          cov_qqid8qb6c().s[12]++;
          return {
            url: `integrations/connections/status`,
            method: 'GET'
          };
        }
      }),
      getConnectionByKind: builder.query({
        query: queryArg => {
          cov_qqid8qb6c().f[11]++;
          cov_qqid8qb6c().s[13]++;
          return {
            url: `integrations/connections/${queryArg.connectionKind}`,
            params: {
              page: queryArg.page,
              pagesize: queryArg.pagesize,
              search: queryArg.search,
              order: queryArg.order
            },
            method: 'GET'
          };
        }
      }),
      cancelConnectionRegister: builder.mutation({
        query: queryArg => {
          cov_qqid8qb6c().f[12]++;
          cov_qqid8qb6c().s[14]++;
          return {
            url: `integrations/connections/register`,
            method: 'DELETE',
            body: queryArg.body
          };
        }
      })
    };
  }
}));
const {
  useGetConnectionsQuery,
  useGetConnectionStatusQuery,
  useLazyGetConnectionDetailsQuery,
  useVerifyConnectionURLMutation,
  useConnectionMetaDataMutation,
  useConfigureConnectionMutation,
  useUpdateConnectionMutation,
  useGetAllConnectionStatusQuery,
  useGetConnectionByKindQuery,
  useCancelConnectionRegisterMutation
} = (cov_qqid8qb6c().s[15]++, connectionsApi);

/***/ }),

/***/ 23054:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JI": () => (/* binding */ useUploadFilterFileMutation),
/* harmony export */   "Lf": () => (/* binding */ useGetFiltersQuery),
/* harmony export */   "Y6": () => (/* binding */ useUnpublishFilterMutation),
/* harmony export */   "bP": () => (/* binding */ useCloneFilterMutation),
/* harmony export */   "fA": () => (/* binding */ usePublishFilterMutation),
/* harmony export */   "ml": () => (/* binding */ useDeleteFilterMutation),
/* harmony export */   "tQ": () => (/* binding */ useUpdateFilterFileMutation)
/* harmony export */ });
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51125);
function cov_19q1i1nxdr() {
  var path = "/workspace/meshplay/ui/rtk-query/filter.js";
  var hash = "e783877edd0d4238dbdd9c4a91f808f3c995f14a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/rtk-query/filter.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 5,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 71,
          column: 4
        }
      },
      "2": {
        start: {
          line: 11,
          column: 29
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "3": {
        start: {
          line: 13,
          column: 30
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "4": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 52
        }
      },
      "5": {
        start: {
          line: 27,
          column: 30
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "6": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "7": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "8": {
        start: {
          line: 48,
          column: 30
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "9": {
        start: {
          line: 54,
          column: 30
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "10": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "11": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 11,
            column: 29
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 16
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 23,
            column: 9
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 24,
            column: 23
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 52
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 16
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 31,
            column: 9
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 16
          }
        },
        loc: {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 38,
            column: 9
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 15
          },
          end: {
            line: 41,
            column: 16
          }
        },
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 15
          },
          end: {
            line: 48,
            column: 16
          }
        },
        loc: {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 16
          }
        },
        loc: {
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 58,
            column: 9
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 61,
            column: 15
          },
          end: {
            line: 61,
            column: 16
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 61
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e783877edd0d4238dbdd9c4a91f808f3c995f14a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19q1i1nxdr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_19q1i1nxdr();

const TAGS = (cov_19q1i1nxdr().s[0]++, {
  FILTERS: 'filters'
});
const filters = (cov_19q1i1nxdr().s[1]++, _index__WEBPACK_IMPORTED_MODULE_0__/* .api.enhanceEndpoints */ .h.enhanceEndpoints({
  addTagTypes: [TAGS.FILTERS]
}).injectEndpoints({
  endpoints: builder => {
    cov_19q1i1nxdr().f[0]++;
    cov_19q1i1nxdr().s[2]++;
    return {
      getFilters: builder.query({
        query: queryArg => {
          cov_19q1i1nxdr().f[1]++;
          cov_19q1i1nxdr().s[3]++;
          return {
            url: `filter`,
            params: {
              page: queryArg.page,
              pagesize: queryArg.pagesize,
              search: queryArg.search,
              order: queryArg.order,
              visibility: queryArg.visibility
            },
            method: 'GET'
          };
        },
        providesTags: () => {
          cov_19q1i1nxdr().f[2]++;
          cov_19q1i1nxdr().s[4]++;
          return [{
            type: TAGS.FILTERS
          }];
        }
      }),
      cloneFilter: builder.mutation({
        query: queryArg => {
          cov_19q1i1nxdr().f[3]++;
          cov_19q1i1nxdr().s[5]++;
          return {
            url: `filter/clone/${queryArg.filterID}`,
            method: 'POST',
            body: queryArg.body
          };
        }
      }),
      publishFilter: builder.mutation({
        query: queryArg => {
          cov_19q1i1nxdr().f[4]++;
          cov_19q1i1nxdr().s[6]++;
          return {
            url: `filter/catalog/publish`,
            method: 'POST',
            body: queryArg.publishBody
          };
        }
      }),
      unpublishFilter: builder.mutation({
        query: queryArg => {
          cov_19q1i1nxdr().f[5]++;
          cov_19q1i1nxdr().s[7]++;
          return {
            url: `filter/catalog/unpublish`,
            method: 'DELETE',
            body: queryArg.unpublishBody
          };
        }
      }),
      deleteFilter: builder.mutation({
        query: queryArg => {
          cov_19q1i1nxdr().f[6]++;
          cov_19q1i1nxdr().s[8]++;
          return {
            url: `filter/${queryArg.id}`,
            method: 'DELETE'
          };
        }
      }),
      updateFilterFile: builder.mutation({
        query: queryArg => {
          cov_19q1i1nxdr().f[7]++;
          cov_19q1i1nxdr().s[9]++;
          return {
            url: `filter`,
            method: 'POST',
            body: queryArg.updateBody
          };
        }
      }),
      uploadFilterFile: builder.mutation({
        query: queryArg => {
          cov_19q1i1nxdr().f[8]++;
          cov_19q1i1nxdr().s[10]++;
          return {
            url: `filter`,
            headers: {
              'Content-Type': 'application/octet-stream' // Set appropriate content type for binary data

            },
            method: 'POST',
            body: queryArg.uploadBody
          };
        }
      })
    };
  }
}));
const {
  useGetFiltersQuery,
  useCloneFilterMutation,
  usePublishFilterMutation,
  useUnpublishFilterMutation,
  useDeleteFilterMutation,
  useUpdateFilterFileMutation,
  useUploadFilterFileMutation
} = (cov_19q1i1nxdr().s[11]++, filters);

/***/ }),

/***/ 40699:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ TooltipButton)
/* harmony export */ });
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8130);
/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7352);
/* harmony import */ var _khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);
const _excluded = ["children", "onClick", "title", "variant"];

function cov_2ksvmq2mpa() {
  var path = "/workspace/meshplay/ui/utils/TooltipButton.js";
  var hash = "1ca313be566c6be9b068cdb64e0afc069817056a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/utils/TooltipButton.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 11,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "TooltipButton",
        decl: {
          start: {
            line: 4,
            column: 24
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 87
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 4
      }
    },
    branchMap: {},
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1ca313be566c6be9b068cdb64e0afc069817056a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ksvmq2mpa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2ksvmq2mpa();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function TooltipButton(_ref) {
  let {
    children,
    onClick,
    title,
    variant
  } = _ref,
      props = _objectWithoutProperties(_ref, _excluded);

  cov_2ksvmq2mpa().f[0]++;
  cov_2ksvmq2mpa().s[0]++;
  return /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx(_khulnasoft_sistent__WEBPACK_IMPORTED_MODULE_1__.CustomTooltip, {
    title: title,
    placement: "top",
    interactive: true,
    children: /*#__PURE__*/react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.Button, _objectSpread(_objectSpread({
      variant: variant,
      onClick: onClick
    }, props), {}, {
      children: children
    }))
  });
}

/***/ }),

/***/ 81119:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eH": () => (/* binding */ dataToColors),
/* harmony export */   "iQ": () => (/* binding */ isValidColumnName)
/* harmony export */ });
/* unused harmony export CHART_COLORS */
function cov_1tid035or1() {
  var path = "/workspace/meshplay/ui/utils/charts.js";
  var hash = "eabecb61344404432fd331385a74ef2ddd96f95a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/utils/charts.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 33
        },
        end: {
          line: 3,
          column: 1
        }
      },
      "1": {
        start: {
          line: 2,
          column: 2
        },
        end: {
          line: 2,
          column: 74
        }
      },
      "2": {
        start: {
          line: 5,
          column: 28
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "3": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "4": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 45
        }
      },
      "5": {
        start: {
          line: 25,
          column: 37
        },
        end: {
          line: 25,
          column: 44
        }
      },
      "6": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "7": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 18
        }
      },
      "8": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "9": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "10": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "11": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 41
        }
      },
      "12": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 18
        }
      },
      "13": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 37,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 1,
            column: 33
          },
          end: {
            line: 1,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1,
            column: 43
          },
          end: {
            line: 3,
            column: 1
          }
        },
        line: 1
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 29
          }
        },
        loc: {
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 25,
            column: 28
          }
        },
        loc: {
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 25,
            column: 44
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 19
          }
        },
        loc: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 29
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 9
          },
          end: {
            line: 2,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 9
          },
          end: {
            line: 2,
            column: 20
          }
        }, {
          start: {
            line: 2,
            column: 24
          },
          end: {
            line: 2,
            column: 36
          }
        }, {
          start: {
            line: 2,
            column: 40
          },
          end: {
            line: 2,
            column: 57
          }
        }, {
          start: {
            line: 2,
            column: 61
          },
          end: {
            line: 2,
            column: 73
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eabecb61344404432fd331385a74ef2ddd96f95a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tid035or1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1tid035or1();
cov_1tid035or1().s[0]++;
const isValidColumnName = name => {
  cov_1tid035or1().f[0]++;
  cov_1tid035or1().s[1]++;
  return (cov_1tid035or1().b[0][0]++, name !== '') && (cov_1tid035or1().b[0][1]++, name !== ' ') && (cov_1tid035or1().b[0][2]++, name != undefined) && (cov_1tid035or1().b[0][3]++, name != null);
};
const CHART_COLORS = (cov_1tid035or1().s[2]++, ['#14232A', // Gunmetal
// '#213A45',
'#2E5261', // '#294957',
'#3B697D', // Paynes' Gray
// '#396679',
'#4A839C', // '#477E96', Teal Blue
'#5996B1', // '#639CB5',
'#74A8BE', // '#8Bb2C6',
'#90B9CB', // '#AACCBD8', // Columbia Blue
'#CBDEE6' // '#EEF4F7'
]);
cov_1tid035or1().s[3]++;
const dataToColors = data => {
  cov_1tid035or1().f[1]++;
  const columns = (cov_1tid035or1().s[4]++, data.map(item => {
    cov_1tid035or1().f[2]++;
    cov_1tid035or1().s[5]++;
    return item[0];
  }));
  const colors = (cov_1tid035or1().s[6]++, {});
  let colorIdx = (cov_1tid035or1().s[7]++, 0);
  cov_1tid035or1().s[8]++;
  columns.forEach(col => {
    cov_1tid035or1().f[3]++;
    cov_1tid035or1().s[9]++;

    if (colorIdx >= CHART_COLORS.length) {
      cov_1tid035or1().b[1][0]++;
      cov_1tid035or1().s[10]++;
      colorIdx = 0;
    } else {
      cov_1tid035or1().b[1][1]++;
    }

    cov_1tid035or1().s[11]++;
    colors[col] = CHART_COLORS[colorIdx];
    cov_1tid035or1().s[12]++;
    colorIdx += 1;
  });
  cov_1tid035or1().s[13]++;
  return colors;
};

/***/ }),

/***/ 37842:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "d": () => (/* binding */ useWindowDimensions)
/* harmony export */ });
/* unused harmony export getWindowDimensions */
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16689);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function cov_3n2jgjthm() {
  var path = "/workspace/meshplay/ui/utils/dimension.js";
  var hash = "61509892484bd35346f91d44231b9614a3700c49";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/utils/dimension.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 53
        },
        end: {
          line: 8,
          column: 59
        }
      },
      "1": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 12,
          column: 4
        }
      },
      "2": {
        start: {
          line: 33,
          column: 50
        },
        end: {
          line: 33,
          column: 81
        }
      },
      "3": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "4": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "5": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "6": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "7": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 51
        }
      },
      "8": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 52
        }
      },
      "9": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 68
        }
      },
      "10": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 48,
          column: 67
        }
      },
      "11": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 51,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "getWindowDimensions",
        decl: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 7,
            column: 35
          }
        },
        loc: {
          start: {
            line: 7,
            column: 38
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "useWindowDimensions",
        decl: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 35
          }
        },
        loc: {
          start: {
            line: 32,
            column: 38
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        loc: {
          start: {
            line: 35,
            column: 18
          },
          end: {
            line: 49,
            column: 3
          }
        },
        line: 35
      },
      "3": {
        name: "handleResize",
        decl: {
          start: {
            line: 38,
            column: 13
          },
          end: {
            line: 38,
            column: 25
          }
        },
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 34
          }
        },
        loc: {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 44,
            column: 7
          }
        },
        line: 42
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 12
          }
        },
        loc: {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 67
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 41,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 41,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "61509892484bd35346f91d44231b9614a3700c49"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_3n2jgjthm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_3n2jgjthm();

/**
 * getWindowDimensions - Returns the width and height of the window
 * @returns {object} {width, height}
 */

function getWindowDimensions() {
  cov_3n2jgjthm().f[0]++;
  const {
    innerWidth: width,
    innerHeight: height
  } = (cov_3n2jgjthm().s[0]++, window);
  cov_3n2jgjthm().s[1]++;
  return {
    width,
    height
  };
}
/**
 * useWindowDimensions - Returns the width and height of the window
 * @returns {object} {width, height}
 * @example
 * const { width, height } = useWindowDimensions();
 * console.log(width, height);
 * // 1920 1080
 */
// Description:
// useWindowDimensions, which is used to obtain and track the width and height
//  of the browser window. It leverages the useState and useEffect hooks to update
//  the window dimensions and provide them to the calling component.
// Eg:  React component that needs to respond to changes in the browser window's dimensions, for instance,
// to make responsive design decisions. You can use the useWindowDimensions hook to achieve this.

function useWindowDimensions() {
  cov_3n2jgjthm().f[1]++;
  const [windowDimensions, setWindowDimensions] = (cov_3n2jgjthm().s[2]++, (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getWindowDimensions()));
  cov_3n2jgjthm().s[3]++;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    cov_3n2jgjthm().f[2]++;
    let searchTimeout;

    function handleResize() {
      cov_3n2jgjthm().f[3]++;
      cov_3n2jgjthm().s[4]++;

      if (searchTimeout) {
        cov_3n2jgjthm().b[0][0]++;
        cov_3n2jgjthm().s[5]++;
        clearTimeout(searchTimeout);
      } else {
        cov_3n2jgjthm().b[0][1]++;
      }

      cov_3n2jgjthm().s[6]++;
      searchTimeout = setTimeout(() => {
        cov_3n2jgjthm().f[4]++;
        cov_3n2jgjthm().s[7]++;
        setWindowDimensions(getWindowDimensions());
      }, 500);
    }

    cov_3n2jgjthm().s[8]++;
    window.addEventListener('resize', handleResize);
    cov_3n2jgjthm().s[9]++;
    return () => {
      cov_3n2jgjthm().f[5]++;
      cov_3n2jgjthm().s[10]++;
      return window.removeEventListener('resize', handleResize);
    };
  }, []);
  cov_3n2jgjthm().s[11]++;
  return windowDimensions;
}

/***/ }),

/***/ 59077:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Y9": () => (/* binding */ getResourceStr),
  "bs": () => (/* binding */ resourceParsers),
  "Sy": () => (/* binding */ timeAgo)
});

// UNUSED EXPORTS: CLUSTER_ACTION_GRACE_PERIOD, TO_GB, TO_ONE_CPU, TO_ONE_M_CPU, compareUnits, formatDuration, getPercentStr, getReadyReplicas, getTotalReplicas, normalizeUnit, parseCpu, parseDiskSpace, parseRam, unparseCpu, unparseRam

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(46517);
var external_lodash_default = /*#__PURE__*/__webpack_require__.n(external_lodash_);
;// CONCATENATED MODULE: external "humanize-duration"
const external_humanize_duration_namespaceObject = require("humanize-duration");
var external_humanize_duration_default = /*#__PURE__*/__webpack_require__.n(external_humanize_duration_namespaceObject);
;// CONCATENATED MODULE: ./utils/k8s-utils.js
function cov_1c6euwq1rn() {
  var path = "/workspace/meshplay/ui/utils/k8s-utils.js";
  var hash = "9648a8048fc9ecfdc3db6768ff4788bfe03d5a5e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/utils/k8s-utils.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 45
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 14,
          column: 2
        }
      },
      "2": {
        start: {
          line: 6,
          column: 11
        },
        end: {
          line: 6,
          column: 14
        }
      },
      "3": {
        start: {
          line: 7,
          column: 12
        },
        end: {
          line: 7,
          column: 16
        }
      },
      "4": {
        start: {
          line: 8,
          column: 11
        },
        end: {
          line: 8,
          column: 14
        }
      },
      "5": {
        start: {
          line: 9,
          column: 11
        },
        end: {
          line: 9,
          column: 14
        }
      },
      "6": {
        start: {
          line: 10,
          column: 11
        },
        end: {
          line: 10,
          column: 14
        }
      },
      "7": {
        start: {
          line: 11,
          column: 11
        },
        end: {
          line: 11,
          column: 14
        }
      },
      "8": {
        start: {
          line: 12,
          column: 11
        },
        end: {
          line: 12,
          column: 14
        }
      },
      "9": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 16
        }
      },
      "10": {
        start: {
          line: 16,
          column: 43
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "11": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "12": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 22
        }
      },
      "13": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "14": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "15": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "16": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 69
        }
      },
      "17": {
        start: {
          line: 45,
          column: 31
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "18": {
        start: {
          line: 47,
          column: 2
        },
        end: {
          line: 53,
          column: 3
        }
      },
      "19": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "20": {
        start: {
          line: 55,
          column: 2
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "21": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "22": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 16
        }
      },
      "23": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "24": {
        start: {
          line: 69,
          column: 19
        },
        end: {
          line: 69,
          column: 46
        }
      },
      "25": {
        start: {
          line: 70,
          column: 2
        },
        end: {
          line: 70,
          column: 45
        }
      },
      "26": {
        start: {
          line: 74,
          column: 2
        },
        end: {
          line: 74,
          column: 67
        }
      },
      "27": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 78,
          column: 71
        }
      },
      "28": {
        start: {
          line: 84,
          column: 15
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "29": {
        start: {
          line: 85,
          column: 15
        },
        end: {
          line: 85,
          column: 57
        }
      },
      "30": {
        start: {
          line: 88,
          column: 2
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "31": {
        start: {
          line: 92,
          column: 13
        },
        end: {
          line: 92,
          column: 25
        }
      },
      "32": {
        start: {
          line: 94,
          column: 2
        },
        end: {
          line: 96,
          column: 3
        }
      },
      "33": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 30
        }
      },
      "34": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 98,
          column: 29
        }
      },
      "35": {
        start: {
          line: 99,
          column: 14
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "36": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "37": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 104,
          column: 24
        }
      },
      "38": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "39": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 63
        }
      },
      "40": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 64
        }
      },
      "41": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 12
        }
      },
      "42": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 82
        }
      },
      "43": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 33
        }
      },
      "44": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "45": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 22
        }
      },
      "46": {
        start: {
          line: 122,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "47": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 29
        }
      },
      "48": {
        start: {
          line: 124,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "49": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 36
        }
      },
      "50": {
        start: {
          line: 126,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "51": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 43
        }
      },
      "52": {
        start: {
          line: 128,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "53": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 50
        }
      },
      "54": {
        start: {
          line: 130,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "55": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 22
        }
      },
      "56": {
        start: {
          line: 132,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "57": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 29
        }
      },
      "58": {
        start: {
          line: 134,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "59": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 36
        }
      },
      "60": {
        start: {
          line: 136,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "61": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 22
        }
      },
      "62": {
        start: {
          line: 138,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "63": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 29
        }
      },
      "64": {
        start: {
          line: 140,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "65": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 36
        }
      },
      "66": {
        start: {
          line: 142,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "67": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 43
        }
      },
      "68": {
        start: {
          line: 144,
          column: 13
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "69": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 50
        }
      },
      "70": {
        start: {
          line: 148,
          column: 6
        },
        end: {
          line: 157,
          column: 7
        }
      },
      "71": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 39
        }
      },
      "72": {
        start: {
          line: 151,
          column: 22
        },
        end: {
          line: 151,
          column: 79
        }
      },
      "73": {
        start: {
          line: 152,
          column: 18
        },
        end: {
          line: 152,
          column: 22
        }
      },
      "74": {
        start: {
          line: 153,
          column: 19
        },
        end: {
          line: 153,
          column: 20
        }
      },
      "75": {
        start: {
          line: 154,
          column: 18
        },
        end: {
          line: 154,
          column: 59
        }
      },
      "76": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 55
        }
      },
      "77": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 95
        }
      },
      "78": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 12
        }
      },
      "79": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 161,
          column: 36
        }
      },
      "80": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 162,
          column: 12
        }
      },
      "81": {
        start: {
          line: 164,
          column: 2
        },
        end: {
          line: 164,
          column: 28
        }
      },
      "82": {
        start: {
          line: 167,
          column: 18
        },
        end: {
          line: 167,
          column: 60
        }
      },
      "83": {
        start: {
          line: 168,
          column: 14
        },
        end: {
          line: 168,
          column: 49
        }
      },
      "84": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 170,
          column: 39
        }
      },
      "85": {
        start: {
          line: 171,
          column: 28
        },
        end: {
          line: 171,
          column: 35
        }
      },
      "86": {
        start: {
          line: 172,
          column: 26
        },
        end: {
          line: 172,
          column: 36
        }
      },
      "87": {
        start: {
          line: 175,
          column: 2
        },
        end: {
          line: 175,
          column: 34
        }
      },
      "88": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 179,
          column: 34
        }
      },
      "89": {
        start: {
          line: 183,
          column: 2
        },
        end: {
          line: 183,
          column: 23
        }
      },
      "90": {
        start: {
          line: 183,
          column: 14
        },
        end: {
          line: 183,
          column: 23
        }
      },
      "91": {
        start: {
          line: 185,
          column: 17
        },
        end: {
          line: 185,
          column: 66
        }
      },
      "92": {
        start: {
          line: 186,
          column: 17
        },
        end: {
          line: 186,
          column: 40
        }
      },
      "93": {
        start: {
          line: 189,
          column: 2
        },
        end: {
          line: 191,
          column: 3
        }
      },
      "94": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 190,
          column: 18
        }
      },
      "95": {
        start: {
          line: 194,
          column: 2
        },
        end: {
          line: 196,
          column: 3
        }
      },
      "96": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 195,
          column: 50
        }
      },
      "97": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 198,
          column: 47
        }
      },
      "98": {
        start: {
          line: 201,
          column: 2
        },
        end: {
          line: 203,
          column: 3
        }
      },
      "99": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 202,
          column: 38
        }
      },
      "100": {
        start: {
          line: 206,
          column: 2
        },
        end: {
          line: 206,
          column: 36
        }
      },
      "101": {
        start: {
          line: 210,
          column: 10
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "102": {
        start: {
          line: 211,
          column: 2
        },
        end: {
          line: 214,
          column: 3
        }
      },
      "103": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 8
        }
      },
      "104": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 18
        }
      },
      "105": {
        start: {
          line: 216,
          column: 2
        },
        end: {
          line: 219,
          column: 4
        }
      },
      "106": {
        start: {
          line: 223,
          column: 2
        },
        end: {
          line: 223,
          column: 23
        }
      },
      "107": {
        start: {
          line: 223,
          column: 14
        },
        end: {
          line: 223,
          column: 23
        }
      },
      "108": {
        start: {
          line: 225,
          column: 17
        },
        end: {
          line: 225,
          column: 36
        }
      },
      "109": {
        start: {
          line: 226,
          column: 2
        },
        end: {
          line: 226,
          column: 41
        }
      },
      "110": {
        start: {
          line: 226,
          column: 27
        },
        end: {
          line: 226,
          column: 41
        }
      },
      "111": {
        start: {
          line: 227,
          column: 2
        },
        end: {
          line: 227,
          column: 48
        }
      },
      "112": {
        start: {
          line: 227,
          column: 27
        },
        end: {
          line: 227,
          column: 48
        }
      },
      "113": {
        start: {
          line: 228,
          column: 2
        },
        end: {
          line: 228,
          column: 55
        }
      },
      "114": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 228,
          column: 55
        }
      },
      "115": {
        start: {
          line: 229,
          column: 2
        },
        end: {
          line: 229,
          column: 37
        }
      },
      "116": {
        start: {
          line: 233,
          column: 17
        },
        end: {
          line: 233,
          column: 34
        }
      },
      "117": {
        start: {
          line: 235,
          column: 2
        },
        end: {
          line: 238,
          column: 4
        }
      },
      "118": {
        start: {
          line: 241,
          column: 31
        },
        end: {
          line: 244,
          column: 1
        }
      },
      "119": {
        start: {
          line: 247,
          column: 29
        },
        end: {
          line: 250,
          column: 3
        }
      },
      "120": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 59
        }
      },
      "121": {
        start: {
          line: 253,
          column: 2
        },
        end: {
          line: 253,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 5
          },
          end: {
            line: 6,
            column: 6
          }
        },
        loc: {
          start: {
            line: 6,
            column: 11
          },
          end: {
            line: 6,
            column: 14
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 6
          },
          end: {
            line: 7,
            column: 7
          }
        },
        loc: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 16
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 8,
            column: 5
          },
          end: {
            line: 8,
            column: 6
          }
        },
        loc: {
          start: {
            line: 8,
            column: 11
          },
          end: {
            line: 8,
            column: 14
          }
        },
        line: 8
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 9,
            column: 5
          },
          end: {
            line: 9,
            column: 6
          }
        },
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 14
          }
        },
        line: 9
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 10,
            column: 5
          },
          end: {
            line: 10,
            column: 6
          }
        },
        loc: {
          start: {
            line: 10,
            column: 11
          },
          end: {
            line: 10,
            column: 14
          }
        },
        line: 10
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 11,
            column: 5
          },
          end: {
            line: 11,
            column: 6
          }
        },
        loc: {
          start: {
            line: 11,
            column: 11
          },
          end: {
            line: 11,
            column: 14
          }
        },
        line: 11
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 12,
            column: 5
          },
          end: {
            line: 12,
            column: 6
          }
        },
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 14
          }
        },
        line: 12
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 13,
            column: 6
          },
          end: {
            line: 13,
            column: 7
          }
        },
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 16
          }
        },
        line: 13
      },
      "8": {
        name: "timeAgo",
        decl: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 23
          }
        },
        loc: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 25
      },
      "9": {
        name: "formatDuration",
        decl: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 30
          }
        },
        loc: {
          start: {
            line: 44,
            column: 50
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 44
      },
      "10": {
        name: "getPercentStr",
        decl: {
          start: {
            line: 64,
            column: 16
          },
          end: {
            line: 64,
            column: 29
          }
        },
        loc: {
          start: {
            line: 64,
            column: 44
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 64
      },
      "11": {
        name: "getReadyReplicas",
        decl: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 73,
            column: 32
          }
        },
        loc: {
          start: {
            line: 73,
            column: 39
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 73
      },
      "12": {
        name: "getTotalReplicas",
        decl: {
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 32
          }
        },
        loc: {
          start: {
            line: 77,
            column: 39
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 77
      },
      "13": {
        name: "compareUnits",
        decl: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 28
          }
        },
        loc: {
          start: {
            line: 82,
            column: 51
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 82
      },
      "14": {
        name: "normalizeUnit",
        decl: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 29
          }
        },
        loc: {
          start: {
            line: 91,
            column: 54
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 91
      },
      "15": {
        name: "parseDiskSpace",
        decl: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 174,
            column: 30
          }
        },
        loc: {
          start: {
            line: 174,
            column: 38
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 174
      },
      "16": {
        name: "parseRam",
        decl: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 178,
            column: 24
          }
        },
        loc: {
          start: {
            line: 178,
            column: 32
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 178
      },
      "17": {
        name: "parseUnitsOfBytes",
        decl: {
          start: {
            line: 182,
            column: 9
          },
          end: {
            line: 182,
            column: 26
          }
        },
        loc: {
          start: {
            line: 182,
            column: 34
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 182
      },
      "18": {
        name: "unparseRam",
        decl: {
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 209,
            column: 26
          }
        },
        loc: {
          start: {
            line: 209,
            column: 34
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 209
      },
      "19": {
        name: "parseCpu",
        decl: {
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 222,
            column: 24
          }
        },
        loc: {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 222
      },
      "20": {
        name: "unparseCpu",
        decl: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 232,
            column: 26
          }
        },
        loc: {
          start: {
            line: 232,
            column: 34
          },
          end: {
            line: 239,
            column: 1
          }
        },
        line: 232
      },
      "21": {
        name: "getResourceStr",
        decl: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 30
          }
        },
        loc: {
          start: {
            line: 246,
            column: 52
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 246
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 25,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 40
          },
          end: {
            line: 25,
            column: 42
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 10
          },
          end: {
            line: 45,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 45,
            column: 26
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 19
          },
          end: {
            line: 69,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 41
          },
          end: {
            line: 69,
            column: 42
          }
        }, {
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 69,
            column: 46
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 34
          }
        }, {
          start: {
            line: 74,
            column: 38
          },
          end: {
            line: 74,
            column: 61
          }
        }, {
          start: {
            line: 74,
            column: 65
          },
          end: {
            line: 74,
            column: 66
          }
        }],
        line: 74
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 27
          }
        }, {
          start: {
            line: 78,
            column: 31
          },
          end: {
            line: 78,
            column: 65
          }
        }, {
          start: {
            line: 78,
            column: 69
          },
          end: {
            line: 78,
            column: 70
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 2
          },
          end: {
            line: 96,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 2
          },
          end: {
            line: 96,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "9": {
        loc: {
          start: {
            line: 100,
            column: 2
          },
          end: {
            line: 163,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 110,
            column: 12
          }
        }, {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 158,
            column: 12
          }
        }, {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 12
          }
        }],
        line: 100
      },
      "10": {
        loc: {
          start: {
            line: 102,
            column: 27
          },
          end: {
            line: 104,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 10
          },
          end: {
            line: 103,
            column: 72
          }
        }, {
          start: {
            line: 104,
            column: 10
          },
          end: {
            line: 104,
            column: 23
          }
        }],
        line: 102
      },
      "11": {
        loc: {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        }, {
          start: {
            line: 107,
            column: 13
          },
          end: {
            line: 109,
            column: 7
          }
        }],
        line: 105
      },
      "12": {
        loc: {
          start: {
            line: 120,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 122,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 120
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 124,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 124,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 124
      },
      "15": {
        loc: {
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 126
      },
      "16": {
        loc: {
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 130,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 128
      },
      "17": {
        loc: {
          start: {
            line: 130,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 132,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 130
      },
      "18": {
        loc: {
          start: {
            line: 132,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 134,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 132
      },
      "19": {
        loc: {
          start: {
            line: 134,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 136,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 134
      },
      "20": {
        loc: {
          start: {
            line: 136,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 138,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 136
      },
      "21": {
        loc: {
          start: {
            line: 138,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 140,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 138
      },
      "22": {
        loc: {
          start: {
            line: 140,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 142,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 140
      },
      "23": {
        loc: {
          start: {
            line: 142,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: 144,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }],
        line: 142
      },
      "24": {
        loc: {
          start: {
            line: 144,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 13
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "25": {
        loc: {
          start: {
            line: 148,
            column: 6
          },
          end: {
            line: 157,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 6
          },
          end: {
            line: 157,
            column: 7
          }
        }, {
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 157,
            column: 7
          }
        }],
        line: 148
      },
      "26": {
        loc: {
          start: {
            line: 183,
            column: 2
          },
          end: {
            line: 183,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 2
          },
          end: {
            line: 183,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "27": {
        loc: {
          start: {
            line: 185,
            column: 17
          },
          end: {
            line: 185,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 17
          },
          end: {
            line: 185,
            column: 60
          }
        }, {
          start: {
            line: 185,
            column: 64
          },
          end: {
            line: 185,
            column: 66
          }
        }],
        line: 185
      },
      "28": {
        loc: {
          start: {
            line: 189,
            column: 2
          },
          end: {
            line: 191,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 2
          },
          end: {
            line: 191,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "29": {
        loc: {
          start: {
            line: 194,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "30": {
        loc: {
          start: {
            line: 201,
            column: 2
          },
          end: {
            line: 203,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 2
          },
          end: {
            line: 203,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "31": {
        loc: {
          start: {
            line: 211,
            column: 9
          },
          end: {
            line: 211,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 9
          },
          end: {
            line: 211,
            column: 22
          }
        }, {
          start: {
            line: 211,
            column: 26
          },
          end: {
            line: 211,
            column: 50
          }
        }],
        line: 211
      },
      "32": {
        loc: {
          start: {
            line: 223,
            column: 2
          },
          end: {
            line: 223,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 2
          },
          end: {
            line: 223,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "33": {
        loc: {
          start: {
            line: 226,
            column: 2
          },
          end: {
            line: 226,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 2
          },
          end: {
            line: 226,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "34": {
        loc: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "35": {
        loc: {
          start: {
            line: 228,
            column: 2
          },
          end: {
            line: 228,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 2
          },
          end: {
            line: 228,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9648a8048fc9ecfdc3db6768ff4788bfe03d5a5e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1c6euwq1rn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1c6euwq1rn();


const humanize = (cov_1c6euwq1rn().s[0]++, external_humanize_duration_default().humanizer());
cov_1c6euwq1rn().s[1]++;
humanize.languages['en-mini'] = {
  y: () => {
    cov_1c6euwq1rn().f[0]++;
    cov_1c6euwq1rn().s[2]++;
    return 'y';
  },
  mo: () => {
    cov_1c6euwq1rn().f[1]++;
    cov_1c6euwq1rn().s[3]++;
    return 'mo';
  },
  w: () => {
    cov_1c6euwq1rn().f[2]++;
    cov_1c6euwq1rn().s[4]++;
    return 'w';
  },
  d: () => {
    cov_1c6euwq1rn().f[3]++;
    cov_1c6euwq1rn().s[5]++;
    return 'd';
  },
  h: () => {
    cov_1c6euwq1rn().f[4]++;
    cov_1c6euwq1rn().s[6]++;
    return 'h';
  },
  m: () => {
    cov_1c6euwq1rn().f[5]++;
    cov_1c6euwq1rn().s[7]++;
    return 'm';
  },
  s: () => {
    cov_1c6euwq1rn().f[6]++;
    cov_1c6euwq1rn().s[8]++;
    return 's';
  },
  ms: () => {
    cov_1c6euwq1rn().f[7]++;
    cov_1c6euwq1rn().s[9]++;
    return 'ms';
  }
};
const CLUSTER_ACTION_GRACE_PERIOD = (cov_1c6euwq1rn().s[10]++, 5000); // ms

/**
 * Show the time passed since the given date, in the desired format.
 *
 * @param date - The date since which to calculate the duration.
 * @param options - `format` takes "brief" or "mini". "brief" rounds the date and uses the largest suitable unit (e.g. "4 weeks"). "mini" uses something like "4w" (for 4 weeks).
 * @returns The formatted date.
 */

function timeAgo(date, options = (cov_1c6euwq1rn().b[0][0]++, {})) {
  cov_1c6euwq1rn().f[8]++;
  const fromDate = (cov_1c6euwq1rn().s[11]++, new Date(date));
  let now = (cov_1c6euwq1rn().s[12]++, new Date());
  cov_1c6euwq1rn().s[13]++;

  if (process.env.UNDER_TEST === 'true') {
    cov_1c6euwq1rn().b[1][0]++;
    // For testing, we consider the current moment to be 3 months from the dates we are testing.
    const days = (cov_1c6euwq1rn().s[14]++, 24 * 3600 * 1000); // in ms

    cov_1c6euwq1rn().s[15]++;
    now = new Date(fromDate.getTime() + 90 * days);
  } else {
    cov_1c6euwq1rn().b[1][1]++;
  }

  cov_1c6euwq1rn().s[16]++;
  return formatDuration(now.getTime() - fromDate.getTime(), options);
}
/** Format a duration in milliseconds to a human-readable string.
 *
 * @param duration - The duration in milliseconds.
 * @param options - `format` takes "brief" or "mini". "brief" rounds the date and uses the largest suitable unit (e.g. "4 weeks"). "mini" uses something like "4w" (for 4 weeks).
 * @returns The formatted duration.
 * */

function formatDuration(duration, options) {
  cov_1c6euwq1rn().f[9]++;
  const {
    format = (cov_1c6euwq1rn().b[2][0]++, 'brief')
  } = (cov_1c6euwq1rn().s[17]++, options);
  cov_1c6euwq1rn().s[18]++;

  if (format === 'brief') {
    cov_1c6euwq1rn().b[3][0]++;
    cov_1c6euwq1rn().s[19]++;
    return humanize(duration, {
      fallbacks: ['en'],
      round: true,
      largest: 1
    });
  } else {
    cov_1c6euwq1rn().b[3][1]++;
  }

  cov_1c6euwq1rn().s[20]++;
  return humanize(duration, {
    language: 'en-mini',
    spacer: '',
    fallbacks: ['en'],
    round: true,
    largest: 1
  });
}
function getPercentStr(value, total) {
  cov_1c6euwq1rn().f[10]++;
  cov_1c6euwq1rn().s[21]++;

  if (total === 0) {
    cov_1c6euwq1rn().b[4][0]++;
    cov_1c6euwq1rn().s[22]++;
    return null;
  } else {
    cov_1c6euwq1rn().b[4][1]++;
  }

  const percentage = (cov_1c6euwq1rn().s[23]++, value / total * 100);
  const decimals = (cov_1c6euwq1rn().s[24]++, percentage % 10 > 0 ? (cov_1c6euwq1rn().b[5][0]++, 1) : (cov_1c6euwq1rn().b[5][1]++, 0));
  cov_1c6euwq1rn().s[25]++;
  return `${percentage.toFixed(decimals)} %`;
}
function getReadyReplicas(item) {
  cov_1c6euwq1rn().f[11]++;
  cov_1c6euwq1rn().s[26]++;
  return (cov_1c6euwq1rn().b[6][0]++, item.status.readyReplicas) || (cov_1c6euwq1rn().b[6][1]++, item.status.numberReady) || (cov_1c6euwq1rn().b[6][2]++, 0);
}
function getTotalReplicas(item) {
  cov_1c6euwq1rn().f[12]++;
  cov_1c6euwq1rn().s[27]++;
  return (cov_1c6euwq1rn().b[7][0]++, item.spec.replicas) || (cov_1c6euwq1rn().b[7][1]++, item.status.currentNumberScheduled) || (cov_1c6euwq1rn().b[7][2]++, 0);
} // compareUnits compares two units and returns true if they are equal

function compareUnits(quantity1, quantity2) {
  cov_1c6euwq1rn().f[13]++;
  // strip whitespace and convert to lowercase
  const qty1 = (cov_1c6euwq1rn().s[28]++, quantity1.replace(/\s/g, '').toLowerCase());
  const qty2 = (cov_1c6euwq1rn().s[29]++, quantity2.replace(/\s/g, '').toLowerCase()); // compare numbers

  cov_1c6euwq1rn().s[30]++;
  return parseInt(qty1) === parseInt(qty2);
}
function normalizeUnit(resourceType, quantity) {
  cov_1c6euwq1rn().f[14]++;
  let type = (cov_1c6euwq1rn().s[31]++, resourceType);
  cov_1c6euwq1rn().s[32]++;

  if (type.includes('.')) {
    cov_1c6euwq1rn().b[8][0]++;
    cov_1c6euwq1rn().s[33]++;
    type = type.split('.')[1];
  } else {
    cov_1c6euwq1rn().b[8][1]++;
  }

  let normalizedQuantity = (cov_1c6euwq1rn().s[34]++, '');
  let bytes = (cov_1c6euwq1rn().s[35]++, 0);
  cov_1c6euwq1rn().s[36]++;

  switch (type) {
    case 'cpu':
      cov_1c6euwq1rn().b[9][0]++;
      cov_1c6euwq1rn().s[37]++;
      normalizedQuantity = quantity?.endsWith('m') ? (cov_1c6euwq1rn().b[10][0]++, `${Number(quantity.substring(0, quantity.length - 1)) / 1000}`) : (cov_1c6euwq1rn().b[10][1]++, `${quantity}`);
      cov_1c6euwq1rn().s[38]++;

      if (normalizedQuantity === '1') {
        cov_1c6euwq1rn().b[11][0]++;
        cov_1c6euwq1rn().s[39]++;
        normalizedQuantity = normalizedQuantity + ' ' + 'core';
      } else {
        cov_1c6euwq1rn().b[11][1]++;
        cov_1c6euwq1rn().s[40]++;
        normalizedQuantity = normalizedQuantity + ' ' + 'cores';
      }

      cov_1c6euwq1rn().s[41]++;
      break;

    case 'memory':
      cov_1c6euwq1rn().b[9][1]++;
      cov_1c6euwq1rn().s[42]++;

      /**
       * Decimal: m | n | "" | k | M | G | T | P | E
       * Binary: Ki | Mi | Gi | Ti | Pi | Ei
       * Refer https://github.com/kubernetes-client/csharp/blob/840a90e24ef922adee0729e43859cf6b43567594/src/KubernetesClient.Models/ResourceQuantity.cs#L211
       */
      console.log('debug:', quantity, parseInt(quantity), quantity.endsWith('m'));
      cov_1c6euwq1rn().s[43]++;
      bytes = parseInt(quantity);
      cov_1c6euwq1rn().s[44]++;

      if (quantity.endsWith('Ki')) {
        cov_1c6euwq1rn().b[12][0]++;
        cov_1c6euwq1rn().s[45]++;
        bytes *= 1024;
      } else {
        cov_1c6euwq1rn().b[12][1]++;
        cov_1c6euwq1rn().s[46]++;

        if (quantity.endsWith('Mi')) {
          cov_1c6euwq1rn().b[13][0]++;
          cov_1c6euwq1rn().s[47]++;
          bytes *= 1024 * 1024;
        } else {
          cov_1c6euwq1rn().b[13][1]++;
          cov_1c6euwq1rn().s[48]++;

          if (quantity.endsWith('Gi')) {
            cov_1c6euwq1rn().b[14][0]++;
            cov_1c6euwq1rn().s[49]++;
            bytes *= 1024 * 1024 * 1024;
          } else {
            cov_1c6euwq1rn().b[14][1]++;
            cov_1c6euwq1rn().s[50]++;

            if (quantity.endsWith('Ti')) {
              cov_1c6euwq1rn().b[15][0]++;
              cov_1c6euwq1rn().s[51]++;
              bytes *= 1024 * 1024 * 1024 * 1024;
            } else {
              cov_1c6euwq1rn().b[15][1]++;
              cov_1c6euwq1rn().s[52]++;

              if (quantity.endsWith('Ei')) {
                cov_1c6euwq1rn().b[16][0]++;
                cov_1c6euwq1rn().s[53]++;
                bytes *= 1024 * 1024 * 1024 * 1024 * 1024;
              } else {
                cov_1c6euwq1rn().b[16][1]++;
                cov_1c6euwq1rn().s[54]++;

                if (quantity.endsWith('m')) {
                  cov_1c6euwq1rn().b[17][0]++;
                  cov_1c6euwq1rn().s[55]++;
                  bytes /= 1000;
                } else {
                  cov_1c6euwq1rn().b[17][1]++;
                  cov_1c6euwq1rn().s[56]++;

                  if (quantity.endsWith('u')) {
                    cov_1c6euwq1rn().b[18][0]++;
                    cov_1c6euwq1rn().s[57]++;
                    bytes /= 1000 * 1000;
                  } else {
                    cov_1c6euwq1rn().b[18][1]++;
                    cov_1c6euwq1rn().s[58]++;

                    if (quantity.endsWith('n')) {
                      cov_1c6euwq1rn().b[19][0]++;
                      cov_1c6euwq1rn().s[59]++;
                      bytes /= 1000 * 1000 * 1000;
                    } else {
                      cov_1c6euwq1rn().b[19][1]++;
                      cov_1c6euwq1rn().s[60]++;

                      if (quantity.endsWith('k')) {
                        cov_1c6euwq1rn().b[20][0]++;
                        cov_1c6euwq1rn().s[61]++;
                        bytes *= 1000;
                      } else {
                        cov_1c6euwq1rn().b[20][1]++;
                        cov_1c6euwq1rn().s[62]++;

                        if (quantity.endsWith('M')) {
                          cov_1c6euwq1rn().b[21][0]++;
                          cov_1c6euwq1rn().s[63]++;
                          bytes *= 1000 * 1000;
                        } else {
                          cov_1c6euwq1rn().b[21][1]++;
                          cov_1c6euwq1rn().s[64]++;

                          if (quantity.endsWith('G')) {
                            cov_1c6euwq1rn().b[22][0]++;
                            cov_1c6euwq1rn().s[65]++;
                            bytes *= 1000 * 1000 * 1000;
                          } else {
                            cov_1c6euwq1rn().b[22][1]++;
                            cov_1c6euwq1rn().s[66]++;

                            if (quantity.endsWith('T')) {
                              cov_1c6euwq1rn().b[23][0]++;
                              cov_1c6euwq1rn().s[67]++;
                              bytes *= 1000 * 1000 * 1000 * 1000;
                            } else {
                              cov_1c6euwq1rn().b[23][1]++;
                              cov_1c6euwq1rn().s[68]++;

                              if (quantity.endsWith('E')) {
                                cov_1c6euwq1rn().b[24][0]++;
                                cov_1c6euwq1rn().s[69]++;
                                bytes *= 1000 * 1000 * 1000 * 1000 * 1000;
                              } else {
                                cov_1c6euwq1rn().b[24][1]++;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      cov_1c6euwq1rn().s[70]++;

      if (bytes === 0) {
        cov_1c6euwq1rn().b[25][0]++;
        cov_1c6euwq1rn().s[71]++;
        normalizedQuantity = '0 Bytes';
      } else {
        cov_1c6euwq1rn().b[25][1]++;
        const sizes = (cov_1c6euwq1rn().s[72]++, ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']);
        const k = (cov_1c6euwq1rn().s[73]++, 1000);
        const dm = (cov_1c6euwq1rn().s[74]++, 2);
        const i = (cov_1c6euwq1rn().s[75]++, Math.floor(Math.log(bytes) / Math.log(k)));
        cov_1c6euwq1rn().s[76]++;
        console.debug('debug bytes:', bytes, i, sizes);
        cov_1c6euwq1rn().s[77]++;
        normalizedQuantity = parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
      }

      cov_1c6euwq1rn().s[78]++;
      break;

    default:
      cov_1c6euwq1rn().b[9][2]++;
      cov_1c6euwq1rn().s[79]++;
      normalizedQuantity = quantity;
      cov_1c6euwq1rn().s[80]++;
      break;
  }

  cov_1c6euwq1rn().s[81]++;
  return normalizedQuantity;
}
const RAM_TYPES = (cov_1c6euwq1rn().s[82]++, ['Bi', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei']);
const UNITS = (cov_1c6euwq1rn().s[83]++, ['B', 'K', 'M', 'G', 'T', 'P', 'E']);
const TO_GB = (cov_1c6euwq1rn().s[84]++, 1024 * 1024 * 1024);
const TO_ONE_M_CPU = (cov_1c6euwq1rn().s[85]++, 1000000);
const TO_ONE_CPU = (cov_1c6euwq1rn().s[86]++, 1000000000);
function parseDiskSpace(value) {
  cov_1c6euwq1rn().f[15]++;
  cov_1c6euwq1rn().s[87]++;
  return parseUnitsOfBytes(value);
}
function parseRam(value) {
  cov_1c6euwq1rn().f[16]++;
  cov_1c6euwq1rn().s[88]++;
  return parseUnitsOfBytes(value);
}

function parseUnitsOfBytes(value) {
  cov_1c6euwq1rn().f[17]++;
  cov_1c6euwq1rn().s[89]++;

  if (!value) {
    cov_1c6euwq1rn().b[26][0]++;
    cov_1c6euwq1rn().s[90]++;
    return 0;
  } else {
    cov_1c6euwq1rn().b[26][1]++;
  }

  const groups = (cov_1c6euwq1rn().s[91]++, (cov_1c6euwq1rn().b[27][0]++, value.match(/(\d+)([BKMGTPEe])?(i)?(\d+)?/)) || (cov_1c6euwq1rn().b[27][1]++, []));
  const number = (cov_1c6euwq1rn().s[92]++, parseInt(groups[1], 10)); // number ex. 1000

  cov_1c6euwq1rn().s[93]++;

  if (groups[2] === undefined) {
    cov_1c6euwq1rn().b[28][0]++;
    cov_1c6euwq1rn().s[94]++;
    return number;
  } else {
    cov_1c6euwq1rn().b[28][1]++;
  } // number with exponent ex. 1e3


  cov_1c6euwq1rn().s[95]++;

  if (groups[4] !== undefined) {
    cov_1c6euwq1rn().b[29][0]++;
    cov_1c6euwq1rn().s[96]++;
    return number * 10 ** parseInt(groups[4], 10);
  } else {
    cov_1c6euwq1rn().b[29][1]++;
  }

  const unitIndex = (cov_1c6euwq1rn().s[97]++, external_lodash_default().indexOf(UNITS, groups[2])); // Unit + i ex. 1Ki

  cov_1c6euwq1rn().s[98]++;

  if (groups[3] !== undefined) {
    cov_1c6euwq1rn().b[30][0]++;
    cov_1c6euwq1rn().s[99]++;
    return number * 1024 ** unitIndex;
  } else {
    cov_1c6euwq1rn().b[30][1]++;
  } // Unit ex. 1K


  cov_1c6euwq1rn().s[100]++;
  return number * 1000 ** unitIndex;
}

function unparseRam(value) {
  cov_1c6euwq1rn().f[18]++;
  let i = (cov_1c6euwq1rn().s[101]++, 0);
  cov_1c6euwq1rn().s[102]++;

  while ((cov_1c6euwq1rn().b[31][0]++, value >= 1024) && (cov_1c6euwq1rn().b[31][1]++, i < RAM_TYPES.length - 1)) {
    cov_1c6euwq1rn().s[103]++;
    i++;
    cov_1c6euwq1rn().s[104]++;
    value /= 1024; // eslint-disable-line no-param-reassign
  }

  cov_1c6euwq1rn().s[105]++;
  return {
    value: external_lodash_default().round(value, 1),
    unit: RAM_TYPES[i]
  };
}
function parseCpu(value) {
  cov_1c6euwq1rn().f[19]++;
  cov_1c6euwq1rn().s[106]++;

  if (!value) {
    cov_1c6euwq1rn().b[32][0]++;
    cov_1c6euwq1rn().s[107]++;
    return 0;
  } else {
    cov_1c6euwq1rn().b[32][1]++;
  }

  const number = (cov_1c6euwq1rn().s[108]++, parseInt(value, 10));
  cov_1c6euwq1rn().s[109]++;

  if (value.endsWith('n')) {
    cov_1c6euwq1rn().b[33][0]++;
    cov_1c6euwq1rn().s[110]++;
    return number;
  } else {
    cov_1c6euwq1rn().b[33][1]++;
  }

  cov_1c6euwq1rn().s[111]++;

  if (value.endsWith('u')) {
    cov_1c6euwq1rn().b[34][0]++;
    cov_1c6euwq1rn().s[112]++;
    return number * 1000;
  } else {
    cov_1c6euwq1rn().b[34][1]++;
  }

  cov_1c6euwq1rn().s[113]++;

  if (value.endsWith('m')) {
    cov_1c6euwq1rn().b[35][0]++;
    cov_1c6euwq1rn().s[114]++;
    return number * 1000 * 1000;
  } else {
    cov_1c6euwq1rn().b[35][1]++;
  }

  cov_1c6euwq1rn().s[115]++;
  return number * 1000 * 1000 * 1000;
}
function unparseCpu(value) {
  cov_1c6euwq1rn().f[20]++;
  const result = (cov_1c6euwq1rn().s[116]++, parseFloat(value));
  cov_1c6euwq1rn().s[117]++;
  return {
    value: external_lodash_default().round(result / 1000000, 2),
    unit: 'm'
  };
}
const resourceParsers = (cov_1c6euwq1rn().s[118]++, {
  cpu: parseCpu,
  memory: parseRam
});
function getResourceStr(value, resourceType) {
  cov_1c6euwq1rn().f[21]++;
  const resourceFormatters = (cov_1c6euwq1rn().s[119]++, {
    cpu: unparseCpu,
    memory: unparseRam
  });
  const valueInfo = (cov_1c6euwq1rn().s[120]++, resourceFormatters[resourceType](value));
  cov_1c6euwq1rn().s[121]++;
  return `${valueInfo.value}${valueInfo.unit}`;
}

/***/ }),

/***/ 80661:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D": () => (/* binding */ updateVisibleColumns)
/* harmony export */ });
function cov_1v1h9oxwgc() {
  var path = "/workspace/meshplay/ui/utils/responsive-column.js";
  var hash = "fcdbe8fecf148b8be59070e5baee4a630624aa51";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/meshplay/ui/utils/responsive-column.js",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 36
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "1": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "2": {
        start: {
          line: 27,
          column: 35
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "3": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "4": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "5": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "6": {
        start: {
          line: 35,
          column: 37
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "7": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 36,
          column: 63
        }
      },
      "8": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "9": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 35
        }
      },
      "10": {
        start: {
          line: 41,
          column: 11
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "11": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 34
        }
      },
      "12": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "13": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 49,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 15,
            column: 37
          }
        },
        loc: {
          start: {
            line: 15,
            column: 57
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 36
          }
        },
        loc: {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 19
          },
          end: {
            line: 34,
            column: 20
          }
        },
        loc: {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 34
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 36
          }
        }, {
          start: {
            line: 28,
            column: 40
          },
          end: {
            line: 28,
            column: 41
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 46,
            column: 5
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: 43,
            column: 11
          },
          end: {
            line: 46,
            column: 5
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fcdbe8fecf148b8be59070e5baee4a630624aa51"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1v1h9oxwgc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1v1h9oxwgc();
cov_1v1h9oxwgc().s[0]++;

/**
 * updateVisibleColumns Function
 *
 * Purpose:
 * This function calculates which columns should be visible based on the provided screen sizes and the current screen width.
 *
 * Input:
 * @param {Array} colViews - An array of column views, where each element is an array containing the column name and the screen size till which it should be visible.
 * @param {number} width - The current screen width.
 *
 * Output:
 * @returns {Object} - An object representing column visibility, where keys are column names, and values are booleans indicating visibility.
 */
const updateVisibleColumns = (colViews, width) => {
  cov_1v1h9oxwgc().f[0]++;
  // Create a mapping of screen sizes to their minimum widths
  const screenSizeMap = (cov_1v1h9oxwgc().s[1]++, {
    na: 0,
    xs: 585,
    s: 690,
    m: 775,
    l: 915,
    xl: 1140
  }); // Determine the minimum width for visibility based on the provided screen size

  cov_1v1h9oxwgc().s[2]++;

  const getMinWidthForScreenSize = screenSize => {
    cov_1v1h9oxwgc().f[1]++;
    cov_1v1h9oxwgc().s[3]++;
    return (cov_1v1h9oxwgc().b[0][0]++, screenSizeMap[screenSize]) || (cov_1v1h9oxwgc().b[0][1]++, 0);
  }; // Initialize showCols as an empty object


  const showCols = (cov_1v1h9oxwgc().s[4]++, {});
  cov_1v1h9oxwgc().s[5]++;
  colViews.forEach(col => {
    cov_1v1h9oxwgc().f[2]++;
    const [columnName, screenSize] = (cov_1v1h9oxwgc().s[6]++, col);
    const minScreenWidth = (cov_1v1h9oxwgc().s[7]++, getMinWidthForScreenSize(screenSize)); // Determine if the column should be visible based on screen width and rules

    cov_1v1h9oxwgc().s[8]++;

    if (screenSize === 'na') {
      cov_1v1h9oxwgc().b[1][0]++;
      cov_1v1h9oxwgc().s[9]++;
      showCols[columnName] = false; // "na" columns are not visible in any screen size
    } else {
      cov_1v1h9oxwgc().b[1][1]++;
      cov_1v1h9oxwgc().s[10]++;

      if (screenSize === 'xs') {
        cov_1v1h9oxwgc().b[2][0]++;
        cov_1v1h9oxwgc().s[11]++;
        showCols[columnName] = true; // "xs" columns are visible in all screen sizes
      } else {
        cov_1v1h9oxwgc().b[2][1]++;
        cov_1v1h9oxwgc().s[12]++;
        // For other screen sizes, check if the screen width is greater than or equal to the minimum width
        showCols[columnName] = width >= minScreenWidth;
      }
    }
  });
  cov_1v1h9oxwgc().s[13]++;
  return showCols;
};

/***/ }),

/***/ 65696:
/***/ ((module) => {

module.exports = require("@date-io/moment");

/***/ }),

/***/ 87197:
/***/ ((module) => {

module.exports = require("@fortawesome/react-fontawesome");

/***/ }),

/***/ 7352:
/***/ ((module) => {

module.exports = require("@khulnasoft/sistent");

/***/ }),

/***/ 8130:
/***/ ((module) => {

module.exports = require("@material-ui/core");

/***/ }),

/***/ 8736:
/***/ ((module) => {

module.exports = require("@material-ui/core/AppBar");

/***/ }),

/***/ 86489:
/***/ ((module) => {

module.exports = require("@material-ui/core/Badge");

/***/ }),

/***/ 37730:
/***/ ((module) => {

module.exports = require("@material-ui/core/ClickAwayListener");

/***/ }),

/***/ 13033:
/***/ ((module) => {

module.exports = require("@material-ui/core/CssBaseline");

/***/ }),

/***/ 92217:
/***/ ((module) => {

module.exports = require("@material-ui/core/Divider");

/***/ }),

/***/ 95555:
/***/ ((module) => {

module.exports = require("@material-ui/core/Drawer");

/***/ }),

/***/ 13266:
/***/ ((module) => {

module.exports = require("@material-ui/core/Grid");

/***/ }),

/***/ 76491:
/***/ ((module) => {

module.exports = require("@material-ui/core/Grow");

/***/ }),

/***/ 16403:
/***/ ((module) => {

module.exports = require("@material-ui/core/Hidden");

/***/ }),

/***/ 83974:
/***/ ((module) => {

module.exports = require("@material-ui/core/IconButton");

/***/ }),

/***/ 65031:
/***/ ((module) => {

module.exports = require("@material-ui/core/List");

/***/ }),

/***/ 26256:
/***/ ((module) => {

module.exports = require("@material-ui/core/ListItem");

/***/ }),

/***/ 63181:
/***/ ((module) => {

module.exports = require("@material-ui/core/ListItemIcon");

/***/ }),

/***/ 45168:
/***/ ((module) => {

module.exports = require("@material-ui/core/ListItemText");

/***/ }),

/***/ 48250:
/***/ ((module) => {

module.exports = require("@material-ui/core/MenuItem");

/***/ }),

/***/ 50073:
/***/ ((module) => {

module.exports = require("@material-ui/core/MenuList");

/***/ }),

/***/ 32093:
/***/ ((module) => {

module.exports = require("@material-ui/core/NoSsr");

/***/ }),

/***/ 40640:
/***/ ((module) => {

module.exports = require("@material-ui/core/Paper");

/***/ }),

/***/ 12767:
/***/ ((module) => {

module.exports = require("@material-ui/core/Popper");

/***/ }),

/***/ 7686:
/***/ ((module) => {

module.exports = require("@material-ui/core/Slide");

/***/ }),

/***/ 55722:
/***/ ((module) => {

module.exports = require("@material-ui/core/Toolbar");

/***/ }),

/***/ 14032:
/***/ ((module) => {

module.exports = require("@material-ui/core/Zoom");

/***/ }),

/***/ 55223:
/***/ ((module) => {

module.exports = require("@material-ui/core/colors");

/***/ }),

/***/ 4263:
/***/ ((module) => {

module.exports = require("@material-ui/core/colors/blue");

/***/ }),

/***/ 48308:
/***/ ((module) => {

module.exports = require("@material-ui/core/styles");

/***/ }),

/***/ 89957:
/***/ ((module) => {

module.exports = require("@material-ui/core/styles/createBreakpoints");

/***/ }),

/***/ 72105:
/***/ ((module) => {

module.exports = require("@material-ui/icons");

/***/ }),

/***/ 3935:
/***/ ((module) => {

module.exports = require("@material-ui/icons/Add");

/***/ }),

/***/ 56518:
/***/ ((module) => {

module.exports = require("@material-ui/icons/AddCircleOutline");

/***/ }),

/***/ 14380:
/***/ ((module) => {

module.exports = require("@material-ui/icons/ArrowDropDown");

/***/ }),

/***/ 17501:
/***/ ((module) => {

module.exports = require("@material-ui/icons/Close");

/***/ }),

/***/ 62857:
/***/ ((module) => {

module.exports = require("@material-ui/icons/Dashboard");

/***/ }),

/***/ 9899:
/***/ ((module) => {

module.exports = require("@material-ui/icons/Favorite");

/***/ }),

/***/ 82483:
/***/ ((module) => {

module.exports = require("@material-ui/icons/Help");

/***/ }),

/***/ 44176:
/***/ ((module) => {

module.exports = require("@material-ui/icons/Menu");

/***/ }),

/***/ 83390:
/***/ ((module) => {

module.exports = require("@material-ui/icons/OpenInNew");

/***/ }),

/***/ 57149:
/***/ ((module) => {

module.exports = require("@material-ui/icons/Remove");

/***/ }),

/***/ 88314:
/***/ ((module) => {

module.exports = require("@material-ui/pickers");

/***/ }),

/***/ 6913:
/***/ ((module) => {

module.exports = require("@mui/icons-material/AssignmentTurnedIn");

/***/ }),

/***/ 66741:
/***/ ((module) => {

module.exports = require("@mui/icons-material/CheckCircle");

/***/ }),

/***/ 4334:
/***/ ((module) => {

module.exports = require("@mui/icons-material/DeleteForever");

/***/ }),

/***/ 10025:
/***/ ((module) => {

module.exports = require("@mui/icons-material/Explore");

/***/ }),

/***/ 78790:
/***/ ((module) => {

module.exports = require("@mui/icons-material/Handyman");

/***/ }),

/***/ 1034:
/***/ ((module) => {

module.exports = require("@mui/icons-material/NotInterestedRounded");

/***/ }),

/***/ 80276:
/***/ ((module) => {

module.exports = require("@mui/icons-material/RemoveCircle");

/***/ }),

/***/ 65692:
/***/ ((module) => {

module.exports = require("@mui/material");

/***/ }),

/***/ 18442:
/***/ ((module) => {

module.exports = require("@mui/material/styles");

/***/ }),

/***/ 41972:
/***/ ((module) => {

module.exports = require("@paciolan/remote-component");

/***/ }),

/***/ 56807:
/***/ ((module) => {

module.exports = require("@redux-devtools/extension");

/***/ }),

/***/ 75184:
/***/ ((module) => {

module.exports = require("@reduxjs/toolkit");

/***/ }),

/***/ 34335:
/***/ ((module) => {

module.exports = require("@reduxjs/toolkit/query/react");

/***/ }),

/***/ 75888:
/***/ ((module) => {

module.exports = require("ajv");

/***/ }),

/***/ 59003:
/***/ ((module) => {

module.exports = require("classnames");

/***/ }),

/***/ 68103:
/***/ ((module) => {

module.exports = require("clsx");

/***/ }),

/***/ 45572:
/***/ ((module) => {

module.exports = require("immutable");

/***/ }),

/***/ 20701:
/***/ ((module) => {

module.exports = require("jss");

/***/ }),

/***/ 46517:
/***/ ((module) => {

module.exports = require("lodash");

/***/ }),

/***/ 32245:
/***/ ((module) => {

module.exports = require("moment");

/***/ }),

/***/ 35648:
/***/ ((module) => {

module.exports = require("next-redux-wrapper");

/***/ }),

/***/ 3280:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/app-router-context.js");

/***/ }),

/***/ 92796:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/head-manager-context.js");

/***/ }),

/***/ 34014:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ 78524:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ 78020:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ 64406:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/page-path/denormalize-page-path.js");

/***/ }),

/***/ 24964:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ 11751:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/add-path-prefix.js");

/***/ }),

/***/ 46220:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/compare-states.js");

/***/ }),

/***/ 10299:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/format-next-pathname-info.js");

/***/ }),

/***/ 23938:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/format-url.js");

/***/ }),

/***/ 29565:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ 35789:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/get-next-pathname-info.js");

/***/ }),

/***/ 1897:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/is-bot.js");

/***/ }),

/***/ 1428:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ 28854:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/parse-path.js");

/***/ }),

/***/ 91292:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ 34567:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/path-has-prefix.js");

/***/ }),

/***/ 80979:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ 93297:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/remove-trailing-slash.js");

/***/ }),

/***/ 36052:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ 84226:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ 95052:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ 59232:
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ 40968:
/***/ ((module) => {

module.exports = require("next/head");

/***/ }),

/***/ 71853:
/***/ ((module) => {

module.exports = require("next/router");

/***/ }),

/***/ 73142:
/***/ ((module) => {

module.exports = require("notistack");

/***/ }),

/***/ 580:
/***/ ((module) => {

module.exports = require("prop-types");

/***/ }),

/***/ 16689:
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ 6022:
/***/ ((module) => {

module.exports = require("react-redux");

/***/ }),

/***/ 66516:
/***/ ((module) => {

module.exports = require("react-relay");

/***/ }),

/***/ 36158:
/***/ ((module) => {

module.exports = require("react-share");

/***/ }),

/***/ 20997:
/***/ ((module) => {

module.exports = require("react/jsx-runtime");

/***/ }),

/***/ 86695:
/***/ ((module) => {

module.exports = require("redux");

/***/ }),

/***/ 8417:
/***/ ((module) => {

module.exports = require("redux-thunk");

/***/ }),

/***/ 42825:
/***/ ((module) => {

module.exports = require("relay-runtime");

/***/ }),

/***/ 66583:
/***/ ((module) => {

module.exports = import("@casl/ability");;

/***/ }),

/***/ 44563:
/***/ ((module) => {

module.exports = import("@fortawesome/free-solid-svg-icons");;

/***/ }),

/***/ 93044:
/***/ ((module) => {

module.exports = import("@xstate/react");;

/***/ }),

/***/ 20722:
/***/ ((module) => {

module.exports = import("billboard.js");;

/***/ }),

/***/ 2024:
/***/ ((module) => {

module.exports = import("graphql-ws");;

/***/ }),

/***/ 12134:
/***/ ((module) => {

module.exports = import("isomorphic-unfetch");;

/***/ }),

/***/ 10626:
/***/ ((module) => {

module.exports = import("js-yaml");;

/***/ }),

/***/ 46812:
/***/ ((module) => {

module.exports = import("react-error-boundary");;

/***/ }),

/***/ 51283:
/***/ ((module) => {

module.exports = import("universal-cookie");;

/***/ }),

/***/ 46555:
/***/ ((module) => {

module.exports = import("uuid");;

/***/ }),

/***/ 44709:
/***/ ((module) => {

module.exports = import("xstate");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, [676,1664,7544,8885,3113,7533,5516,3114,5484,6811,9449,6815,1913,1188,1924,1029,2204,1104,7976,7526,5299,5042,8813,1462,1398,8716,8859,317,6568,5531,2551], () => (__webpack_exec__(82748)));
module.exports = __webpack_exports__;

})();